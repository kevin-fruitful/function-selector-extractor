{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "buyAmount",
          "type": "uint256"
        }
      ],
      "name": "calculateTradingCommissions",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "roughCommissionPaid",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "commissionNaymsLtd",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "commissionNDF",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "commissionSTM",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "commissionMaker",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalCommissions",
              "type": "uint256"
            }
          ],
          "internalType": "struct TradingCommissions",
          "name": "tc",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_offerId",
          "type": "uint256"
        }
      ],
      "name": "cancelOffer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_sellToken",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "_sellAmount",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "_buyToken",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "_buyAmount",
          "type": "uint256"
        }
      ],
      "name": "executeLimitOffer",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "offerId_",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "buyTokenCommissionsPaid_",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "sellTokenCommissionsPaid_",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_sellToken",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "_buyToken",
          "type": "bytes32"
        }
      ],
      "name": "getBestOfferId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getLastOfferId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_offerId",
          "type": "uint256"
        }
      ],
      "name": "getOffer",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "creator",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "sellToken",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "sellAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "sellAmountInitial",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "buyToken",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "buyAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "buyAmountInitial",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "feeSchedule",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "state",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "rankNext",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "rankPrev",
              "type": "uint256"
            }
          ],
          "internalType": "struct MarketInfo",
          "name": "_offerState",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTradingCommissionsBasisPoints",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint16",
              "name": "tradingCommissionTotalBP",
              "type": "uint16"
            },
            {
              "internalType": "uint16",
              "name": "tradingCommissionNaymsLtdBP",
              "type": "uint16"
            },
            {
              "internalType": "uint16",
              "name": "tradingCommissionNDFBP",
              "type": "uint16"
            },
            {
              "internalType": "uint16",
              "name": "tradingCommissionSTMBP",
              "type": "uint16"
            },
            {
              "internalType": "uint16",
              "name": "tradingCommissionMakerBP",
              "type": "uint16"
            }
          ],
          "internalType": "struct TradingCommissionsBasisPoints",
          "name": "bp",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_offerId",
          "type": "uint256"
        }
      ],
      "name": "isActiveOffer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b506129ef806100206000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80639df004801161005b5780639df004801461017a578063eb3f5926146101a8578063ed7364ae14610207578063ef706adf1461025957600080fd5b80634579268a1461008d5780634c8198dc1461012e57806359e148fc1461014f5780638d81a1d314610157575b600080fd5b6100a061009b3660046127bf565b61026e565b6040516101259190600061016082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015260a083015160a083015260c083015160c083015260e083015160e083015261010080840151818401525061012080840151818401525061014080840151818401525092915050565b60405180910390f35b61014161013c3660046127d8565b610285565b604051908152602001610125565b610141610298565b61016a6101653660046127bf565b6102a7565b6040519015158152602001610125565b61018d6101883660046127fa565b6102b2565b60408051938452602084019290925290820152606001610125565b6101bb6101b63660046127bf565b6103bb565b6040516101259190600060c082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015260a083015160a083015292915050565b61020f6103fd565b6040516101259190815161ffff9081168252602080840151821690830152604080840151821690830152606080840151821690830152608092830151169181019190915260a00190565b61026c6102673660046127bf565b610430565b005b61027661275c565b61027f826105d4565b92915050565b60006102918383610679565b9392505050565b60006102a26106a4565b905090565b600061027f826106b9565b600080600080356001600160e01b0319166102cc816106df565b156103135760405162461bcd60e51b8152602060048201526012602482015271199d5b98dd1a5bdb881a5cc81b1bd8dad95960721b60448201526064015b60405180910390fd5b600261031d61071d565b600301540361036e5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161030a565b600261037861071d565b60030155600061038733610741565b9050610398818a8a8a8a6001610778565b9450945094505060016103a961071d565b60030181905550509450945094915050565b6103f46040518060c001604052806000815260200160008152602001600081526020016000815260200160008152602001600081525090565b61027f82610804565b6040805160a0810182526000808252602082018190529181018290526060810182905260808101919091526102a261095f565b6000356001600160e01b031916610446816106df565b156104885760405162461bcd60e51b8152602060048201526012602482015271199d5b98dd1a5bdb881a5cc81b1bd8dad95960721b604482015260640161030a565b600261049261071d565b60030154036104e35760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161030a565b60026104ed61071d565b6003015560016104fc836105d4565b6101000151146105415760405162461bcd60e51b815260206004820152601060248201526f6f66666572206e6f742061637469766560801b604482015260640161030a565b600061054c836105d4565b5190508061056b3360601b6bffffffffffffffffffffffff19166109da565b146105b85760405162461bcd60e51b815260206004820181905260248201527f6f6e6c79206d656d626572206f6620656e746974792063616e2063616e63656c604482015260640161030a565b6105c1836109fa565b5060016105cc61071d565b600301555050565b6105dc61275c565b60006105e661071d565b60009384526021016020908152604093849020845161016081018652815481526001820154928101929092526002810154948201949094526003840154606082015260048401546080820152600584015460a0820152600684015460c0820152600784015460e082015260088401546101008201526009840154610120820152600a909301546101408401525090919050565b60008061068461071d565b600094855260220160209081526040808620948652939052505090205490565b6000806106af61071d565b6020015492915050565b6000806106c461071d565b60009384526021016020525050604090206008015460011490565b6001600160e01b03191660009081527f47f677dbe524b93b2c36e6f8027a75c4906479c31df070fdbea83211f1a26050602052604090205460ff1690565b7f1ab5ce5b595c6e94c5fba2e588bf4eafa8b384a4fb6e188b892768e695c1bfc790565b60008061074c61071d565b60609390931b6bffffffffffffffffffffffff19166000908152600a9093016020525050604090205490565b600080600061078b898989898989610b5d565b600061079a8a8a8a8a8a610f53565b905080604001519250806060015191506107c28a8a83602001518b8b86600001518c8c6111de565b935060006107ce61071d565b6000868152602182016020526040902060080154909150600019016107f6576107f6856113a4565b505096509650969350505050565b61083d6040518060c001604052806000815260200160008152602001600081526020016000815260200160008152602001600081525090565b600061084761071d565b60268101549091506127109061086290859061ffff16612842565b61086c9190612859565b80835260268201546127109161088b9162010000900461ffff16612842565b6108959190612859565b602083015281516026820154612710916108ba91640100000000900461ffff16612842565b6108c49190612859565b604083015281516026820154612710916108e891600160301b900461ffff16612842565b6108f29190612859565b6060830152815160268201546127109161091691600160401b900461ffff16612842565b6109209190612859565b60808301819052606083015160408401516020850151610940919061287b565b61094a919061287b565b610954919061287b565b60a083015250919050565b6040805160a08101825260008082526020820181905291810182905260608101829052608081018290529061099261071d565b6026015461ffff808216845262010000820481166020850152640100000000820481166040850152600160301b820481166060850152600160401b9091041660808301525090565b6000806109e561071d565b6000938452600a016020525050604090205490565b6000610a0461071d565b9050610a0f82611529565b15610a1d57610a1d826115be565b60008281526021820160209081526040918290208251610160810184528154815260018201549281019290925260028101549282018390526003810154606083015260048101546080830152600581015460a0830152600681015460c0830152600781015460e083015260088101546101008301526009810154610120830152600a01546101408201529015610af55760408082015160008581526021850160209081528382208054835260278701825284832060019091015483529052918220805491929091610aef90849061288e565b90915550505b600381610100015114610b58576000838152602183016020908152604091829020600260089091015582518382015192519283529185917fc5ccc63c607b224c3650887a47d3852b5acbc0d610aa5ee44c108c042cce8631910160405180910390a35b505050565b6000610b6761071d565b90508615801590610b8857506000878152600f8201602052604090205460ff165b610be55760405162461bcd60e51b815260206004820152602860248201527f6f66666572206d757374206265206d61646520627920616e206578697374696e6044820152676720656e7469747960c01b606482015260840161030a565b6000868152600f8201602052604081205460ff16906013830181610c088a611854565b6001600160a01b031681526020808201929092526040908101600090812054898252600f87019093529081205460ff9283169350909116906013850181610c4e8a611854565b6001600160a01b0316815260208101919091526040016000205460ff169050610c7789886118b9565b8380610c805750825b610ccc5760405162461bcd60e51b815260206004820152601860248201527f73656c6c20746f6b656e206d7573742062652076616c69640000000000000000604482015260640161030a565b8180610cd55750805b610d215760405162461bcd60e51b815260206004820152601760248201527f62757920746f6b656e206d7573742062652076616c6964000000000000000000604482015260640161030a565b878a03610d705760405162461bcd60e51b815260206004820152601e60248201527f63616e6e6f742073656c6c20616e64206275792073616d6520746f6b656e0000604482015260640161030a565b838015610d7a5750805b80610d8a5750828015610d8a5750815b610df55760405162461bcd60e51b815260206004820152603660248201527f6d757374206265206f6e652070617274696369706174696f6e20746f6b656e2060448201527530b7321037b7329032bc3a32b93730b6103a37b5b2b760511b606482015260840161030a565b60008a815260158601602090815260408083208e8452909152902054891115610e575760405162461bcd60e51b8152602060048201526014602482015273696e73756666696369656e742062616c616e636560601b604482015260640161030a565b60008b815260278601602090815260408083208d84528252808320546015890183528184208f8552909252909120548a91610e919161288e565b1015610ef45760405162461bcd60e51b815260206004820152602c60248201527f696e73756666696369656e742062616c616e636520617661696c61626c652c2060448201526b199d5b991cc81b1bd8dad95960a21b606482015260840161030a565b6002861480610f035750600186145b610f465760405162461bcd60e51b8152602060048201526014602482015273199959481cd8da19591d5b19481a5b9d985b1a5960621b604482015260640161030a565b5050505050505050505050565b610f7e6040518060800160405280600081526020016000815260200160008152602001600081525090565b6000610f8861071d565b83835260208301869052905060006013820181610fa487611854565b6001600160a01b0316815260208101919091526040016000205460ff1690505b602083015115801590610fde57508080610fde5750825115155b156111d357600085815260228301602090815260408083208a84529091528120549081900361100d57506111d3565b6000818152602184016020908152604090912060058101546002909101549186015190919061103c9082612842565b86516110489084612842565b1115611056575050506111d3565b600080851561110057602080890151600087815260218a019092526040909120600501541061108957876020015161109e565b60008581526021880160205260409020600501545b600086815260218901602052604090206005810154600290910154919350906110c79084612842565b6110d19190612859565b905060006110e2868f84868b611a06565b905080896040018181516110f6919061287b565b9052506111949050565b8751600086815260218901602052604090206002015410611122578751611137565b60008581526021880160205260409020600201545b600086815260218901602052604090206002810154600590910154919250906111609083612842565b61116a9190612859565b9150600061117b868f84868b611a06565b9050808960600181815161118f919061287b565b905250505b81886020018181516111a6919061288e565b905250875181116111c35787516111be90829061288e565b6111c6565b60005b885250610fc49350505050565b505095945050505050565b6000806111e961071d565b9050600081602001600081546111fe906128a1565b9182905550905061120d61275c565b8b8152602081018b9052604081018a9052606081018990526080810188905260a0810187905260c0810186905260e081018590526001871080611250575060018a105b1561126257600361010082015261129b565b600161010082015260008c815260278401602090815260408083208e8452909152812080548c929061129590849061287b565b90915550505b80836021016000848152602001908152602001600020600082015181600001556020820151816001015560408201518160020155606082015181600301556080820151816004015560a0820151816005015560c0820151816006015560e082015181600701556101008201518160080155610120820151816009015561014082015181600a01559050508a8160000151837fb5cf98fe77c5b4c06e3bb6a62e9589418ff5d382b8da474d04cdc38e223a18d18d8d8d8d8d89610100015160405161138d96959493929190958652602086019490945260408501929092526060840152608083015260a082015260c00190565b60405180910390a4509a9950505050505050505050565b60006113ae61071d565b90506113b982611529565b156114065760405162461bcd60e51b815260206004820152601c60248201527f6f6666657220616c726561647920696e20736f72746564206c69737400000000604482015260640161030a565b60008281526021820160209081526040808320600181015460049091015481855260228601845282852081865290935290832054909290815b811580159061145357506114538783611be0565b15611473575060008181526021860160205260409020600a01549061143f565b8080156114a6576000818152602188016020526040808220600a018054908b90558a8352912060090182905593506114ca565b60008681526022880160209081526040808320888452909152902080549089905593505b83156114f35760008481526021880160205260408082206009018a90558982529020600a018490555b60008681526023880160209081526040808320888452909152812080549161151a836128a1565b91905055505050505050505050565b60008061153461071d565b6000848152602182016020526040902060018101546004909101549192509084158015906115b557506000858152602184016020526040902060090154151580611590575060008581526021840160205260409020600a015415155b806115b557506000828152602284016020908152604080832084845290915290205485145b95945050505050565b60006115c861071d565b90506115d382611529565b61161f5760405162461bcd60e51b815260206004820152601860248201527f6f66666572206e6f7420696e20736f72746564206c6973740000000000000000604482015260640161030a565b60008281526021820160209081526040808320600181015460049091015481855260238601845282852081865290935292205461169e5760405162461bcd60e51b815260206004820152601e60248201527f746f6b656e2070616972206c69737420646f6573206e6f742065786973740000604482015260640161030a565b600082815260228401602090815260408083208484529091529020548414611743576000848152602184016020526040808220600901548083529120600a015485146117205760405162461bcd60e51b81526020600482015260116024820152701cdbdc9d0818da1958dac819985a5b1959607a1b604482015260640161030a565b6000858152602185016020526040808220600a9081015493835291200155611771565b60008481526021840160209081526040808320600a0154858452602287018352818420858552909252909120555b60008481526021840160205260409020600a015415611809576000848152602184016020526040808220600a015480835291206009015485146117ea5760405162461bcd60e51b81526020600482015260116024820152701cdbdc9d0818da1958dac819985a5b1959607a1b604482015260640161030a565b6000858152602185016020526040808220600990810154938352912001555b6000848152602184016020908152604080832060098101849055600a018390558483526023860182528083208484529091528120805491611849836128ba565b919050555050505050565b60006bffffffffffffffffffffffff8216156118b25760405162461bcd60e51b815260206004820152601e60248201527f496e76616c69642065787465726e616c20746f6b656e20616464726573730000604482015260640161030a565b5060601c90565b6001600160801b0382111561191a5760405162461bcd60e51b815260206004820152602160248201527f73656c6c20616d6f756e7420657863656564732075696e74313238206c696d696044820152601d60fa1b606482015260840161030a565b6001600160801b038111156119715760405162461bcd60e51b815260206004820181905260248201527f62757920616d6f756e7420657863656564732075696e74313238206c696d6974604482015260640161030a565b600082116119ba5760405162461bcd60e51b8152602060048201526016602482015275073656c6c20616d6f756e74206d757374206265203e360541b604482015260640161030a565b60008111611a025760405162461bcd60e51b8152602060048201526015602482015274062757920616d6f756e74206d757374206265203e3605c1b604482015260640161030a565b5050565b600080611a1161071d565b9050611a1e878686611c40565b600087815260218201602052604090206007015460001901611a94578215611a6c57600087815260218201602052604090208054600190910154611a659190889088611d65565b9150611a94565b600087815260218201602052604090208054600490910154611a919190889087611d65565b91505b6000878152602182016020908152604080832080548452602785018352818420600190910154845290915281208054879290611ad190849061288e565b9091555050600087815260218201602052604090208054600190910154611afb9190889088611f96565b50600087815260218201602052604090208054600490910154611b2091889187611f96565b50600087815260218201602052604090206002015460011115611b5e57600087815260218201602052604090206003600890910155611b5e876109fa565b6000878152602182016020908152604091829020600181015460028201546004830154600584015460089094015486519283529482015293840191909152606083019190915290879089907ff6cd95e7491084abac93a47460beaee4f922948104ea1fe7e3fc7e4481c3fce49060800160405180910390a45095945050505050565b600080611beb61071d565b600085815260218201602052604080822060028082015460059283015489865293909420908101549101549394509192909190611c288482612842565b611c328385612842565b101598975050505050505050565b6000611c4a61071d565b9050600080611c58866121e0565b91509150611c6685856118b9565b8060200151841115611cba5760405162461bcd60e51b815260206004820152601e60248201527f7265717565737465642062757920616d6f756e7420746f6f206c617267650000604482015260640161030a565b8160200151851115611d0e5760405162461bcd60e51b815260206004820181905260248201527f63616c63756c617465642073656c6c20616d6f756e7420746f6f206c61726765604482015260640161030a565b848260200151611d1e919061288e565b6000878152602185016020908152604090912060020191909155810151611d4690859061288e565b6000968752602190930160205250506040909320600501929092555050565b600080611d7061071d565b602681015490915061271061ffff9091161115611dd95760405162461bcd60e51b815260206004820152602160248201527f636f6d6d697373696f6e20746f74616c206d7573742062653c3d3130303030626044820152600760fc1b606482015260840161030a565b60268101546127109061ffff600160401b8204811691600160301b8104821691611e1591640100000000810482169162010000909104166128d1565b611e1f91906128d1565b611e2991906128d1565b61ffff161115611e7b5760405162461bcd60e51b815260206004820152601d60248201527f636f6d6d697373696f6e732073756d206f766572203130303030206270000000604482015260640161030a565b6000611e8684610804565b9050611ec186611eb66040518060400160405280600981526020016813985e5b5cc8131d1960ba1b815250612256565b878460200151611f96565b50611ef586611eea6040518060400160405280600381526020016227222360e91b815250612256565b878460400151611f96565b50611f3786611f2c604051806040016040528060118152602001705374616b696e67204d656368616e69736d60781b815250612256565b878460600151611f96565b50611f488688878460800151611f96565b5060a0810151604080518781526020810183905291945087917f8b95974c6b09572b97a218c031984bc5fea45144a012bb6e7fcf5a45f278d532910160405180910390a25050949350505050565b600080611fa161071d565b600085815260158201602090815260408083208a845290915290205490915083111561201f5760405162461bcd60e51b815260206004820152602760248201527f5f696e7465726e616c5472616e736665723a20696e73756666696369656e742060448201526662616c616e636560c81b606482015260840161030a565b600086815260278201602090815260408083208784528252808320546015850183528184208a85529092529091205484916120599161288e565b10156120cd5760405162461bcd60e51b815260206004820152603f60248201527f5f696e7465726e616c5472616e736665723a20696e73756666696369656e742060448201527f62616c616e636520617661696c61626c652c2066756e6473206c6f636b656400606482015260840161030a565b6120d78685612261565b600084815260158201602090815260408083208984529091528120805485929061210290849061288e565b9091555050600084815260158201602090815260408083208884529091528120805485929061213290849061287b565b909155506121469050868686866000612314565b6000848152601582016020908152604080832089845290915290819020549051879160008051602061299a8339815191529161218591889133906128f3565b60405180910390a26000848152601582016020908152604080832088845290915290819020549051869160008051602061299a833981519152916121cc91889133906128f3565b60405180910390a250600195945050505050565b60408051808201909152600080825260208201526040805180820190915260008082526020820152600061221261071d565b600085815260219091016020818152604083206001810154875260028101548783015260048101548652969092528152600590940154938201939093529092909150565b600061027f826124e8565b600061226b61071d565b60008381526018820160209081526040808320805482518185028101850190935280835294955092939092918301828280156122c657602002820191906000526020600020905b8154815260200190600101908083116122b2575b5050505050905060005b815181101561230d576122fd85858484815181106122f0576122f061293b565b6020026020010151612503565b612306816128a1565b90506122d0565b5050505050565b600061231e61071d565b9050600061232b856126ec565b600086815260188401602090815260408083208054825181850281018501909352808352949550929390929183018282801561238657602002820191906000526020600020905b815481526020019060010190808311612372575b5050505050905060005b81518110156124dd5760008282815181106123ad576123ad61293b565b60209081029190910181015160008a8152601b88018352604080822083835290935291822054909250906123e38987848461270c565b60008b8152601c89016020908152604080832087845282528083208f845290915281208054929350839290919061241b90849061287b565b90915550508b1561245f5760008a8152601c88016020908152604080832086845282528083208f84529091528120805483929061245990849061288e565b90915550505b87156124c95760008a8152601b880160209081526040808320868452909152902054869061248e908b90612842565b6124989190612859565b60008b8152601b890160209081526040808320878452909152812080549091906124c390849061287b565b90915550505b505050806124d6906128a1565b9050612390565b505050505050505050565b600081516000036124fb57506000919050565b506020015190565b600061250d61071d565b9050600061253f6040518060400160405280600d81526020016c4469766964656e642042616e6b60981b815250612256565b60008581526015840160209081526040808320898452909152812054919250612567866126ec565b6000878152601b8601602090815260408083208984528252808320548a8452601c890183528184208a855283528184208c855290925282205492935091906125b18585858561270c565b905080156126e0576000898152601c8801602090815260408083208b845282528083208d8452909152812080548392906125ec90849061287b565b9091555050600088815260158801602090815260408083208984529091528120805483929061261c90849061288e565b9091555050600088815260158801602090815260408083208d84529091528120805483929061264c90849061287b565b90915550506000888152601588016020908152604080832089845290915290819020549051879160008051602061299a83398151915291612690918c913390612951565b60405180910390a2600088815260158801602090815260408083208d8452909152908190205490518b9160008051602061299a833981519152916126d7918c913390612951565b60405180910390a25b50505050505050505050565b6000806126f761071d565b60009384526016016020525050604090205490565b6000806127198685612842565b9050600085156127325761272d8683612859565b612735565b60005b90508084101561274e57612749848261288e565b612751565b60005b979650505050505050565b60405180610160016040528060008019168152602001600080191681526020016000815260200160008152602001600080191681526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b6000602082840312156127d157600080fd5b5035919050565b600080604083850312156127eb57600080fd5b50508035926020909101359150565b6000806000806080858703121561281057600080fd5b5050823594602084013594506040840135936060013592509050565b634e487b7160e01b600052601160045260246000fd5b808202811582820484141761027f5761027f61282c565b60008261287657634e487b7160e01b600052601260045260246000fd5b500490565b8082018082111561027f5761027f61282c565b8181038181111561027f5761027f61282c565b6000600182016128b3576128b361282c565b5060010190565b6000816128c9576128c961282c565b506000190190565b61ffff8181168382160190808211156128ec576128ec61282c565b5092915050565b9283526020830191909152608060408301819052601190830152702fb4b73a32b93730b62a3930b739b332b960791b60a08301526001600160a01b0316606082015260c00190565b634e487b7160e01b600052603260045260246000fd5b92835260208301919091526080604083018190526011908301527017ddda5d1a191c985dd11a5d9a59195b99607a1b60a08301526001600160a01b0316606082015260c0019056fe2a6b96e51c5252b8e3666030ed958aec041736a7af1773a4e5833bac27b47e3ba264697066735822122028de60a608e1ec5a772bba05e55ad5b02a435cbd6ca21c1644d825a70888b58d64736f6c63430008110033",
    "sourceMap": "851:5267:47:-:0;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "851:5267:47:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5097:143;;;;;;:::i;:::-;;:::i;:::-;;;;;;349:4:123;391:3;380:9;376:19;368:27;;428:6;422:13;411:9;404:32;492:4;484:6;480:17;474:24;467:4;456:9;452:20;445:54;555:4;547:6;543:17;537:24;530:4;519:9;515:20;508:54;618:4;610:6;606:17;600:24;593:4;582:9;578:20;571:54;681:4;673:6;669:17;663:24;656:4;645:9;641:20;634:54;744:4;736:6;732:17;726:24;719:4;708:9;704:20;697:54;807:4;799:6;795:17;789:24;782:4;771:9;767:20;760:54;870:4;862:6;858:17;852:24;845:4;834:9;830:20;823:54;896:6;956:2;948:6;944:15;938:22;933:2;922:9;918:18;911:50;;980:6;1040:2;1032:6;1028:15;1022:22;1017:2;1006:9;1002:18;995:50;;1064:6;1124:2;1116:6;1112:15;1106:22;1101:2;1090:9;1086:18;1079:50;;199:936;;;;;5097:143:47;;;;;;;;4759:167;;;;;;:::i;:::-;;:::i;:::-;;;1539:25:123;;;1527:2;1512:18;4759:167:47;1393:177:123;4385:109:47;;;:::i;5400:128::-;;;;;;:::i;:::-;;:::i;:::-;;;1740:14:123;;1733:22;1715:41;;1703:2;1688:18;5400:128:47;1575:187:123;3501:794:47;;;;;;:::i;:::-;;:::i;:::-;;;;2359:25:123;;;2415:2;2400:18;;2393:34;;;;2443:18;;;2436:34;2347:2;2332:18;3501:794:47;2157:319:123;5749:183:47;;;;;;:::i;:::-;;:::i;:::-;;;;;;2647:4:123;2689:3;2678:9;2674:19;2666:27;;2726:6;2720:13;2709:9;2702:32;2790:4;2782:6;2778:17;2772:24;2765:4;2754:9;2750:20;2743:54;2853:4;2845:6;2841:17;2835:24;2828:4;2817:9;2813:20;2806:54;2916:4;2908:6;2904:17;2898:24;2891:4;2880:9;2876:20;2869:54;2979:4;2971:6;2967:17;2961:24;2954:4;2943:9;2939:20;2932:54;3042:4;3034:6;3030:17;3024:24;3017:4;3006:9;3002:20;2995:54;2481:574;;;;;5938:178:47;;;:::i;:::-;;;;;;3350:13:123;;3313:6;3346:22;;;3328:41;;3429:4;3417:17;;;3411:24;3407:33;;3385:20;;;3378:63;3501:4;3489:17;;;3483:24;3479:33;;3457:20;;;3450:63;3573:4;3561:17;;;3555:24;3551:33;;3529:20;;;3522:63;3645:4;3633:17;;;3627:24;3623:33;3601:20;;;3594:63;;;;3290:3;3275:19;;3060:603;2418:430:47;;;;;;:::i;:::-;;:::i;:::-;;5097:143;5156:29;;:::i;:::-;5204;5224:8;5204:19;:29::i;:::-;5197:36;5097:143;-1:-1:-1;;5097:143:47:o;4759:167::-;4845:7;4871:48;4897:10;4909:9;4871:25;:48::i;:::-;4864:55;4759:167;-1:-1:-1;;;4759:167:47:o;4385:109::-;4434:7;4460:27;:25;:27::i;:::-;4453:34;;4385:109;:::o;5400:128::-;5464:4;5487:34;5512:8;5487:24;:34::i;3501:794::-;3741:16;3771:32;3817:33;3681:7;;-1:-1:-1;;;;;;3681:7:47;594:44:41;621:16;594:26;:44::i;:::-;593:45;585:76;;;;-1:-1:-1;;;585:76:41;;3870:2:123;585:76:41;;;3852:21:123;3909:2;3889:18;;;3882:30;-1:-1:-1;;;3928:18:123;;;3921:48;3986:18;;585:76:41;;;;;;;;;1877:1:95::1;2367:30;:28;:30::i;:::-;:47;;;:59:::0;2359:103:::1;;;::::0;-1:-1:-1;;;2359:103:95;;4217:2:123;2359:103:95::1;::::0;::::1;4199:21:123::0;4256:2;4236:18;;;4229:30;4295:33;4275:18;;;4268:61;4346:18;;2359:103:95::1;4015:355:123::0;2359:103:95::1;1877:1;2537:30;:28;:30::i;:::-;:47;;:58:::0;4087:16:47::2;4106:43;4138:10;4106:31;:43::i;:::-;4087:62;;4166:122;4195:8;4205:10;4217:11;4230:9;4241:10;2806:1:69;4166:28:47;:122::i;:::-;4159:129;;;;;;;1834:1:95::1;2750:30;:28;:30::i;:::-;:47;;:62;;;;3501:794:47::0;;;;;;;;;:::o;5749:183::-;5828:28;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5828:28:47;5873:52;5915:9;5873:41;:52::i;5938:178::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6061:48:47;:46;:48::i;2418:430::-;2476:7;;-1:-1:-1;;;;;;2476:7:47;594:44:41;621:16;594:26;:44::i;:::-;593:45;585:76;;;;-1:-1:-1;;;585:76:41;;3870:2:123;585:76:41;;;3852:21:123;3909:2;3889:18;;;3882:30;-1:-1:-1;;;3928:18:123;;;3921:48;3986:18;;585:76:41;3668:342:123;585:76:41;1877:1:95::1;2367:30;:28;:30::i;:::-;:47;;;:59:::0;2359:103:::1;;;::::0;-1:-1:-1;;;2359:103:95;;4217:2:123;2359:103:95::1;::::0;::::1;4199:21:123::0;4256:2;4236:18;;;4229:30;4295:33;4275:18;;;4268:61;4346:18;;2359:103:95::1;4015:355:123::0;2359:103:95::1;1877:1;2537:30;:28;:30::i;:::-;:47;;:58:::0;3216:1:69::2;2516:29:47;2536:8:::0;2516:19:::2;:29::i;:::-;:35;;;:70;2508:99;;;::::0;-1:-1:-1;;;2508:99:47;;4577:2:123;2508:99:47::2;::::0;::::2;4559:21:123::0;4616:2;4596:18;;;4589:30;-1:-1:-1;;;4635:18:123;;;4628:46;4691:18;;2508:99:47::2;4375:340:123::0;2508:99:47::2;2617:15;2635:29;2655:8;2635:19;:29::i;:::-;:37:::0;;-1:-1:-1;2635:37:47;2690:61:::2;2739:10;352:14:73::0;;-1:-1:-1;;344:23:73;2690:20:47::2;:61::i;:::-;:72;2682:117;;;::::0;-1:-1:-1;;;2682:117:47;;4922:2:123;2682:117:47::2;::::0;::::2;4904:21:123::0;;;4941:18;;;4934:30;5000:34;4980:18;;;4973:62;5052:18;;2682:117:47::2;4720:356:123::0;2682:117:47::2;2809:32;2832:8;2809:22;:32::i;:::-;2498:350;1834:1:95::1;2750:30;:28;:30::i;:::-;:47;;:62:::0;-1:-1:-1;;2418:430:47:o;19287:196:74:-;19347:29;;:::i;:::-;19388:20;19411:30;:28;:30::i;:::-;19458:18;;;;:8;;:18;;;;;;;;;19451:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;19451:25:74;;19287:196;-1:-1:-1;19287:196:74:o;1363:220::-;1450:7;1469:20;1492:30;:28;:30::i;:::-;1540:25;;;;:13;;:25;;;;;;;;:36;;;;;;-1:-1:-1;;1540:36:74;;;;1363:220::o;19489:159::-;19539:7;19558:20;19581:30;:28;:30::i;:::-;19628:13;;;;19489:159;-1:-1:-1;;19489:159:74:o;19654:217::-;19719:4;19735:20;19758:30;:28;:30::i;:::-;19805:18;;;;:8;;:18;;-1:-1:-1;;19805:18:74;;;:24;;;3216:1:69;19805:59:74;;19654:217::o;4017:210:68:-;-1:-1:-1;;;;;;4194:26:68;4092:4;4194:26;;;4812:42:38;4194:26:68;;;;;;;;;4017:210::o;4861:199:38:-;4704:43;;4861:199::o;2382:250:76:-;2450:7;2469:20;2492:30;:28;:30::i;:::-;352:14:73;;;;;-1:-1:-1;;344:23:73;2532:16:76;2601:24;;;:14;;;;:24;;-1:-1:-1;;2601:24:76;;;;;2382:250::o;18088:1193:74:-;18337:16;18367:32;18413:33;18471:89;18489:8;18499:10;18511:11;18524:9;18535:10;18547:12;18471:17;:89::i;:::-;18571:33;18607:80;18630:8;18640:10;18652:11;18665:9;18676:10;18607:22;:80::i;:::-;18571:116;;18724:6;:30;;;18697:57;;18792:6;:31;;;18764:59;;18845:139;18858:8;18868:10;18880:6;:26;;;18908:11;18921:9;18932:6;:25;;;18959:10;18971:12;18845;:139::i;:::-;18834:150;;19025:20;19048:30;:28;:30::i;:::-;19092:18;;;;:8;;;:18;;;;;:24;;;19025:53;;-1:-1:-1;;;19092:59:74;19088:187;;19228:36;19255:8;19228:26;:36::i;:::-;18461:820;;18088:1193;;;;;;;;;;:::o;4835:1178:72:-;4915:28;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4915:28:72;4955:20;4978:30;:28;:30::i;:::-;5147:26;;;;4955:53;;-1:-1:-1;3416:5:69;;5147:38:72;;5176:9;;5147:26;;:38;:::i;:::-;5146:65;;;;:::i;:::-;5121:90;;;5284:29;;;;3416:5:69;;5284:54:72;;:29;;;;;:54;:::i;:::-;5283:81;;;;:::i;:::-;5259:21;;;:105;5473:22;;5446:24;;;;3416:5:69;;5446:49:72;;:24;;;;;:49;:::i;:::-;5445:76;;;;:::i;:::-;5426:16;;;:95;5623:22;;5596:24;;;;3416:5:69;;5596:49:72;;-1:-1:-1;;;5596:24:72;;;;:49;:::i;:::-;5595:76;;;;:::i;:::-;5576:16;;;:95;5772:22;;5743:26;;;;3416:5:69;;5743:51:72;;-1:-1:-1;;;5743:26:72;;;;:51;:::i;:::-;5742:78;;;;:::i;:::-;5721:18;;;:99;;;5969:16;;;;5950;;;;5926:21;;;;:40;;5950:16;5926:40;:::i;:::-;:59;;;;:::i;:::-;:80;;;;:::i;:::-;5904:19;;;:102;-1:-1:-1;5904:2:72;4835:1178;-1:-1:-1;4835:1178:72:o;6019:507::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6161:30:72;:28;:30::i;:::-;6231:26;;;;;;;6201:56;;6300:29;;;;;6267:30;;;:62;6367:24;;;;;6339:25;;;:52;-1:-1:-1;;;6429:24:72;;;;6401:25;;;:52;-1:-1:-1;;;6493:26:72;;;;6463:27;;;:56;-1:-1:-1;6201:2:72;6019:507::o;2193:183:76:-;2255:7;2274:20;2297:30;:28;:30::i;:::-;2344:25;;;;:14;;:25;;-1:-1:-1;;2344:25:76;;;;;2193:183::o;13692:956:74:-;13751:20;13774:30;:28;:30::i;:::-;13751:53;;13819:30;13840:8;13819:20;:30::i;:::-;13815:97;;;13865:36;13892:8;13865:26;:36::i;:::-;13922:28;13953:18;;;:8;;;:18;;;;;;;;;13922:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14046:25;14042:250;;14260:21;;;;;14182:44;14199:18;;;:8;;;:18;;;;;;;:26;;14182:44;;:16;;;:44;;;;;14227:28;;;;;14182:74;;;;;;;:99;;14260:21;;14182:74;;:99;;14260:21;;14182:99;:::i;:::-;;;;-1:-1:-1;;14042:250:74;3330:1:69;14415:10:74;:16;;;:54;14411:231;;14485:18;;;;:8;;;:18;;;;;;;;;3273:1:69;14485:24:74;;;;:61;14590:18;;14610:20;;;;14565:66;;1539:25:123;;;14590:18:74;14494:8;;14565:66;;1512:18:123;14565:66:74;;;;;;;14411:231;13741:907;;13692:956;:::o;15038:2636::-;15264:20;15287:30;:28;:30::i;:::-;15264:53;-1:-1:-1;15401:14:74;;;;;:47;;-1:-1:-1;15419:29:74;;;;:18;;;:29;;;;;;;;15401:47;15393:100;;;;-1:-1:-1;;;15393:100:74;;6255:2:123;15393:100:74;;;6237:21:123;6294:2;6274:18;;;6267:30;6333:34;6313:18;;;6306:62;-1:-1:-1;;;6384:18:123;;;6377:38;6432:19;;15393:100:74;6053:404:123;15393:100:74;16073:35;16111:30;;;:18;;;:30;;;;;;;;;16193:24;;;16073:35;16218:40;16130:10;16218:28;:40::i;:::-;-1:-1:-1;;;;;16193:66:74;;;;;;;;;;;;;;;-1:-1:-1;16193:66:74;;;;16306:29;;;:18;;;:29;;;;;;;16193:66;;;;;-1:-1:-1;16306:29:74;;;;16386:24;;;-1:-1:-1;16411:39:74;16325:9;16411:28;:39::i;:::-;-1:-1:-1;;;;;16386:65:74;;;;;;;;;;;;-1:-1:-1;16386:65:74;;;;;-1:-1:-1;16462:39:74;16477:11;16490:10;16462:14;:39::i;:::-;16520:30;:68;;;;16554:34;16520:68;16512:105;;;;-1:-1:-1;;;16512:105:74;;6664:2:123;16512:105:74;;;6646:21:123;6703:2;6683:18;;;6676:30;6742:26;6722:18;;;6715:54;6786:18;;16512:105:74;6462:348:123;16512:105:74;16635:29;:66;;;;16668:33;16635:66;16627:102;;;;-1:-1:-1;;;16627:102:74;;7017:2:123;16627:102:74;;;6999:21:123;7056:2;7036:18;;;7029:30;7095:25;7075:18;;;7068:53;7138:18;;16627:102:74;6815:347:123;16627:102:74;16761:9;16747:10;:23;16739:66;;;;-1:-1:-1;;;16739:66:74;;7369:2:123;16739:66:74;;;7351:21:123;7408:2;7388:18;;;7381:30;7447:32;7427:18;;;7420:60;7497:18;;16739:66:74;7167:354:123;16739:66:74;16837:30;:67;;;;;16871:33;16837:67;16836:142;;;;16910:34;:67;;;;;16948:29;16910:67;16815:243;;;;-1:-1:-1;;;16815:243:74;;7728:2:123;16815:243:74;;;7710:21:123;7767:2;7747:18;;;7740:30;7806:34;7786:18;;;7779:62;-1:-1:-1;;;7857:18:123;;;7850:52;7919:19;;16815:243:74;7526:418:123;16815:243:74;17230:27;;;;:15;;;:27;;;;;;;;:38;;;;;;;;;:53;-1:-1:-1;17230:53:74;17222:86;;;;-1:-1:-1;;;17222:86:74;;8151:2:123;17222:86:74;;;8133:21:123;8190:2;8170:18;;;8163:30;-1:-1:-1;;;8209:18:123;;;8202:50;8269:18;;17222:86:74;7949:344:123;17222:86:74;17367:27;;;;:16;;;:27;;;;;;;;:39;;;;;;;;;17326:15;;;:27;;;;;:38;;;;;;;;;;17410:11;;17326:80;;;:::i;:::-;:95;;17318:152;;;;-1:-1:-1;;;17318:152:74;;8500:2:123;17318:152:74;;;8482:21:123;8539:2;8519:18;;;8512:30;8578:34;8558:18;;;8551:62;-1:-1:-1;;;8629:18:123;;;8622:42;8681:19;;17318:152:74;8298:408:123;17318:152:74;2952:1:69;17531:12:74;:57;:111;;;;2806:1:69;17592:12:74;:50;17531:111;17523:144;;;;-1:-1:-1;;;17523:144:74;;8913:2:123;17523:144:74;;;8895:21:123;8952:2;8932:18;;;8925:30;-1:-1:-1;;;8971:18:123;;;8964:50;9031:18;;17523:144:74;8711:344:123;17523:144:74;15254:2420;;;;;15038:2636;;;;;;:::o;5778:3668::-;5972:33;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5972:33:74;6017:20;6040:30;:28;:30::i;:::-;6081:38;;;6129:26;;;:40;;;6017:53;-1:-1:-1;6081:25:74;6468:24;;;6081:25;6493:39;6522:9;6493:28;:39::i;:::-;-1:-1:-1;;;;;6468:65:74;;;;;;;;;;;;-1:-1:-1;6468:65:74;;;;;-1:-1:-1;6543:2897:74;6550:26;;;;:31;;;;:87;;;6586:16;:50;;;-1:-1:-1;6606:25:74;;:30;;6586:50;6543:2897;;;6718:19;6740:24;;;:13;;;:24;;;;;;;;:36;;;;;;;;;;6794:16;;;6790:93;;6830:5;;;6790:93;6897:22;6922:21;;;:8;;;:21;;;;;;;;:31;;;;6993:32;;;;;7336:26;;;;6922:31;;6993:32;7318:44;;6993:32;7318:44;:::i;:::-;7290:25;;7273:42;;:14;:42;:::i;:::-;:89;7184:262;;;7395:5;;;;;7184:262;7548:25;7591:24;7638:16;7634:1518;;;8032:26;;;;;7998:21;;;;:8;;;:21;;;;;;;:31;;;:60;:123;;8095:6;:26;;;7998:123;;;8061:21;;;;:8;;;:21;;;;;:31;;;7998:123;8219:21;;;;:8;;;:21;;;;;:31;;;;8183:32;;;;;7978:143;;-1:-1:-1;8219:31:74;8163:52;;7978:143;8163:52;:::i;:::-;8162:88;;;;:::i;:::-;8143:107;;8359:23;8385:88;8396:11;8409:8;8419:16;8437:17;8456:16;8385:10;:88::i;:::-;8359:114;;8529:15;8495:6;:30;;:49;;;;;;;:::i;:::-;;;-1:-1:-1;7634:1518:74;;-1:-1:-1;7634:1518:74;;8645:25;;;8610:21;;;:8;;;:21;;;;;:32;;;:60;:123;;8708:25;;8610:123;;;8673:21;;;;:8;;;:21;;;;;:32;;;8610:123;8830:21;;;;:8;;;:21;;;;;:32;;;;8795:31;;;;;8591:142;;-1:-1:-1;8830:32:74;8776:50;;8591:142;8776:50;:::i;:::-;8775:87;;;;:::i;:::-;8755:107;;8947:23;8973:88;8984:11;8997:8;9007:16;9025:17;9044:16;8973:10;:88::i;:::-;8947:114;;9118:15;9083:6;:31;;:50;;;;;;;:::i;:::-;;;-1:-1:-1;;7634:1518:74;9257:17;9227:6;:26;;:47;;;;;;;:::i;:::-;;;-1:-1:-1;9339:25:74;;9320:44;;:95;;9371:25;;:44;;9399:16;;9371:44;:::i;:::-;9320:95;;;9367:1;9320:95;9292:123;;-1:-1:-1;6543:2897:74;;-1:-1:-1;;;;6543:2897:74;;6007:3439;;5778:3668;;;;;;;:::o;9452:1398::-;9737:7;9756:20;9779:30;:28;:30::i;:::-;9756:53;;9820:19;9844:1;:13;;;9842:15;;;;;:::i;:::-;;;;;-1:-1:-1;9842:15:74;-1:-1:-1;9868:28:74;;:::i;:::-;9906:29;;;9945:20;;;:33;;;9988:21;;;:35;;;10033:28;;;:49;;;10092:19;;;:31;;;10133:20;;;:33;;;10176:27;;;:47;;;10233:22;;;:37;;;3371:1:69;10285:30:74;;;:65;;;3371:1:69;10319:11:74;:31;10285:65;10281:326;;;3330:1:69;10366:16:74;;;:53;10281:326;;;3216:1:69;10450:16:74;;;:50;10543:26;;;;:16;;;:26;;;;;;;;:38;;;;;;;;:53;;10585:11;;10543:26;:53;;10585:11;;10543:53;:::i;:::-;;;;-1:-1:-1;;10281:326:74;10641:10;10617:1;:8;;:21;10626:11;10617:21;;;;;;;;;;;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10710:10;10690;:18;;;10677:11;10666:148;10722:11;10735:18;10755:9;10766:10;10778:17;10797:10;:16;;;10666:148;;;;;;;;;;9487:25:123;;;9543:2;9528:18;;9521:34;;;;9586:2;9571:18;;9564:34;;;;9629:2;9614:18;;9607:34;9672:3;9657:19;;9650:35;9716:3;9701:19;;9694:35;9474:3;9459:19;;9200:535;10666:148:74;;;;;;;;-1:-1:-1;10832:11:74;9452:1398;-1:-1:-1;;;;;;;;;;9452:1398:74:o;1589:1437::-;1662:20;1685:30;:28;:30::i;:::-;1662:53;;1789:30;1810:8;1789:20;:30::i;:::-;1788:31;1780:72;;;;-1:-1:-1;;;1780:72:74;;9942:2:123;1780:72:74;;;9924:21:123;9981:2;9961:18;;;9954:30;10020;10000:18;;;9993:58;10068:18;;1780:72:74;9740:352:123;1780:72:74;1863:17;1883:18;;;:8;;;:18;;;;;;;;:28;;;;1940:27;;;;;2064:24;;;:13;;;:24;;;;;:34;;;;;;;;;;1883:28;;1863:17;;2133:135;2140:8;;;;;:47;;;2152:35;2173:8;2183:3;2152:20;:35::i;:::-;2133:135;;;-1:-1:-1;2235:13:74;;;;:8;;;:13;;;;;:22;;;;2133:135;;;2292:6;2349:8;;2345:366;;2382:13;;;;:8;;;:13;;;;;;:22;;;;2418:33;;;;2465:18;;;;;:27;;:33;;;2382:22;-1:-1:-1;2345:366:74;;;2607:24;;;;:13;;;:24;;;;;;;;:34;;;;;;;;;;2655:45;;;;2607:34;-1:-1:-1;2345:366:74;2725:11;;2721:259;;2883:16;;;;:8;;;:16;;;;;;:25;;:36;;;2933:18;;;;;:27;;:36;;;2721:259;2990:17;;;;:6;;;:17;;;;;;;;:27;;;;;;;;:29;;;;;;:::i;:::-;;;;;;1652:1374;;;;;;;1589:1437;:::o;5355:417::-;5426:4;5442:20;5465:30;:28;:30::i;:::-;5506:17;5526:18;;;:8;;;:18;;;;;:28;;;;5583:27;;;;;5442:53;;-1:-1:-1;5526:28:74;5628:13;;;;;:137;;-1:-1:-1;5646:18:74;;;;:8;;;:18;;;;;:27;;;:32;;;:68;;-1:-1:-1;5682:18:74;;;;:8;;;:18;;;;;:27;;;:32;;5646:68;:118;;;-1:-1:-1;5718:24:74;;;;:13;;;:24;;;;;;;;:34;;;;;;;;;:46;;5646:118;5621:144;5355:417;-1:-1:-1;;;;;5355:417:74:o;3032:1390::-;3105:20;3128:30;:28;:30::i;:::-;3105:53;;3227:30;3248:8;3227:20;:30::i;:::-;3219:67;;;;-1:-1:-1;;;3219:67:74;;10299:2:123;3219:67:74;;;10281:21:123;10338:2;10318:18;;;10311:30;10377:26;10357:18;;;10350:54;10421:18;;3219:67:74;10097:348:123;3219:67:74;3297:17;3317:18;;;:8;;;:18;;;;;;;;:28;;;;3374:27;;;;;3420:17;;;:6;;;:17;;;;;:27;;;;;;;;;3412:74;;;;-1:-1:-1;;;3412:74:74;;10652:2:123;3412:74:74;;;10634:21:123;10691:2;10671:18;;;10664:30;10730:32;10710:18;;;10703:60;10780:18;;3412:74:74;10450:354:123;3412:74:74;3558:24;;;;:13;;;:24;;;;;;;;:34;;;;;;;;;3546:46;;3542:415;;3608:14;3625:18;;;:8;;;:18;;;;;;:27;;;3674:16;;;;;:25;;;:37;;3666:67;;;;-1:-1:-1;;;3666:67:74;;11011:2:123;3666:67:74;;;10993:21:123;11050:2;11030:18;;;11023:30;-1:-1:-1;;;11069:18:123;;;11062:47;11126:18;;3666:67:74;10809:341:123;3666:67:74;3775:18;;;;:8;;;:18;;;;;;:27;;;;;3747:16;;;;;:25;:55;3542:415;;;3919:18;;;;:8;;;:18;;;;;;;;:27;;;3882:24;;;:13;;;:24;;;;;:34;;;;;;;;;:64;3542:415;4015:18;;;;:8;;;:18;;;;;:27;;;:32;4011:257;;4063:14;4080:18;;;:8;;;:18;;;;;;:27;;;4129:16;;;;;:25;;;:37;;4121:67;;;;-1:-1:-1;;;4121:67:74;;11011:2:123;4121:67:74;;;10993:21:123;11050:2;11030:18;;;11023:30;-1:-1:-1;;;11069:18:123;;;11062:47;11126:18;;4121:67:74;10809:341:123;4121:67:74;4230:18;;;;:8;;;:18;;;;;;:27;;;;;4202:16;;;;;:25;:55;4011:257;4304:18;;;;:8;;;:18;;;;;;;;:27;;;4297:34;;;4348:27;;4341:34;;;4386:17;;;:6;;;:17;;;;;:27;;;;;;;;:29;;;;;;:::i;:::-;;;;;;3095:1327;;;3032:1390;:::o;1129:279:73:-;1192:7;598:66;698:12;;781:18;1211:104;;1264:40;;-1:-1:-1;;;1264:40:73;;11498:2:123;1264:40:73;;;11480:21:123;11537:2;11517:18;;;11510:30;11576:32;11556:18;;;11549:60;11626:18;;1264:40:73;11296:354:123;1211:104:73;-1:-1:-1;1380:21:73;;;1129:279::o;14654:378:74:-;-1:-1:-1;;;;;14751:32:74;;;14743:78;;;;-1:-1:-1;;;14743:78:74;;11857:2:123;14743:78:74;;;11839:21:123;11896:2;11876:18;;;11869:30;11935:34;11915:18;;;11908:62;-1:-1:-1;;;11986:18:123;;;11979:31;12027:19;;14743:78:74;11655:397:123;14743:78:74;-1:-1:-1;;;;;14839:31:74;;;14831:76;;;;-1:-1:-1;;;14831:76:74;;12259:2:123;14831:76:74;;;12241:21:123;;;12278:18;;;12271:30;12337:34;12317:18;;;12310:62;12389:18;;14831:76:74;12057:356:123;14831:76:74;14939:1;14925:11;:15;14917:50;;;;-1:-1:-1;;;14917:50:74;;12620:2:123;14917:50:74;;;12602:21:123;12659:2;12639:18;;;12632:30;-1:-1:-1;;;12678:18:123;;;12671:52;12740:18;;14917:50:74;12418:346:123;14917:50:74;14998:1;14985:10;:14;14977:48;;;;-1:-1:-1;;;14977:48:74;;12971:2:123;14977:48:74;;;12953:21:123;13010:2;12990:18;;;12983:30;-1:-1:-1;;;13029:18:123;;;13022:51;13090:18;;14977:48:74;12769:345:123;14977:48:74;14654:378;;:::o;10856:2125::-;11042:24;11078:20;11101:30;:28;:30::i;:::-;11078:53;;11186:64;11216:8;11226:10;11238:11;11186:29;:64::i;:::-;11322:18;;;;:8;;;:18;;;;;:30;;;-1:-1:-1;;11322:68:74;11318:786;;11509:18;11505:589;;;11715:18;;;;:8;;;:18;;;;;:26;;11753:28;;;;;11679:115;;11715:26;11743:8;;11783:10;11679:35;:115::i;:::-;11660:134;;11505:589;;;12000:18;;;;:8;;;:18;;;;;:26;;12038:27;;;;;11964:115;;12000:26;12028:8;;12067:11;11964:35;:115::i;:::-;11945:134;;11505:589;12114:44;12131:18;;;:8;;;:18;;;;;;;;:26;;12114:44;;:16;;;:44;;;;;12159:28;;;;;12114:74;;;;;;;:88;;12192:10;;12114:44;:88;;12192:10;;12114:88;:::i;:::-;;;;-1:-1:-1;;12249:18:74;;;;:8;;;:18;;;;;:26;;12287:28;;;;;12213:115;;12249:26;12277:8;;12317:10;12213:35;:115::i;:::-;-1:-1:-1;12384:18:74;;;;:8;;;:18;;;;;:26;;12412:27;;;;;12338:115;;12374:8;;12441:11;12338:35;:115::i;:::-;-1:-1:-1;12513:18:74;;;;:8;;;:18;;;;;:29;;;3371:1:69;-1:-1:-1;12509:177:74;;;12578:18;;;;:8;;;:18;;;;;3330:1:69;12578:24:74;;;;:61;12653:22;12587:8;12653:12;:22::i;:::-;12772:18;;;;:8;;;:18;;;;;;;;;:28;;;;12814:29;;;;12857:27;;;;12898:28;;;;12940:24;;;;;12701:273;;13350:25:123;;;13391:18;;;13384:34;13434:18;;;13427:34;;;;13492:2;13477:18;;13470:34;;;;12772:28:74;12750:8;;12772:18;;12701:273;;13337:3:123;13322:19;12701:273:74;;;;;;;11068:1913;10856:2125;;;;;;;:::o;4831:518::-;4927:4;4943:20;4966:30;:28;:30::i;:::-;5007:21;5031;;;:8;;;:21;;;;;;:32;;;;;5096:31;;;;;5163:22;;;;;;;:33;;;;5230:32;;;4943:53;;-1:-1:-1;5031:32:74;;5096:31;;5163:33;5313:29;5031:32;5230;5313:29;:::i;:::-;5280;5295:14;5280:12;:29;:::i;:::-;:62;;;4831:518;-1:-1:-1;;;;;;;;4831:518:74:o;12987:699::-;13134:20;13157:30;:28;:30::i;:::-;13134:53;;13199:28;13229:27;13260:31;13282:8;13260:21;:31::i;:::-;13198:93;;;;13302:39;13317:11;13330:10;13302:14;:39::i;:::-;13374:8;:15;;;13360:10;:29;;13352:72;;;;-1:-1:-1;;;13352:72:74;;13717:2:123;13352:72:74;;;13699:21:123;13756:2;13736:18;;;13729:30;13795:32;13775:18;;;13768:60;13845:18;;13352:72:74;13515:354:123;13352:72:74;13457:9;:16;;;13442:11;:31;;13434:76;;;;-1:-1:-1;;;13434:76:74;;14076:2:123;13434:76:74;;;14058:21:123;;;14095:18;;;14088:30;14154:34;14134:18;;;14127:62;14206:18;;13434:76:74;13874:356:123;13434:76:74;13599:11;13580:9;:16;;;:30;;;;:::i;:::-;13548:18;;;;:8;;;:18;;;;;;;;:29;;:62;;;;13651:15;;;:28;;13669:10;;13651:28;:::i;:::-;13620:18;;;;:8;;;;:18;;-1:-1:-1;;13620:18:74;;;;:28;;:59;;;;-1:-1:-1;;12987:699:74:o;1627:1692:72:-;1798:23;1833:20;1856:30;:28;:30::i;:::-;1905:26;;;;1833:53;;-1:-1:-1;3416:5:69;1905:26:72;;;;:52;;1897:98;;;;-1:-1:-1;;;1897:98:72;;14437:2:123;1897:98:72;;;14419:21:123;14476:2;14456:18;;;14449:30;14515:34;14495:18;;;14488:62;-1:-1:-1;;;14566:18:123;;;14559:31;14607:19;;1897:98:72;14235:397:123;1897:98:72;2112:26;;;;3416:5:69;;2112:26:72;-1:-1:-1;;;2112:26:72;;;;;-1:-1:-1;;;2085:24:72;;;;;2026:56;;2058:24;;;;;;2026:29;;;;;:56;:::i;:::-;:83;;;;:::i;:::-;:112;;;;:::i;:::-;:138;;;;2005:214;;;;-1:-1:-1;;;2005:214:72;;15012:2:123;2005:214:72;;;14994:21:123;15051:2;15031:18;;;15024:30;15090:31;15070:18;;;15063:59;15139:18;;2005:214:72;14810:353:123;2005:214:72;2230:28;2261:49;2290:19;2261:28;:49::i;:::-;2230:80;;2460:142;2496:8;2506:62;2534:33;;;;;;;;;;;;;-1:-1:-1;;;2534:33:72;;;2506:27;:62::i;:::-;2570:8;2580:2;:21;;;2460:35;:142::i;:::-;;2664:131;2700:8;2710:56;2738:27;;;;;;;;;;;;;-1:-1:-1;;;2738:27:72;;;2710;:56::i;:::-;2768:8;2778:2;:16;;;2664:35;:131::i;:::-;;2850;2886:8;2896:56;2924:27;;;;;;;;;;;;;-1:-1:-1;;;2924:27:72;;;2896;:56::i;:::-;2954:8;2964:2;:16;;;2850:35;:131::i;:::-;;3031:85;3067:8;3077;3087;3097:2;:18;;;3031:35;:85::i;:::-;-1:-1:-1;3218:19:72;;;;3253:59;;;15342:25:123;;;15398:2;15383:18;;15376:34;;;3218:19:72;;-1:-1:-1;3276:8:72;;3253:59;;15315:18:123;3253:59:72;;;;;;;1823:1496;;1627:1692;;;;;;:::o;1872:995:78:-;2018:12;2042:20;2065:30;:28;:30::i;:::-;2114:25;;;;:15;;;:25;;;;;;;;:32;;;;;;;;;2042:53;;-1:-1:-1;2114:43:78;-1:-1:-1;2114:43:78;2106:95;;;;-1:-1:-1;;;2106:95:78;;15623:2:123;2106:95:78;;;15605:21:123;15662:2;15642:18;;;15635:30;15701:34;15681:18;;;15674:62;-1:-1:-1;;;15752:18:123;;;15745:37;15799:19;;2106:95:78;15421:403:123;2106:95:78;2254:23;;;;:16;;;:23;;;;;;;;:33;;;;;;;;;2219:15;;;:25;;;;;:32;;;;;;;;;;2291:7;;2219:68;;;:::i;:::-;:79;;2211:155;;;;-1:-1:-1;;;2211:155:78;;16031:2:123;2211:155:78;;;16013:21:123;16070:2;16050:18;;;16043:30;16109:34;16089:18;;;16082:62;16180:33;16160:18;;;16153:61;16231:19;;2211:155:78;15829:427:123;2211:155:78;2377:38;2399:5;2406:8;2377:21;:38::i;:::-;2426:25;;;;:15;;;:25;;;;;;;;:32;;;;;;;;:43;;2462:7;;2426:25;:43;;2462:7;;2426:43;:::i;:::-;;;;-1:-1:-1;;2479:25:78;;;;:15;;;:25;;;;;;;;:30;;;;;;;;:41;;2513:7;;2479:25;:41;;2513:7;;2479:41;:::i;:::-;;;;-1:-1:-1;2531:57:78;;-1:-1:-1;2551:5:78;2558:3;2563:8;2573:7;2582:5;2531:19;:57::i;:::-;2648:25;;;;:15;;;:25;;;;;;;;:32;;;;;;;;;;;2604:110;;2631:5;;-1:-1:-1;;;;;;;;;;;2604:110:78;;;2638:8;;2703:10;;2604:110;:::i;:::-;;;;;;;;2771:25;;;;:15;;;:25;;;;;;;;:30;;;;;;;;;;;2729:106;;2756:3;;-1:-1:-1;;;;;;;;;;;2729:106:78;;;2761:8;;2824:10;;2729:106;:::i;:::-;;;;;;;;-1:-1:-1;2856:4:78;;1872:995;-1:-1:-1;;;;;1872:995:78:o;17680:402:74:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17813:20:74;17836:30;:28;:30::i;:::-;17891:18;;;;:8;;;;:18;;;;;;;:28;;;;17877:42;;17944:29;;;;17929:12;;;:44;17996:27;;;;17983:40;;18047:18;;;;;;:28;;;;;18033:11;;;:42;;;;17877:5;;17983:4;;-1:-1:-1;17680:402:74:o;1579:132:73:-;1649:7;1675:29;1697:5;1675:15;:29::i;9546:387:78:-;9632:20;9655:30;:28;:30::i;:::-;9695:38;9736:33;;;:23;;;:33;;;;;;;;9695:74;;;;;;;;;;;;;;;;;9632:53;;-1:-1:-1;9695:38:78;;:74;;9736:33;9695:74;;9736:33;9695:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9785:9;9780:147;9804:21;:28;9800:1;:32;9780:147;;;9853:63;9871:8;9881;9891:21;9913:1;9891:24;;;;;;;;:::i;:::-;;;;;;;9853:17;:63::i;:::-;9834:3;;;:::i;:::-;;;9780:147;;;;9622:311;;9546:387;;:::o;3582:1702::-;3759:20;3782:30;:28;:30::i;:::-;3759:53;;3822:14;3839:30;3860:8;3839:20;:30::i;:::-;4167:38;4208:33;;;:23;;;:33;;;;;;;;4167:74;;;;;;;;;;;;;;;;;3822:47;;-1:-1:-1;4167:38:78;;:74;;4208:33;4167:74;;4208:33;4167:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4257:9;4252:1026;4276:21;:28;4272:1;:32;4252:1026;;;4325:30;4358:21;4380:1;4358:24;;;;;;;;:::i;:::-;;;;;;;;;;;;4396:21;4420:26;;;:16;;;:26;;;;;;:50;;;;;;;;;;4358:24;;-1:-1:-1;4420:50:78;4577:75;4618:7;4627:6;4420:50;4396:21;4577:40;:75::i;:::-;4741:37;;;;:27;;;:37;;;;;;;;:61;;;;;;;;:66;;;;;;;;:93;;4543:109;;-1:-1:-1;4543:109:78;;4741:66;;:37;:93;;4543:109;;4741:93;:::i;:::-;;;;-1:-1:-1;;4928:19:78;;4924:153;;4967:37;;;;:27;;;:37;;;;;;;;:61;;;;;;;;:68;;;;;;;;:95;;5039:23;;4967:37;:95;;5039:23;;4967:95;:::i;:::-;;;;-1:-1:-1;;4924:153:78;5095:13;5091:177;;;5183:26;;;;:16;;;:26;;;;;;;;:50;;;;;;;;;5247:6;;5183:60;;5236:7;;5183:60;:::i;:::-;5182:71;;;;:::i;:::-;5128:26;;;;:16;;;:26;;;;;;;;:50;;;;;;;;:125;;:50;;:26;:125;;;;;:::i;:::-;;;;-1:-1:-1;;5091:177:78;4311:967;;;4306:3;;;;:::i;:::-;;;4252:1026;;;;3749:1535;;;3582:1702;;;;;:::o;1860:234:73:-;1929:14;1959:6;:13;1976:1;1959:18;1955:59;;-1:-1:-1;2000:3:73;;1860:234;-1:-1:-1;1860:234:73:o;1955:59::-;-1:-1:-1;2074:2:73;2062:15;2056:22;;1860:234::o;7400:1464:78:-;7538:20;7561:30;:28;:30::i;:::-;7538:53;;7601:22;7626:66;7654:37;;;;;;;;;;;;;-1:-1:-1;;;7654:37:78;;;7626:27;:66::i;:::-;7703:19;7725:25;;;:15;;;:25;;;;;;;;:35;;;;;;;;;7601:91;;-1:-1:-1;7787:30:78;7741:8;7787:20;:30::i;:::-;7827:21;7851:26;;;:16;;;:26;;;;;;;;:44;;;;;;;;;7930:37;;;:27;;;:37;;;;;:55;;;;;;;;:65;;;;;;;;;7770:47;;-1:-1:-1;7851:44:78;7930:65;8037:92;8078:11;7770:47;7851:44;7930:65;8037:40;:92::i;:::-;8006:123;-1:-1:-1;8143:24:78;;8139:719;;8241:37;;;;:27;;;:37;;;;;;;;:55;;;;;;;;:65;;;;;;;;:89;;8310:20;;8241:37;:89;;8310:20;;8241:89;:::i;:::-;;;;-1:-1:-1;;8378:33:78;;;;:15;;;:33;;;;;;;;:49;;;;;;;;:73;;8431:20;;8378:33;:73;;8431:20;;8378:73;:::i;:::-;;;;-1:-1:-1;;8465:33:78;;;;:15;;;:33;;;;;;;;:43;;;;;;;;:67;;8512:20;;8465:33;:67;;8512:20;;8465:67;:::i;:::-;;;;-1:-1:-1;;8613:33:78;;;;:15;;;:33;;;;;;;;:49;;;;;;;;;;;8552:144;;8579:14;;-1:-1:-1;;;;;;;;;;;8552:144:78;;;8595:16;;8685:10;;8552:144;:::i;:::-;;;;;;;;8770:33;;;;:15;;;:33;;;;;;;;:43;;;;;;;;;;;8715:132;;8742:8;;-1:-1:-1;;;;;;;;;;;8715:132:78;;;8752:16;;8836:10;;8715:132;:::i;:::-;;;;;;;;8139:719;7528:1336;;;;;;;7400:1464;;;:::o;1674:192::-;1746:7;1765:20;1788:30;:28;:30::i;:::-;1835:24;;;;:13;;:24;;-1:-1:-1;;1835:24:78;;;;;1674:192::o;12403:620::-;12597:29;;12793:24;12810:7;12793:14;:24;:::i;:::-;12758:59;-1:-1:-1;12827:22:78;12852:12;;:55;;12872:34;12899:7;12872:24;:34;:::i;:::-;12852:55;;;12867:1;12852:55;12827:80;;12962:14;12943:15;:33;;12942:74;;12984:32;13001:15;12984:14;:32;:::i;:::-;12942:74;;;12980:1;12942:74;12918:98;12403:620;-1:-1:-1;;;;;;;12403:620:78:o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:180:123:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:123;;14:180;-1:-1:-1;14:180:123:o;1140:248::-;1208:6;1216;1269:2;1257:9;1248:7;1244:23;1240:32;1237:52;;;1285:1;1282;1275:12;1237:52;-1:-1:-1;;1308:23:123;;;1378:2;1363:18;;;1350:32;;-1:-1:-1;1140:248:123:o;1767:385::-;1853:6;1861;1869;1877;1930:3;1918:9;1909:7;1905:23;1901:33;1898:53;;;1947:1;1944;1937:12;1898:53;-1:-1:-1;;1970:23:123;;;2040:2;2025:18;;2012:32;;-1:-1:-1;2091:2:123;2076:18;;2063:32;;2142:2;2127:18;2114:32;;-1:-1:-1;1767:385:123;-1:-1:-1;1767:385:123:o;5081:127::-;5142:10;5137:3;5133:20;5130:1;5123:31;5173:4;5170:1;5163:15;5197:4;5194:1;5187:15;5213:168;5286:9;;;5317;;5334:15;;;5328:22;;5314:37;5304:71;;5355:18;;:::i;5386:217::-;5426:1;5452;5442:132;;5496:10;5491:3;5487:20;5484:1;5477:31;5531:4;5528:1;5521:15;5559:4;5556:1;5549:15;5442:132;-1:-1:-1;5588:9:123;;5386:217::o;5608:125::-;5673:9;;;5694:10;;;5691:36;;;5707:18;;:::i;5738:128::-;5805:9;;;5826:11;;;5823:37;;;5840:18;;:::i;9060:135::-;9099:3;9120:17;;;9117:43;;9140:18;;:::i;:::-;-1:-1:-1;9187:1:123;9176:13;;9060:135::o;11155:136::-;11194:3;11222:5;11212:39;;11231:18;;:::i;:::-;-1:-1:-1;;;11267:18:123;;11155:136::o;14637:168::-;14704:6;14730:10;;;14742;;;14726:27;;14765:11;;;14762:37;;;14779:18;;:::i;:::-;14762:37;14637:168;;;;:::o;16261:584::-;16529:25;;;16585:2;16570:18;;16563:34;;;;16633:3;16628:2;16613:18;;16606:31;;;16674:2;16653:19;;;16646:31;-1:-1:-1;;;16708:3:123;16693:19;;16686:48;-1:-1:-1;;;;;16806:32:123;16801:2;16786:18;;16779:60;16766:3;16751:19;;16261:584::o;16850:127::-;16911:10;16906:3;16902:20;16899:1;16892:31;16942:4;16939:1;16932:15;16966:4;16963:1;16956:15;16982:584;17250:25;;;17306:2;17291:18;;17284:34;;;;17354:3;17349:2;17334:18;;17327:31;;;17395:2;17374:19;;;17367:31;-1:-1:-1;;;17429:3:123;17414:19;;17407:48;-1:-1:-1;;;;;17527:32:123;17522:2;17507:18;;17500:60;17487:3;17472:19;;16982:584::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "calculateTradingCommissions(uint256)": "eb3f5926",
    "cancelOffer(uint256)": "ef706adf",
    "executeLimitOffer(bytes32,uint256,bytes32,uint256)": "9df00480",
    "getBestOfferId(bytes32,bytes32)": "4c8198dc",
    "getLastOfferId()": "59e148fc",
    "getOffer(uint256)": "4579268a",
    "getTradingCommissionsBasisPoints()": "ed7364ae",
    "isActiveOffer(uint256)": "8d81a1d3"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"buyAmount\",\"type\":\"uint256\"}],\"name\":\"calculateTradingCommissions\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"roughCommissionPaid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"commissionNaymsLtd\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"commissionNDF\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"commissionSTM\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"commissionMaker\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalCommissions\",\"type\":\"uint256\"}],\"internalType\":\"struct TradingCommissions\",\"name\":\"tc\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_offerId\",\"type\":\"uint256\"}],\"name\":\"cancelOffer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_sellToken\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_sellAmount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"_buyToken\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_buyAmount\",\"type\":\"uint256\"}],\"name\":\"executeLimitOffer\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"offerId_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"buyTokenCommissionsPaid_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sellTokenCommissionsPaid_\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_sellToken\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_buyToken\",\"type\":\"bytes32\"}],\"name\":\"getBestOfferId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLastOfferId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_offerId\",\"type\":\"uint256\"}],\"name\":\"getOffer\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"creator\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"sellToken\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"sellAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sellAmountInitial\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"buyToken\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"buyAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"buyAmountInitial\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeSchedule\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"state\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rankNext\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rankPrev\",\"type\":\"uint256\"}],\"internalType\":\"struct MarketInfo\",\"name\":\"_offerState\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTradingCommissionsBasisPoints\",\"outputs\":[{\"components\":[{\"internalType\":\"uint16\",\"name\":\"tradingCommissionTotalBP\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"tradingCommissionNaymsLtdBP\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"tradingCommissionNDFBP\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"tradingCommissionSTMBP\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"tradingCommissionMakerBP\",\"type\":\"uint16\"}],\"internalType\":\"struct TradingCommissionsBasisPoints\",\"name\":\"bp\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_offerId\",\"type\":\"uint256\"}],\"name\":\"isActiveOffer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This should only be called through an entity, never directly by an EOA\",\"kind\":\"dev\",\"methods\":{\"calculateTradingCommissions(uint256)\":{\"details\":\"Calculate the trading commissions based on a buy amount.\",\"params\":{\"buyAmount\":\"The amount that the commissions payments are calculated from.\"},\"returns\":{\"tc\":\"TradingCommissions struct\"}},\"cancelOffer(uint256)\":{\"details\":\"This function can be frontrun: In the scenario where a user wants to cancel an unfavorable market offer, an attacker can potentially monitor and identify       that the user has called this method, determine that filling this market offer is profitable, and as a result call executeLimitOffer with a higher gas price to have       their transaction filled before the user can have cancelOffer filled. The most ideal situation for the user is to not have placed the unfavorable market offer       in the first place since an attacker can always monitor our marketplace and potentially identify profitable market offers. Our UI will aide users in not placing       market offers that are obviously unfavorable to the user and/or seem like mistake orders. In the event that a user needs to cancel an offer, it is recommended to       use Flashbots in order to privately send your transaction so an attack cannot be triggered from monitoring the mempool for calls to cancelOffer. A user is recommended       to change their RPC endpoint to point to https://rpc.flashbots.net when calling cancelOffer. We will add additional documentation to aide our users in this process.       More information on using Flashbots: https://docs.flashbots.net/flashbots-protect/rpc/quick-start/\",\"params\":{\"_offerId\":\"offer ID\"}},\"executeLimitOffer(bytes32,uint256,bytes32,uint256)\":{\"params\":{\"_buyAmount\":\"Amount to buy.\",\"_buyToken\":\"Token to buy.\",\"_sellAmount\":\"Amount to sell.\",\"_sellToken\":\"Token to sell.\"},\"returns\":{\"buyTokenCommissionsPaid_\":\"The amount of the buy token paid as commissions on this particular order.\",\"offerId_\":\"returns >0 if a limit offer was created on the market because the offer couldn't be totally fulfilled immediately. In this case the return value is the created offer's id.\",\"sellTokenCommissionsPaid_\":\"The amount of the sell token paid as commissions on this particular order.\"}},\"getBestOfferId(bytes32,bytes32)\":{\"details\":\"This means finding the highest sellToken-per-buyToken price, i.e. price = sellToken / buyToken\",\"returns\":{\"_0\":\"offerId, or 0 if no current best is available.\"}},\"getLastOfferId()\":{\"details\":\"Get last created offer.\",\"returns\":{\"_0\":\"offer id.\"}},\"getOffer(uint256)\":{\"details\":\"Get the details of the offer #`_offerId`\",\"params\":{\"_offerId\":\"ID of a particular offer\"},\"returns\":{\"_offerState\":\"details of the offer\"}},\"getTradingCommissionsBasisPoints()\":{\"returns\":{\"bp\":\"- TradingCommissionsBasisPoints struct containing the individual basis points set for each marketplace commission receiver.\"}},\"isActiveOffer(uint256)\":{\"details\":\"Check if the offer #`_offerId` is active or not.\",\"params\":{\"_offerId\":\"ID of a particular offer\"},\"returns\":{\"_0\":\"active or not\"}}},\"title\":\"Matching Market (inspired by MakerOTC: https://github.com/nayms/maker-otc/blob/master/contracts/matching_market.sol)\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"cancelOffer(uint256)\":{\"notice\":\"Cancel offer #`_offerId`. This will cancel the offer so that it's no longer active.\"},\"executeLimitOffer(bytes32,uint256,bytes32,uint256)\":{\"notice\":\"Execute a limit offer.\"},\"getBestOfferId(bytes32,bytes32)\":{\"notice\":\"Get current best offer for given token pair.\"},\"getTradingCommissionsBasisPoints()\":{\"notice\":\"Get the marketplace's trading commissions basis points.\"}},\"notice\":\"Trade entity tokens\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/diamonds/nayms/facets/MarketFacet.sol\":\"MarketFacet\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/ozv4/\",\":@uniswap/lib/=lib/solidity-lib/\",\":@uniswap/v2-core/=lib/v2-core/\",\":@uniswap/v3-core/=lib/v3-core/\",\":@uniswap/v3-periphery/=lib/v3-periphery/\",\":base64-sol/=lib/base64/\",\":ds-test/=lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":ozv4/=lib/ozv4/\",\":script/=script/\",\":solidity-lib/=lib/solidity-lib/contracts/\",\":solidity-stringutils/=lib/solidity-stringutils/src/\",\":solmate/=lib/solmate/src/\",\":src/=src/\",\":test/=test/\"]},\"sources\":{\"lib/ozv4/contracts/utils/Strings.sol\":{\"keccak256\":\"0x2626d8ab3dfdad0fad630c212ad146d59473d0f48b771784c61a7c1dbbea1f3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7c144532f1e7c76ac95fb6a8f617c1f740d7a73442a907eb60910e99dfa1fbf\",\"dweb:/ipfs/QmZsGyooD6emxB8JCuugRjnRYS2MPZEL586uuV7dgC8Jng\"]},\"lib/ozv4/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x54ee424bfc83ce63b2a918b9a1efb5090a0fb68dbd1de3b10bc667776885dd4f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9c8245bd91b51a6e411db1a68397e6d89ea76d28fd3fff2b5986ebd860c43aca\",\"dweb:/ipfs/QmUBfM8dUuxABn9ctfZWqierQbbux6NuhvSmQuSdrSEdch\"]},\"lib/ozv4/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x3546b156d97633f7f8cad536d5454c81d1d604687c02b2eb105fdc33cb962b41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc373869014f80e7ad928ae44bb7678a2d7aacf213fb0ce36bcbbb3166845903\",\"dweb:/ipfs/QmUaRPa2Nm2WfKeCq8yRCR94JZFCnfr4xw9LJADWxhTcwt\"]},\"lib/ozv4/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"src/diamonds/nayms/AppStorage.sol\":{\"keccak256\":\"0xea212ff0174b72ed18d8f4288df97a202eebe977d5858e525b748e596f279edf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f8e0b7c0f3cb0e886f221aaa3f5f4fbe2f4d9d17ca2e5fe8ab2095b8951740c6\",\"dweb:/ipfs/QmQme6aQVAn39Bp5upLuncPm8JZ6Pa7D6udPSwPK5GQbTx\"]},\"src/diamonds/nayms/INayms.sol\":{\"keccak256\":\"0x5e4923ab77351098cd809238e56b71e940514730e652520aa85ae0deec4bdadd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://befcf0b889c99292d49a724d4b59d61fd52e1fd7cbb4f8ed64d6fc6a2c732ed1\",\"dweb:/ipfs/QmecX5Mfx8mDWLn4axucUHSG6MBD7h9cFho2x1QHLx2umi\"]},\"src/diamonds/nayms/Modifiers.sol\":{\"keccak256\":\"0xb32baad8377717871c7bb8d9dfe65fc1eaa6b9e8dc9d4ee7e187c6f22eda9440\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9ebd2e6d4ff12a95fd32c53dee2670bf6c225cd732b0c48ebff4a112b7016f2\",\"dweb:/ipfs/QmcR7eEZrg4Gi9bhMtunt1yTXvMrcUxNzPb5AmDmH1cJAj\"]},\"src/diamonds/nayms/facets/MarketFacet.sol\":{\"keccak256\":\"0xd11668ffb858c851de5b8789c182419890c0c3bc860887ffe8bb9eac9bda70ae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c18e0948efa91bd4c236649510c1cf784072c5a05944cf5cb7cc698012205dfb\",\"dweb:/ipfs/QmPfggyYDeQ9WjvN5T1ivLKtXfQ4EfctRoS71mWibLYCNW\"]},\"src/diamonds/nayms/interfaces/CustomErrors.sol\":{\"keccak256\":\"0x7d7246de26f9b5c861fc50697837fb98a0eb2b1dbd6c844fb84356e57774c3e6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://97f1d1ef8fd408776bec083632d2d99ec7721090a542a0dcf0ff5f7a6fb953de\",\"dweb:/ipfs/QmZ48N2EZT2n3Pmwqi2TNCYJT1iC9cfyupjkM1DjybMreQ\"]},\"src/diamonds/nayms/interfaces/FreeStructs.sol\":{\"keccak256\":\"0xbcbdb86f63372f83a5014433874e8ae486ac5d219889203393e63337b4f3a384\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0538c135fa5950fbd362427f5d2c3d4a15e568bd84a151e6446bca72c1a955a4\",\"dweb:/ipfs/QmQC4uX42LXPBD5nSHzSg7cf4pU8GqxQrAmoTkoGUgAzRD\"]},\"src/diamonds/nayms/interfaces/IACLFacet.sol\":{\"keccak256\":\"0xd72d59aa31c0834a96493e2a896bc9ee2963f906ab5c907184aeb1e7b8263176\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e55525f0117636d55524b0f56513c4c14e5d533994fbf303d05813ba27705931\",\"dweb:/ipfs/QmXiUgcRkULmBTeSXDv96sb584H9eQNX3wqN88qUVUBFdh\"]},\"src/diamonds/nayms/interfaces/IAdminFacet.sol\":{\"keccak256\":\"0xe7008511e360617181eeec1ecf76743bf9253501962c84a4931a72eb65aa1a1b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4b3c7852635cda5c013408accfe40646a6180bfbd74ee77f9928167e4754b631\",\"dweb:/ipfs/QmTwYLEXEiWZzVooS1SAtev2GfSfKTdqoTGL8uXQeojyJa\"]},\"src/diamonds/nayms/interfaces/IEntityFacet.sol\":{\"keccak256\":\"0xce32aa04ea48b38030d2b8650d0989b37cde6e48bcbbb133ff8e7e7ffd0f78e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c970eb23c90a71386c7524abf0faca59dada315598df56826312ef15065556f5\",\"dweb:/ipfs/QmZCxwYYyPQyKgrpR7cqKWSw8aCbDHCYCi4JZUVdkKrQRY\"]},\"src/diamonds/nayms/interfaces/IGovernanceFacet.sol\":{\"keccak256\":\"0x521a78755df804dc302abec66a068c8529c7976893f7b5e9de6d8b5f463044bf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c7d94ca1e30c4302f6125b97306a29ee6bf1a141acb8447fbdd18630f342c666\",\"dweb:/ipfs/QmZZRkAVWLhXMbc31m5e3MZJVZ7JUKiXAnNDBm5Ap7isaN\"]},\"src/diamonds/nayms/interfaces/IMarketFacet.sol\":{\"keccak256\":\"0xf5bd6475cc57cf8e6b1b4517cfd3e1ccdeea590ba398a0a828c9a02bfd7ce047\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5beace8be7754de703ded6d95f04a6d75a291d993a0afa7a6f3addebb8769f2\",\"dweb:/ipfs/QmULQVQQQro6YxQE6SF6TKS2G3BhXuzyJKyGXZrKR3LXNH\"]},\"src/diamonds/nayms/interfaces/INaymsTokenFacet.sol\":{\"keccak256\":\"0xfdd01e5e0cd4dfea9196a3fa6dca3d277e394c7e1f6ea972e12620e04dcfd6aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://850e6bfc293916409884dcd223a8afba6cf8c1fd545935e5eb40cbe64fd79039\",\"dweb:/ipfs/QmYtHEdHZbQfrxkD417EcJbwe1tiCpLRWE2Rgm7yJTQ3UG\"]},\"src/diamonds/nayms/interfaces/ISimplePolicyFacet.sol\":{\"keccak256\":\"0xa19aacc7591f778a17b6238212567584d4f261dd035ea1a5430cc4acde135b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://796c08003a00a8fac916d3dd60f753b7eac13f0bcf063af738045008684d9369\",\"dweb:/ipfs/QmVntDBDnY7xXKVDh1hniz84v8XHcrXf8tm4pgANAnH7Ts\"]},\"src/diamonds/nayms/interfaces/ISystemFacet.sol\":{\"keccak256\":\"0x3fbb24b05dd3e2dbfe8541af0dc9f175e562a77fcdc549848b170b9b14462f45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c626e5e5487847d9c8931f7fcab85b483164714704261432418dfac239311452\",\"dweb:/ipfs/QmTWqLGW2EoJ2oZJx8LjUbAfu4WHnv4A6uYAWdxEuQ89c5\"]},\"src/diamonds/nayms/interfaces/ITokenizedVaultFacet.sol\":{\"keccak256\":\"0x02a9fc017690a2fd1424a67f2ecae15cd741fc381e3c755d141ca5dbfb78f368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2e654d4947bfddda09340711ac961871527ba9587d300100036604b97d9668e7\",\"dweb:/ipfs/QmUg32HGvV17CHwu2tThPpVrojQwhuXEnfFe2WFwvqkqzF\"]},\"src/diamonds/nayms/interfaces/ITokenizedVaultIOFacet.sol\":{\"keccak256\":\"0x6e524d2ab08929f2d31c1f1dd3c5c6c3f3317b80f22c8536b4ba7421369b1f87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://646c0316fce39694cf11b020aa0b28496f31f2925cc31e795793977ac363fa12\",\"dweb:/ipfs/QmT9C9Ee5UuqzF9V6Rv7heJvoLGKXrd3KjYDQnzDyEVZs6\"]},\"src/diamonds/nayms/interfaces/IUserFacet.sol\":{\"keccak256\":\"0x3b7ed45fc97adf42268310737d3a5f2c07e9fa4d6105efbc3d16363c0ce4a839\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e996ea5a861ab4bd5da3a0e9bd4d0824cd12cdc21bc9563feb0ae24a0ae0e9bc\",\"dweb:/ipfs/Qmcaqi2NdUM8SJAupkznNQ3ey2DUE5JhXa7frG6AH3kw5o\"]},\"src/diamonds/nayms/libs/LibACL.sol\":{\"keccak256\":\"0x8f549e1ea1cf2634bf13370699b52d379399f31bb76d31f75cf0011a822c70cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6776acf5de267965e5063bac3d0aab59cb270816c0a9c0530eceddefa6de1c8b\",\"dweb:/ipfs/QmURjioyaw3k64bTMYNuudomZxa9G7KrqTfUYgP9FCRNE4\"]},\"src/diamonds/nayms/libs/LibAdmin.sol\":{\"keccak256\":\"0x0c053811001b46912a34aacdfba50e70ea9440dde38d79980470969c36232310\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b24157174cc5b5f08fd7d18f180cc867f6f328a4f7ffa6ea4c0e8dd8eb3f5132\",\"dweb:/ipfs/QmQQHqWznGrdqNdoF6o3dYkt7acaUBenqYMKpjyfhckpwS\"]},\"src/diamonds/nayms/libs/LibConstants.sol\":{\"keccak256\":\"0xcba3c1c2947d879f894413bfcab9b0f6211b5cfc2adbd8db7ae218db1f5bd7af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f0def6636ae5ab4b697720a32e370682f112432466c79a1e759488f09dca7a89\",\"dweb:/ipfs/QmeV8mYQjRGNXR5pKpK9RibT9KCcBY3vCh3nSbFuaD4bSW\"]},\"src/diamonds/nayms/libs/LibEIP712.sol\":{\"keccak256\":\"0xdb2a139d5df8608f6d226b8057f145e221d4339ebc2595d7bddb4123d96c7368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://36b12bfbebe2f1b96d9644f5fcf2c328709e75592e7a776bdfb7aa86224a05cf\",\"dweb:/ipfs/QmT87AJPhjgnKqpkrrvBFubZFyi4PChWcm9PgQzVny9aF7\"]},\"src/diamonds/nayms/libs/LibEntity.sol\":{\"keccak256\":\"0x6a3f9351e5f12f2255a766323aa60a8ce5ba7e552681ef6f0f29762938acddec\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://191ff11791f112e2f55ee485bd7f145c773e9dc4a637bddcd567c87aa7fd3cf5\",\"dweb:/ipfs/QmVPk8nAARwsVvEoACGq6abTTpVWkmN49mpB38yM3o5n4a\"]},\"src/diamonds/nayms/libs/LibFeeRouter.sol\":{\"keccak256\":\"0xb62fb742a6730ff8df8b59fc9d961bf6cdfa9291d0930680e94f4abf0bd5a1c0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://337d153155d1e60c95e108d1ddcd2dfaeb3d79f0d592af19956fbd62fc0c9c3e\",\"dweb:/ipfs/QmVfUUnb22gewcsUZFVi5emH9awWp696cVbHVXPdywLtGF\"]},\"src/diamonds/nayms/libs/LibHelpers.sol\":{\"keccak256\":\"0x61ad402a9a658e721efca42b26e40b9fafeb59b7d22a7e68368c2a537251296d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77813a6182ec65fb8859e2a3599568d64a70758c34fa1e48438e6c0737026d0b\",\"dweb:/ipfs/QmS8fw62nJ37UQp8yft6JgYArhEJPei6Cwi8eKtY1i2K61\"]},\"src/diamonds/nayms/libs/LibMarket.sol\":{\"keccak256\":\"0x2e2d3f0f113f4c6ea7467bc1363d98b6878cc1ebd49708caa50b2ea7798094a5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bcba35a900546a25583cb4dac89e51c15f3da4cb91618c7da0e19e5a82f8e44\",\"dweb:/ipfs/QmPXbTCiFv67xxmzB1XFmfKDM5QbuirSnfXYgBAzPxB4yP\"]},\"src/diamonds/nayms/libs/LibObject.sol\":{\"keccak256\":\"0x82b2d21a9cd294f922cdbef660c05dbb45ded4e0550801db8b2720b6cd0a742b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cd35c5c54631391008a536be2e1607ad8cec181c995694993d25dad7bdb732ae\",\"dweb:/ipfs/QmZamFKpWFQCR5gyvT9fWfZFxhoaV62SZYmTED7PQcTExK\"]},\"src/diamonds/nayms/libs/LibSimplePolicy.sol\":{\"keccak256\":\"0xffddf1b9366d65df5288f26a3e66e2f55362251e4d9a31a8cd2055392424e5e8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://abfd7c6cdcce091359649101f3f2462637be79b2a1254a7aee480413ababeb53\",\"dweb:/ipfs/QmPaFrpqjapJXTsPL1QLh67BTUqt5yL3SqB2PtWaZMSBzU\"]},\"src/diamonds/nayms/libs/LibTokenizedVault.sol\":{\"keccak256\":\"0xcb8f4bffe7ed0d33ed23ce3c433648f52ecb775d6cea1afd725cdd5eb914d0b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c549dc8c216107ca557c9b408aed5e6402a975f1c18947c1c3e7955ccd6dac4\",\"dweb:/ipfs/QmUduiPxdnsnzUx69BWgQCGP4Avuhr1Kgu8M2c8Au3Sjkf\"]},\"src/diamonds/shared/interfaces/IDiamondCut.sol\":{\"keccak256\":\"0x9f5fae94fa7eb7878762079d230687bd7184c60a0f1fdddf9775742bd5c495f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8fd5f10ef1d46dc0c902fd83de013dc5fef5e144b168bfa9a418d6598bb1eb4b\",\"dweb:/ipfs/QmVgzifBPGZxxfwt2CuQMpVEdEmQWZNwpaJ2Nwfx3cvpn3\"]},\"src/diamonds/shared/interfaces/IDiamondLoupe.sol\":{\"keccak256\":\"0x27ca2115c56b2f09b4b4e24dc023e1d2ec0d6e1c603bdb30929d5bbda411cee0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0bc3bd5ac85edff564ecbe8896cf8be85a656f141c25c9705f02fad717cb6f9c\",\"dweb:/ipfs/QmYnQYgFapFvm7zwZMFFfGnERyd37mfVqHx8aT3HcCTDg2\"]},\"src/diamonds/shared/interfaces/IERC165.sol\":{\"keccak256\":\"0x13c14966128e5d95c060726fdfe204873e97df95d8092b65532e84d28bbeb6a4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://182cd2a57a4973dfe33b602219f92f46d8b5c93c2447c29299472740f4f39d9e\",\"dweb:/ipfs/QmTudnwW2V64G5FhetwDwmYTi7AaoFeksEXfV9Eq2SbDpc\"]},\"src/diamonds/shared/interfaces/IERC173.sol\":{\"keccak256\":\"0xfa7177a2353c17ceef7fb133fb547c7ce4fb9ad17f8fdcaca754fcec9c10f871\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd9f221cf880daa211ca7d9697a35de3a92311b1853048a9a62d49567cda947b\",\"dweb:/ipfs/QmWyV5Np2Dfxxs9PfoGGC24YJ1KsHBhP9ijsGrwQ5DpJ3Z\"]},\"src/diamonds/shared/libs/LibDiamond.sol\":{\"keccak256\":\"0x763a90994d21ad6b57b1c937045ccf6d4c718216d1a7e447b4d59e6565b28d52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://513f13eec9b409b405029eeae1a01f27ad46abd2a91f0eb778c4e9479cbaf65e\",\"dweb:/ipfs/QmWiyM7f3Q9HmLDddew9JAL9z3oo1mxfQD2xDcUUxHfZ7K\"]},\"src/diamonds/shared/libs/LibMeta.sol\":{\"keccak256\":\"0x060a6231ab516d9e21784ab33c14040a93e701808c262065a4e9631dd51981a5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9ff4d59759fa3be9204a1e2a3af93a8ebd53af8d66616f09617e5d8a5ab66d8\",\"dweb:/ipfs/QmWroFXPtYPRQPCCB76UhSKGfhwviVbhVa3sQPRpu6tWF8\"]},\"src/erc20/ERC20Wrapper.sol\":{\"keccak256\":\"0x21ee46d5a54bfbe15ca0d406cbb273931cc24fc7fd8875d44107329526f5adc0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d310a4b48541753a2bb88f4891017ac84388551132e8bffe07a98908eece23b9\",\"dweb:/ipfs/QmNRcocVMWV4NvdSnVk9w84ULzCCXXVjkJ6wrK1QqZrKZ7\"]},\"src/erc20/IERC20.sol\":{\"keccak256\":\"0xbf33f9f19e0114283a92f8e4634c293527f6d695f64cbbbf39a63e0a0fb8dbae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f85239a96f8597eedd3e22e37f5a2dd979b2fcd5cc8cae6a6d9f0210e220e09e\",\"dweb:/ipfs/QmUKN9ciqs19zMz3FPK3vBu4EaifWvciF5EsAzVDRsiNeb\"]},\"src/erc20/LibERC20.sol\":{\"keccak256\":\"0xfb91ec582c67f95775ae726d48f36df30e0920ecbae8deacb1b94cf4559e80a9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f4ad1f287ad4cc1906b59c9fb5c3fd051c2fa9f44beffa789dd65ee9d9c5b3a5\",\"dweb:/ipfs/QmZr288Va9yguWVnqbUw86LSNgjPt3RVg2qGp3mkvrEWWA\"]},\"src/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0xa5e9cf016e387adab639172486c0d249d1a8a8a67d4f36254b81229d9b3f9e98\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b295db277d2b2723281cbee4795c1fcba805b75153af2419e68d1ded02dd0c8d\",\"dweb:/ipfs/QmVt7i8hzWMbXmMiVwDp8ps9i6Bz1uHtrMHadEBoMnCYjy\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "buyAmount",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "calculateTradingCommissions",
          "outputs": [
            {
              "internalType": "struct TradingCommissions",
              "name": "tc",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "roughCommissionPaid",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "commissionNaymsLtd",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "commissionNDF",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "commissionSTM",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "commissionMaker",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "totalCommissions",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_offerId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "cancelOffer"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "_sellToken",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "_sellAmount",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "_buyToken",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "_buyAmount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "executeLimitOffer",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "offerId_",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "buyTokenCommissionsPaid_",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "sellTokenCommissionsPaid_",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "_sellToken",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "_buyToken",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getBestOfferId",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getLastOfferId",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_offerId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getOffer",
          "outputs": [
            {
              "internalType": "struct MarketInfo",
              "name": "_offerState",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "creator",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "sellToken",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "sellAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "sellAmountInitial",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "buyToken",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "buyAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "buyAmountInitial",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "feeSchedule",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "state",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "rankNext",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "rankPrev",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getTradingCommissionsBasisPoints",
          "outputs": [
            {
              "internalType": "struct TradingCommissionsBasisPoints",
              "name": "bp",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint16",
                  "name": "tradingCommissionTotalBP",
                  "type": "uint16"
                },
                {
                  "internalType": "uint16",
                  "name": "tradingCommissionNaymsLtdBP",
                  "type": "uint16"
                },
                {
                  "internalType": "uint16",
                  "name": "tradingCommissionNDFBP",
                  "type": "uint16"
                },
                {
                  "internalType": "uint16",
                  "name": "tradingCommissionSTMBP",
                  "type": "uint16"
                },
                {
                  "internalType": "uint16",
                  "name": "tradingCommissionMakerBP",
                  "type": "uint16"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_offerId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isActiveOffer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "calculateTradingCommissions(uint256)": {
            "details": "Calculate the trading commissions based on a buy amount.",
            "params": {
              "buyAmount": "The amount that the commissions payments are calculated from."
            },
            "returns": {
              "tc": "TradingCommissions struct"
            }
          },
          "cancelOffer(uint256)": {
            "details": "This function can be frontrun: In the scenario where a user wants to cancel an unfavorable market offer, an attacker can potentially monitor and identify       that the user has called this method, determine that filling this market offer is profitable, and as a result call executeLimitOffer with a higher gas price to have       their transaction filled before the user can have cancelOffer filled. The most ideal situation for the user is to not have placed the unfavorable market offer       in the first place since an attacker can always monitor our marketplace and potentially identify profitable market offers. Our UI will aide users in not placing       market offers that are obviously unfavorable to the user and/or seem like mistake orders. In the event that a user needs to cancel an offer, it is recommended to       use Flashbots in order to privately send your transaction so an attack cannot be triggered from monitoring the mempool for calls to cancelOffer. A user is recommended       to change their RPC endpoint to point to https://rpc.flashbots.net when calling cancelOffer. We will add additional documentation to aide our users in this process.       More information on using Flashbots: https://docs.flashbots.net/flashbots-protect/rpc/quick-start/",
            "params": {
              "_offerId": "offer ID"
            }
          },
          "executeLimitOffer(bytes32,uint256,bytes32,uint256)": {
            "params": {
              "_buyAmount": "Amount to buy.",
              "_buyToken": "Token to buy.",
              "_sellAmount": "Amount to sell.",
              "_sellToken": "Token to sell."
            },
            "returns": {
              "buyTokenCommissionsPaid_": "The amount of the buy token paid as commissions on this particular order.",
              "offerId_": "returns >0 if a limit offer was created on the market because the offer couldn't be totally fulfilled immediately. In this case the return value is the created offer's id.",
              "sellTokenCommissionsPaid_": "The amount of the sell token paid as commissions on this particular order."
            }
          },
          "getBestOfferId(bytes32,bytes32)": {
            "details": "This means finding the highest sellToken-per-buyToken price, i.e. price = sellToken / buyToken",
            "returns": {
              "_0": "offerId, or 0 if no current best is available."
            }
          },
          "getLastOfferId()": {
            "details": "Get last created offer.",
            "returns": {
              "_0": "offer id."
            }
          },
          "getOffer(uint256)": {
            "details": "Get the details of the offer #`_offerId`",
            "params": {
              "_offerId": "ID of a particular offer"
            },
            "returns": {
              "_offerState": "details of the offer"
            }
          },
          "getTradingCommissionsBasisPoints()": {
            "returns": {
              "bp": "- TradingCommissionsBasisPoints struct containing the individual basis points set for each marketplace commission receiver."
            }
          },
          "isActiveOffer(uint256)": {
            "details": "Check if the offer #`_offerId` is active or not.",
            "params": {
              "_offerId": "ID of a particular offer"
            },
            "returns": {
              "_0": "active or not"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "cancelOffer(uint256)": {
            "notice": "Cancel offer #`_offerId`. This will cancel the offer so that it's no longer active."
          },
          "executeLimitOffer(bytes32,uint256,bytes32,uint256)": {
            "notice": "Execute a limit offer."
          },
          "getBestOfferId(bytes32,bytes32)": {
            "notice": "Get current best offer for given token pair."
          },
          "getTradingCommissionsBasisPoints()": {
            "notice": "Get the marketplace's trading commissions basis points."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=lib/ozv4/",
        ":@uniswap/lib/=lib/solidity-lib/",
        ":@uniswap/v2-core/=lib/v2-core/",
        ":@uniswap/v3-core/=lib/v3-core/",
        ":@uniswap/v3-periphery/=lib/v3-periphery/",
        ":base64-sol/=lib/base64/",
        ":ds-test/=lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":ozv4/=lib/ozv4/",
        ":script/=script/",
        ":solidity-lib/=lib/solidity-lib/contracts/",
        ":solidity-stringutils/=lib/solidity-stringutils/src/",
        ":solmate/=lib/solmate/src/",
        ":src/=src/",
        ":test/=test/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/diamonds/nayms/facets/MarketFacet.sol": "MarketFacet"
      },
      "libraries": {}
    },
    "sources": {
      "lib/ozv4/contracts/utils/Strings.sol": {
        "keccak256": "0x2626d8ab3dfdad0fad630c212ad146d59473d0f48b771784c61a7c1dbbea1f3f",
        "urls": [
          "bzz-raw://d7c144532f1e7c76ac95fb6a8f617c1f740d7a73442a907eb60910e99dfa1fbf",
          "dweb:/ipfs/QmZsGyooD6emxB8JCuugRjnRYS2MPZEL586uuV7dgC8Jng"
        ],
        "license": "MIT"
      },
      "lib/ozv4/contracts/utils/cryptography/ECDSA.sol": {
        "keccak256": "0x54ee424bfc83ce63b2a918b9a1efb5090a0fb68dbd1de3b10bc667776885dd4f",
        "urls": [
          "bzz-raw://9c8245bd91b51a6e411db1a68397e6d89ea76d28fd3fff2b5986ebd860c43aca",
          "dweb:/ipfs/QmUBfM8dUuxABn9ctfZWqierQbbux6NuhvSmQuSdrSEdch"
        ],
        "license": "MIT"
      },
      "lib/ozv4/contracts/utils/math/Math.sol": {
        "keccak256": "0x3546b156d97633f7f8cad536d5454c81d1d604687c02b2eb105fdc33cb962b41",
        "urls": [
          "bzz-raw://fc373869014f80e7ad928ae44bb7678a2d7aacf213fb0ce36bcbbb3166845903",
          "dweb:/ipfs/QmUaRPa2Nm2WfKeCq8yRCR94JZFCnfr4xw9LJADWxhTcwt"
        ],
        "license": "MIT"
      },
      "lib/ozv4/contracts/utils/math/SignedMath.sol": {
        "keccak256": "0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc",
        "urls": [
          "bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7",
          "dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6"
        ],
        "license": "MIT"
      },
      "src/diamonds/nayms/AppStorage.sol": {
        "keccak256": "0xea212ff0174b72ed18d8f4288df97a202eebe977d5858e525b748e596f279edf",
        "urls": [
          "bzz-raw://f8e0b7c0f3cb0e886f221aaa3f5f4fbe2f4d9d17ca2e5fe8ab2095b8951740c6",
          "dweb:/ipfs/QmQme6aQVAn39Bp5upLuncPm8JZ6Pa7D6udPSwPK5GQbTx"
        ],
        "license": "MIT"
      },
      "src/diamonds/nayms/INayms.sol": {
        "keccak256": "0x5e4923ab77351098cd809238e56b71e940514730e652520aa85ae0deec4bdadd",
        "urls": [
          "bzz-raw://befcf0b889c99292d49a724d4b59d61fd52e1fd7cbb4f8ed64d6fc6a2c732ed1",
          "dweb:/ipfs/QmecX5Mfx8mDWLn4axucUHSG6MBD7h9cFho2x1QHLx2umi"
        ],
        "license": "MIT"
      },
      "src/diamonds/nayms/Modifiers.sol": {
        "keccak256": "0xb32baad8377717871c7bb8d9dfe65fc1eaa6b9e8dc9d4ee7e187c6f22eda9440",
        "urls": [
          "bzz-raw://c9ebd2e6d4ff12a95fd32c53dee2670bf6c225cd732b0c48ebff4a112b7016f2",
          "dweb:/ipfs/QmcR7eEZrg4Gi9bhMtunt1yTXvMrcUxNzPb5AmDmH1cJAj"
        ],
        "license": "MIT"
      },
      "src/diamonds/nayms/facets/MarketFacet.sol": {
        "keccak256": "0xd11668ffb858c851de5b8789c182419890c0c3bc860887ffe8bb9eac9bda70ae",
        "urls": [
          "bzz-raw://c18e0948efa91bd4c236649510c1cf784072c5a05944cf5cb7cc698012205dfb",
          "dweb:/ipfs/QmPfggyYDeQ9WjvN5T1ivLKtXfQ4EfctRoS71mWibLYCNW"
        ],
        "license": "MIT"
      },
      "src/diamonds/nayms/interfaces/CustomErrors.sol": {
        "keccak256": "0x7d7246de26f9b5c861fc50697837fb98a0eb2b1dbd6c844fb84356e57774c3e6",
        "urls": [
          "bzz-raw://97f1d1ef8fd408776bec083632d2d99ec7721090a542a0dcf0ff5f7a6fb953de",
          "dweb:/ipfs/QmZ48N2EZT2n3Pmwqi2TNCYJT1iC9cfyupjkM1DjybMreQ"
        ],
        "license": "MIT"
      },
      "src/diamonds/nayms/interfaces/FreeStructs.sol": {
        "keccak256": "0xbcbdb86f63372f83a5014433874e8ae486ac5d219889203393e63337b4f3a384",
        "urls": [
          "bzz-raw://0538c135fa5950fbd362427f5d2c3d4a15e568bd84a151e6446bca72c1a955a4",
          "dweb:/ipfs/QmQC4uX42LXPBD5nSHzSg7cf4pU8GqxQrAmoTkoGUgAzRD"
        ],
        "license": "MIT"
      },
      "src/diamonds/nayms/interfaces/IACLFacet.sol": {
        "keccak256": "0xd72d59aa31c0834a96493e2a896bc9ee2963f906ab5c907184aeb1e7b8263176",
        "urls": [
          "bzz-raw://e55525f0117636d55524b0f56513c4c14e5d533994fbf303d05813ba27705931",
          "dweb:/ipfs/QmXiUgcRkULmBTeSXDv96sb584H9eQNX3wqN88qUVUBFdh"
        ],
        "license": "MIT"
      },
      "src/diamonds/nayms/interfaces/IAdminFacet.sol": {
        "keccak256": "0xe7008511e360617181eeec1ecf76743bf9253501962c84a4931a72eb65aa1a1b",
        "urls": [
          "bzz-raw://4b3c7852635cda5c013408accfe40646a6180bfbd74ee77f9928167e4754b631",
          "dweb:/ipfs/QmTwYLEXEiWZzVooS1SAtev2GfSfKTdqoTGL8uXQeojyJa"
        ],
        "license": "MIT"
      },
      "src/diamonds/nayms/interfaces/IEntityFacet.sol": {
        "keccak256": "0xce32aa04ea48b38030d2b8650d0989b37cde6e48bcbbb133ff8e7e7ffd0f78e4",
        "urls": [
          "bzz-raw://c970eb23c90a71386c7524abf0faca59dada315598df56826312ef15065556f5",
          "dweb:/ipfs/QmZCxwYYyPQyKgrpR7cqKWSw8aCbDHCYCi4JZUVdkKrQRY"
        ],
        "license": "MIT"
      },
      "src/diamonds/nayms/interfaces/IGovernanceFacet.sol": {
        "keccak256": "0x521a78755df804dc302abec66a068c8529c7976893f7b5e9de6d8b5f463044bf",
        "urls": [
          "bzz-raw://c7d94ca1e30c4302f6125b97306a29ee6bf1a141acb8447fbdd18630f342c666",
          "dweb:/ipfs/QmZZRkAVWLhXMbc31m5e3MZJVZ7JUKiXAnNDBm5Ap7isaN"
        ],
        "license": "MIT"
      },
      "src/diamonds/nayms/interfaces/IMarketFacet.sol": {
        "keccak256": "0xf5bd6475cc57cf8e6b1b4517cfd3e1ccdeea590ba398a0a828c9a02bfd7ce047",
        "urls": [
          "bzz-raw://d5beace8be7754de703ded6d95f04a6d75a291d993a0afa7a6f3addebb8769f2",
          "dweb:/ipfs/QmULQVQQQro6YxQE6SF6TKS2G3BhXuzyJKyGXZrKR3LXNH"
        ],
        "license": "MIT"
      },
      "src/diamonds/nayms/interfaces/INaymsTokenFacet.sol": {
        "keccak256": "0xfdd01e5e0cd4dfea9196a3fa6dca3d277e394c7e1f6ea972e12620e04dcfd6aa",
        "urls": [
          "bzz-raw://850e6bfc293916409884dcd223a8afba6cf8c1fd545935e5eb40cbe64fd79039",
          "dweb:/ipfs/QmYtHEdHZbQfrxkD417EcJbwe1tiCpLRWE2Rgm7yJTQ3UG"
        ],
        "license": "MIT"
      },
      "src/diamonds/nayms/interfaces/ISimplePolicyFacet.sol": {
        "keccak256": "0xa19aacc7591f778a17b6238212567584d4f261dd035ea1a5430cc4acde135b9c",
        "urls": [
          "bzz-raw://796c08003a00a8fac916d3dd60f753b7eac13f0bcf063af738045008684d9369",
          "dweb:/ipfs/QmVntDBDnY7xXKVDh1hniz84v8XHcrXf8tm4pgANAnH7Ts"
        ],
        "license": "MIT"
      },
      "src/diamonds/nayms/interfaces/ISystemFacet.sol": {
        "keccak256": "0x3fbb24b05dd3e2dbfe8541af0dc9f175e562a77fcdc549848b170b9b14462f45",
        "urls": [
          "bzz-raw://c626e5e5487847d9c8931f7fcab85b483164714704261432418dfac239311452",
          "dweb:/ipfs/QmTWqLGW2EoJ2oZJx8LjUbAfu4WHnv4A6uYAWdxEuQ89c5"
        ],
        "license": "MIT"
      },
      "src/diamonds/nayms/interfaces/ITokenizedVaultFacet.sol": {
        "keccak256": "0x02a9fc017690a2fd1424a67f2ecae15cd741fc381e3c755d141ca5dbfb78f368",
        "urls": [
          "bzz-raw://2e654d4947bfddda09340711ac961871527ba9587d300100036604b97d9668e7",
          "dweb:/ipfs/QmUg32HGvV17CHwu2tThPpVrojQwhuXEnfFe2WFwvqkqzF"
        ],
        "license": "MIT"
      },
      "src/diamonds/nayms/interfaces/ITokenizedVaultIOFacet.sol": {
        "keccak256": "0x6e524d2ab08929f2d31c1f1dd3c5c6c3f3317b80f22c8536b4ba7421369b1f87",
        "urls": [
          "bzz-raw://646c0316fce39694cf11b020aa0b28496f31f2925cc31e795793977ac363fa12",
          "dweb:/ipfs/QmT9C9Ee5UuqzF9V6Rv7heJvoLGKXrd3KjYDQnzDyEVZs6"
        ],
        "license": "MIT"
      },
      "src/diamonds/nayms/interfaces/IUserFacet.sol": {
        "keccak256": "0x3b7ed45fc97adf42268310737d3a5f2c07e9fa4d6105efbc3d16363c0ce4a839",
        "urls": [
          "bzz-raw://e996ea5a861ab4bd5da3a0e9bd4d0824cd12cdc21bc9563feb0ae24a0ae0e9bc",
          "dweb:/ipfs/Qmcaqi2NdUM8SJAupkznNQ3ey2DUE5JhXa7frG6AH3kw5o"
        ],
        "license": "MIT"
      },
      "src/diamonds/nayms/libs/LibACL.sol": {
        "keccak256": "0x8f549e1ea1cf2634bf13370699b52d379399f31bb76d31f75cf0011a822c70cd",
        "urls": [
          "bzz-raw://6776acf5de267965e5063bac3d0aab59cb270816c0a9c0530eceddefa6de1c8b",
          "dweb:/ipfs/QmURjioyaw3k64bTMYNuudomZxa9G7KrqTfUYgP9FCRNE4"
        ],
        "license": "MIT"
      },
      "src/diamonds/nayms/libs/LibAdmin.sol": {
        "keccak256": "0x0c053811001b46912a34aacdfba50e70ea9440dde38d79980470969c36232310",
        "urls": [
          "bzz-raw://b24157174cc5b5f08fd7d18f180cc867f6f328a4f7ffa6ea4c0e8dd8eb3f5132",
          "dweb:/ipfs/QmQQHqWznGrdqNdoF6o3dYkt7acaUBenqYMKpjyfhckpwS"
        ],
        "license": "MIT"
      },
      "src/diamonds/nayms/libs/LibConstants.sol": {
        "keccak256": "0xcba3c1c2947d879f894413bfcab9b0f6211b5cfc2adbd8db7ae218db1f5bd7af",
        "urls": [
          "bzz-raw://f0def6636ae5ab4b697720a32e370682f112432466c79a1e759488f09dca7a89",
          "dweb:/ipfs/QmeV8mYQjRGNXR5pKpK9RibT9KCcBY3vCh3nSbFuaD4bSW"
        ],
        "license": "MIT"
      },
      "src/diamonds/nayms/libs/LibEIP712.sol": {
        "keccak256": "0xdb2a139d5df8608f6d226b8057f145e221d4339ebc2595d7bddb4123d96c7368",
        "urls": [
          "bzz-raw://36b12bfbebe2f1b96d9644f5fcf2c328709e75592e7a776bdfb7aa86224a05cf",
          "dweb:/ipfs/QmT87AJPhjgnKqpkrrvBFubZFyi4PChWcm9PgQzVny9aF7"
        ],
        "license": "MIT"
      },
      "src/diamonds/nayms/libs/LibEntity.sol": {
        "keccak256": "0x6a3f9351e5f12f2255a766323aa60a8ce5ba7e552681ef6f0f29762938acddec",
        "urls": [
          "bzz-raw://191ff11791f112e2f55ee485bd7f145c773e9dc4a637bddcd567c87aa7fd3cf5",
          "dweb:/ipfs/QmVPk8nAARwsVvEoACGq6abTTpVWkmN49mpB38yM3o5n4a"
        ],
        "license": "MIT"
      },
      "src/diamonds/nayms/libs/LibFeeRouter.sol": {
        "keccak256": "0xb62fb742a6730ff8df8b59fc9d961bf6cdfa9291d0930680e94f4abf0bd5a1c0",
        "urls": [
          "bzz-raw://337d153155d1e60c95e108d1ddcd2dfaeb3d79f0d592af19956fbd62fc0c9c3e",
          "dweb:/ipfs/QmVfUUnb22gewcsUZFVi5emH9awWp696cVbHVXPdywLtGF"
        ],
        "license": "MIT"
      },
      "src/diamonds/nayms/libs/LibHelpers.sol": {
        "keccak256": "0x61ad402a9a658e721efca42b26e40b9fafeb59b7d22a7e68368c2a537251296d",
        "urls": [
          "bzz-raw://77813a6182ec65fb8859e2a3599568d64a70758c34fa1e48438e6c0737026d0b",
          "dweb:/ipfs/QmS8fw62nJ37UQp8yft6JgYArhEJPei6Cwi8eKtY1i2K61"
        ],
        "license": "MIT"
      },
      "src/diamonds/nayms/libs/LibMarket.sol": {
        "keccak256": "0x2e2d3f0f113f4c6ea7467bc1363d98b6878cc1ebd49708caa50b2ea7798094a5",
        "urls": [
          "bzz-raw://1bcba35a900546a25583cb4dac89e51c15f3da4cb91618c7da0e19e5a82f8e44",
          "dweb:/ipfs/QmPXbTCiFv67xxmzB1XFmfKDM5QbuirSnfXYgBAzPxB4yP"
        ],
        "license": "MIT"
      },
      "src/diamonds/nayms/libs/LibObject.sol": {
        "keccak256": "0x82b2d21a9cd294f922cdbef660c05dbb45ded4e0550801db8b2720b6cd0a742b",
        "urls": [
          "bzz-raw://cd35c5c54631391008a536be2e1607ad8cec181c995694993d25dad7bdb732ae",
          "dweb:/ipfs/QmZamFKpWFQCR5gyvT9fWfZFxhoaV62SZYmTED7PQcTExK"
        ],
        "license": "MIT"
      },
      "src/diamonds/nayms/libs/LibSimplePolicy.sol": {
        "keccak256": "0xffddf1b9366d65df5288f26a3e66e2f55362251e4d9a31a8cd2055392424e5e8",
        "urls": [
          "bzz-raw://abfd7c6cdcce091359649101f3f2462637be79b2a1254a7aee480413ababeb53",
          "dweb:/ipfs/QmPaFrpqjapJXTsPL1QLh67BTUqt5yL3SqB2PtWaZMSBzU"
        ],
        "license": "MIT"
      },
      "src/diamonds/nayms/libs/LibTokenizedVault.sol": {
        "keccak256": "0xcb8f4bffe7ed0d33ed23ce3c433648f52ecb775d6cea1afd725cdd5eb914d0b2",
        "urls": [
          "bzz-raw://2c549dc8c216107ca557c9b408aed5e6402a975f1c18947c1c3e7955ccd6dac4",
          "dweb:/ipfs/QmUduiPxdnsnzUx69BWgQCGP4Avuhr1Kgu8M2c8Au3Sjkf"
        ],
        "license": "MIT"
      },
      "src/diamonds/shared/interfaces/IDiamondCut.sol": {
        "keccak256": "0x9f5fae94fa7eb7878762079d230687bd7184c60a0f1fdddf9775742bd5c495f1",
        "urls": [
          "bzz-raw://8fd5f10ef1d46dc0c902fd83de013dc5fef5e144b168bfa9a418d6598bb1eb4b",
          "dweb:/ipfs/QmVgzifBPGZxxfwt2CuQMpVEdEmQWZNwpaJ2Nwfx3cvpn3"
        ],
        "license": "MIT"
      },
      "src/diamonds/shared/interfaces/IDiamondLoupe.sol": {
        "keccak256": "0x27ca2115c56b2f09b4b4e24dc023e1d2ec0d6e1c603bdb30929d5bbda411cee0",
        "urls": [
          "bzz-raw://0bc3bd5ac85edff564ecbe8896cf8be85a656f141c25c9705f02fad717cb6f9c",
          "dweb:/ipfs/QmYnQYgFapFvm7zwZMFFfGnERyd37mfVqHx8aT3HcCTDg2"
        ],
        "license": "MIT"
      },
      "src/diamonds/shared/interfaces/IERC165.sol": {
        "keccak256": "0x13c14966128e5d95c060726fdfe204873e97df95d8092b65532e84d28bbeb6a4",
        "urls": [
          "bzz-raw://182cd2a57a4973dfe33b602219f92f46d8b5c93c2447c29299472740f4f39d9e",
          "dweb:/ipfs/QmTudnwW2V64G5FhetwDwmYTi7AaoFeksEXfV9Eq2SbDpc"
        ],
        "license": "MIT"
      },
      "src/diamonds/shared/interfaces/IERC173.sol": {
        "keccak256": "0xfa7177a2353c17ceef7fb133fb547c7ce4fb9ad17f8fdcaca754fcec9c10f871",
        "urls": [
          "bzz-raw://bd9f221cf880daa211ca7d9697a35de3a92311b1853048a9a62d49567cda947b",
          "dweb:/ipfs/QmWyV5Np2Dfxxs9PfoGGC24YJ1KsHBhP9ijsGrwQ5DpJ3Z"
        ],
        "license": "MIT"
      },
      "src/diamonds/shared/libs/LibDiamond.sol": {
        "keccak256": "0x763a90994d21ad6b57b1c937045ccf6d4c718216d1a7e447b4d59e6565b28d52",
        "urls": [
          "bzz-raw://513f13eec9b409b405029eeae1a01f27ad46abd2a91f0eb778c4e9479cbaf65e",
          "dweb:/ipfs/QmWiyM7f3Q9HmLDddew9JAL9z3oo1mxfQD2xDcUUxHfZ7K"
        ],
        "license": "MIT"
      },
      "src/diamonds/shared/libs/LibMeta.sol": {
        "keccak256": "0x060a6231ab516d9e21784ab33c14040a93e701808c262065a4e9631dd51981a5",
        "urls": [
          "bzz-raw://f9ff4d59759fa3be9204a1e2a3af93a8ebd53af8d66616f09617e5d8a5ab66d8",
          "dweb:/ipfs/QmWroFXPtYPRQPCCB76UhSKGfhwviVbhVa3sQPRpu6tWF8"
        ],
        "license": "MIT"
      },
      "src/erc20/ERC20Wrapper.sol": {
        "keccak256": "0x21ee46d5a54bfbe15ca0d406cbb273931cc24fc7fd8875d44107329526f5adc0",
        "urls": [
          "bzz-raw://d310a4b48541753a2bb88f4891017ac84388551132e8bffe07a98908eece23b9",
          "dweb:/ipfs/QmNRcocVMWV4NvdSnVk9w84ULzCCXXVjkJ6wrK1QqZrKZ7"
        ],
        "license": "MIT"
      },
      "src/erc20/IERC20.sol": {
        "keccak256": "0xbf33f9f19e0114283a92f8e4634c293527f6d695f64cbbbf39a63e0a0fb8dbae",
        "urls": [
          "bzz-raw://f85239a96f8597eedd3e22e37f5a2dd979b2fcd5cc8cae6a6d9f0210e220e09e",
          "dweb:/ipfs/QmUKN9ciqs19zMz3FPK3vBu4EaifWvciF5EsAzVDRsiNeb"
        ],
        "license": "MIT"
      },
      "src/erc20/LibERC20.sol": {
        "keccak256": "0xfb91ec582c67f95775ae726d48f36df30e0920ecbae8deacb1b94cf4559e80a9",
        "urls": [
          "bzz-raw://f4ad1f287ad4cc1906b59c9fb5c3fd051c2fa9f44beffa789dd65ee9d9c5b3a5",
          "dweb:/ipfs/QmZr288Va9yguWVnqbUw86LSNgjPt3RVg2qGp3mkvrEWWA"
        ],
        "license": "MIT"
      },
      "src/utils/ReentrancyGuard.sol": {
        "keccak256": "0xa5e9cf016e387adab639172486c0d249d1a8a8a67d4f36254b81229d9b3f9e98",
        "urls": [
          "bzz-raw://b295db277d2b2723281cbee4795c1fcba805b75153af2419e68d1ded02dd0c8d",
          "dweb:/ipfs/QmVt7i8hzWMbXmMiVwDp8ps9i6Bz1uHtrMHadEBoMnCYjy"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/diamonds/nayms/facets/MarketFacet.sol",
    "id": 40219,
    "exportedSymbols": {
      "IMarketFacet": [
        41727
      ],
      "LibConstants": [
        43445
      ],
      "LibFeeRouter": [
        45224
      ],
      "LibHelpers": [
        45420
      ],
      "LibMarket": [
        47096
      ],
      "LibObject": [
        47685
      ],
      "MarketFacet": [
        40218
      ],
      "MarketInfo": [
        41197
      ],
      "Modifiers": [
        38973
      ],
      "ReentrancyGuard": [
        52984
      ],
      "TradingCommissions": [
        41311
      ],
      "TradingCommissionsBasisPoints": [
        41322
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:6087:47",
    "nodes": [
      {
        "id": 40006,
        "nodeType": "PragmaDirective",
        "src": "32:23:47",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".17"
        ]
      },
      {
        "id": 40008,
        "nodeType": "ImportDirective",
        "src": "57:45:47",
        "nodes": [],
        "absolutePath": "src/diamonds/nayms/Modifiers.sol",
        "file": "../Modifiers.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 40219,
        "sourceUnit": 38974,
        "symbolAliases": [
          {
            "foreign": {
              "id": 40007,
              "name": "Modifiers",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 38973,
              "src": "66:9:47",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 40012,
        "nodeType": "ImportDirective",
        "src": "103:98:47",
        "nodes": [],
        "absolutePath": "src/diamonds/nayms/AppStorage.sol",
        "file": "../AppStorage.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 40219,
        "sourceUnit": 38350,
        "symbolAliases": [
          {
            "foreign": {
              "id": 40009,
              "name": "TradingCommissions",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 41311,
              "src": "112:18:47",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 40010,
              "name": "TradingCommissionsBasisPoints",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 41322,
              "src": "132:29:47",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 40011,
              "name": "MarketInfo",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 41197,
              "src": "163:10:47",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 40014,
        "nodeType": "ImportDirective",
        "src": "202:56:47",
        "nodes": [],
        "absolutePath": "src/diamonds/nayms/libs/LibConstants.sol",
        "file": "../libs/LibConstants.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 40219,
        "sourceUnit": 43446,
        "symbolAliases": [
          {
            "foreign": {
              "id": 40013,
              "name": "LibConstants",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 43445,
              "src": "211:12:47",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 40016,
        "nodeType": "ImportDirective",
        "src": "259:52:47",
        "nodes": [],
        "absolutePath": "src/diamonds/nayms/libs/LibHelpers.sol",
        "file": "../libs/LibHelpers.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 40219,
        "sourceUnit": 45421,
        "symbolAliases": [
          {
            "foreign": {
              "id": 40015,
              "name": "LibHelpers",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 45420,
              "src": "268:10:47",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 40018,
        "nodeType": "ImportDirective",
        "src": "312:50:47",
        "nodes": [],
        "absolutePath": "src/diamonds/nayms/libs/LibMarket.sol",
        "file": "../libs/LibMarket.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 40219,
        "sourceUnit": 47097,
        "symbolAliases": [
          {
            "foreign": {
              "id": 40017,
              "name": "LibMarket",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 47096,
              "src": "321:9:47",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 40020,
        "nodeType": "ImportDirective",
        "src": "363:50:47",
        "nodes": [],
        "absolutePath": "src/diamonds/nayms/libs/LibObject.sol",
        "file": "../libs/LibObject.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 40219,
        "sourceUnit": 47686,
        "symbolAliases": [
          {
            "foreign": {
              "id": 40019,
              "name": "LibObject",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 47685,
              "src": "372:9:47",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 40022,
        "nodeType": "ImportDirective",
        "src": "414:56:47",
        "nodes": [],
        "absolutePath": "src/diamonds/nayms/libs/LibFeeRouter.sol",
        "file": "../libs/LibFeeRouter.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 40219,
        "sourceUnit": 45225,
        "symbolAliases": [
          {
            "foreign": {
              "id": 40021,
              "name": "LibFeeRouter",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 45224,
              "src": "423:12:47",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 40024,
        "nodeType": "ImportDirective",
        "src": "471:62:47",
        "nodes": [],
        "absolutePath": "src/diamonds/nayms/interfaces/IMarketFacet.sol",
        "file": "../interfaces/IMarketFacet.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 40219,
        "sourceUnit": 41728,
        "symbolAliases": [
          {
            "foreign": {
              "id": 40023,
              "name": "IMarketFacet",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 41727,
              "src": "480:12:47",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 40026,
        "nodeType": "ImportDirective",
        "src": "535:69:47",
        "nodes": [],
        "absolutePath": "src/utils/ReentrancyGuard.sol",
        "file": "../../../utils/ReentrancyGuard.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 40219,
        "sourceUnit": 52985,
        "symbolAliases": [
          {
            "foreign": {
              "id": 40025,
              "name": "ReentrancyGuard",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 52984,
              "src": "544:15:47",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 40218,
        "nodeType": "ContractDefinition",
        "src": "851:5267:47",
        "nodes": [
          {
            "id": 40086,
            "nodeType": "FunctionDefinition",
            "src": "2418:430:47",
            "nodes": [],
            "body": {
              "id": 40085,
              "nodeType": "Block",
              "src": "2498:350:47",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 40053,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 40048,
                                "name": "_offerId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 40036,
                                "src": "2536:8:47",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 40046,
                                "name": "LibMarket",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 47096,
                                "src": "2516:9:47",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_LibMarket_$47096_$",
                                  "typeString": "type(library LibMarket)"
                                }
                              },
                              "id": 40047,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2526:9:47",
                              "memberName": "_getOffer",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 47055,
                              "src": "2516:19:47",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_struct$_MarketInfo_$41197_memory_ptr_$",
                                "typeString": "function (uint256) view returns (struct MarketInfo memory)"
                              }
                            },
                            "id": 40049,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2516:29:47",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_MarketInfo_$41197_memory_ptr",
                              "typeString": "struct MarketInfo memory"
                            }
                          },
                          "id": 40050,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2546:5:47",
                          "memberName": "state",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41192,
                          "src": "2516:35:47",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 40051,
                            "name": "LibConstants",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 43445,
                            "src": "2555:12:47",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_LibConstants_$43445_$",
                              "typeString": "type(library LibConstants)"
                            }
                          },
                          "id": 40052,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "2568:18:47",
                          "memberName": "OFFER_STATE_ACTIVE",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 43375,
                          "src": "2555:31:47",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2516:70:47",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6f66666572206e6f7420616374697665",
                        "id": 40054,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2588:18:47",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_13529abe32353cbfeed4a3daf3cf950ef8cecfe3461e3d5c17a923885e87f27e",
                          "typeString": "literal_string \"offer not active\""
                        },
                        "value": "offer not active"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_13529abe32353cbfeed4a3daf3cf950ef8cecfe3461e3d5c17a923885e87f27e",
                          "typeString": "literal_string \"offer not active\""
                        }
                      ],
                      "id": 40045,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2508:7:47",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 40055,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2508:99:47",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40056,
                  "nodeType": "ExpressionStatement",
                  "src": "2508:99:47"
                },
                {
                  "assignments": [
                    40058
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 40058,
                      "mutability": "mutable",
                      "name": "creator",
                      "nameLocation": "2625:7:47",
                      "nodeType": "VariableDeclaration",
                      "scope": 40085,
                      "src": "2617:15:47",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 40057,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2617:7:47",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 40064,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 40061,
                          "name": "_offerId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 40036,
                          "src": "2655:8:47",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 40059,
                          "name": "LibMarket",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47096,
                          "src": "2635:9:47",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_LibMarket_$47096_$",
                            "typeString": "type(library LibMarket)"
                          }
                        },
                        "id": 40060,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2645:9:47",
                        "memberName": "_getOffer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 47055,
                        "src": "2635:19:47",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_struct$_MarketInfo_$41197_memory_ptr_$",
                          "typeString": "function (uint256) view returns (struct MarketInfo memory)"
                        }
                      },
                      "id": 40062,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2635:29:47",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_MarketInfo_$41197_memory_ptr",
                        "typeString": "struct MarketInfo memory"
                      }
                    },
                    "id": 40063,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "2665:7:47",
                    "memberName": "creator",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 41176,
                    "src": "2635:37:47",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2617:55:47"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 40075,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 40070,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "2739:3:47",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 40071,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "2743:6:47",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "2739:10:47",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "id": 40068,
                                  "name": "LibHelpers",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 45420,
                                  "src": "2711:10:47",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_LibHelpers_$45420_$",
                                    "typeString": "type(library LibHelpers)"
                                  }
                                },
                                "id": 40069,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "2722:16:47",
                                "memberName": "_getIdForAddress",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 45258,
                                "src": "2711:27:47",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_address_$returns$_t_bytes32_$",
                                  "typeString": "function (address) pure returns (bytes32)"
                                }
                              },
                              "id": 40072,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2711:39:47",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "expression": {
                              "id": 40066,
                              "name": "LibObject",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 47685,
                              "src": "2690:9:47",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_LibObject_$47685_$",
                                "typeString": "type(library LibObject)"
                              }
                            },
                            "id": 40067,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2700:10:47",
                            "memberName": "_getParent",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 47351,
                            "src": "2690:20:47",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
                              "typeString": "function (bytes32) view returns (bytes32)"
                            }
                          },
                          "id": 40073,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2690:61:47",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 40074,
                          "name": "creator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 40058,
                          "src": "2755:7:47",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "2690:72:47",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6f6e6c79206d656d626572206f6620656e746974792063616e2063616e63656c",
                        "id": 40076,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2764:34:47",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1ff45577db0b3105afbc48165dc4fe9a1c5ec6e8335c7d15921a00db1b6fed26",
                          "typeString": "literal_string \"only member of entity can cancel\""
                        },
                        "value": "only member of entity can cancel"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1ff45577db0b3105afbc48165dc4fe9a1c5ec6e8335c7d15921a00db1b6fed26",
                          "typeString": "literal_string \"only member of entity can cancel\""
                        }
                      ],
                      "id": 40065,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2682:7:47",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 40077,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2682:117:47",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40078,
                  "nodeType": "ExpressionStatement",
                  "src": "2682:117:47"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 40082,
                        "name": "_offerId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40036,
                        "src": "2832:8:47",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 40079,
                        "name": "LibMarket",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47096,
                        "src": "2809:9:47",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_LibMarket_$47096_$",
                          "typeString": "type(library LibMarket)"
                        }
                      },
                      "id": 40081,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2819:12:47",
                      "memberName": "_cancelOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46691,
                      "src": "2809:22:47",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 40083,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2809:32:47",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40084,
                  "nodeType": "ExpressionStatement",
                  "src": "2809:32:47"
                }
              ]
            },
            "baseFunctions": [
              41677
            ],
            "documentation": {
              "id": 40034,
              "nodeType": "StructuredDocumentation",
              "src": "922:1491:47",
              "text": " @notice Cancel offer #`_offerId`. This will cancel the offer so that it's no longer active.\n @dev This function can be frontrun: In the scenario where a user wants to cancel an unfavorable market offer, an attacker can potentially monitor and identify\n       that the user has called this method, determine that filling this market offer is profitable, and as a result call executeLimitOffer with a higher gas price to have\n       their transaction filled before the user can have cancelOffer filled. The most ideal situation for the user is to not have placed the unfavorable market offer\n       in the first place since an attacker can always monitor our marketplace and potentially identify profitable market offers. Our UI will aide users in not placing\n       market offers that are obviously unfavorable to the user and/or seem like mistake orders. In the event that a user needs to cancel an offer, it is recommended to\n       use Flashbots in order to privately send your transaction so an attack cannot be triggered from monitoring the mempool for calls to cancelOffer. A user is recommended\n       to change their RPC endpoint to point to https://rpc.flashbots.net when calling cancelOffer. We will add additional documentation to aide our users in this process.\n       More information on using Flashbots: https://docs.flashbots.net/flashbots-protect/rpc/quick-start/\n @param _offerId offer ID"
            },
            "functionSelector": "ef706adf",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 40039,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "2476:3:47",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 40040,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "2480:3:47",
                    "memberName": "sig",
                    "nodeType": "MemberAccess",
                    "src": "2476:7:47",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  }
                ],
                "id": 40041,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 40038,
                  "name": "notLocked",
                  "nameLocations": [
                    "2466:9:47"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 38831,
                  "src": "2466:9:47"
                },
                "nodeType": "ModifierInvocation",
                "src": "2466:18:47"
              },
              {
                "id": 40043,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 40042,
                  "name": "nonReentrant",
                  "nameLocations": [
                    "2485:12:47"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 52983,
                  "src": "2485:12:47"
                },
                "nodeType": "ModifierInvocation",
                "src": "2485:12:47"
              }
            ],
            "name": "cancelOffer",
            "nameLocation": "2427:11:47",
            "parameters": {
              "id": 40037,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40036,
                  "mutability": "mutable",
                  "name": "_offerId",
                  "nameLocation": "2447:8:47",
                  "nodeType": "VariableDeclaration",
                  "scope": 40086,
                  "src": "2439:16:47",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40035,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2439:7:47",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2438:18:47"
            },
            "returnParameters": {
              "id": 40044,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2498:0:47"
            },
            "scope": 40218,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 40130,
            "nodeType": "FunctionDefinition",
            "src": "3501:794:47",
            "nodes": [],
            "body": {
              "id": 40129,
              "nodeType": "Block",
              "src": "3865:430:47",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    40111
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 40111,
                      "mutability": "mutable",
                      "name": "parentId",
                      "nameLocation": "4095:8:47",
                      "nodeType": "VariableDeclaration",
                      "scope": 40129,
                      "src": "4087:16:47",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 40110,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "4087:7:47",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 40117,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 40114,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4138:3:47",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 40115,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4142:6:47",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4138:10:47",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 40112,
                        "name": "LibObject",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47685,
                        "src": "4106:9:47",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_LibObject_$47685_$",
                          "typeString": "type(library LibObject)"
                        }
                      },
                      "id": 40113,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4116:21:47",
                      "memberName": "_getParentFromAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47378,
                      "src": "4106:31:47",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bytes32_$",
                        "typeString": "function (address) view returns (bytes32)"
                      }
                    },
                    "id": 40116,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4106:43:47",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4087:62:47"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 40120,
                        "name": "parentId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40111,
                        "src": "4195:8:47",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 40121,
                        "name": "_sellToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40089,
                        "src": "4205:10:47",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 40122,
                        "name": "_sellAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40091,
                        "src": "4217:11:47",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 40123,
                        "name": "_buyToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40093,
                        "src": "4230:9:47",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 40124,
                        "name": "_buyAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40095,
                        "src": "4241:10:47",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 40125,
                          "name": "LibConstants",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 43445,
                          "src": "4253:12:47",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_LibConstants_$43445_$",
                            "typeString": "type(library LibConstants)"
                          }
                        },
                        "id": 40126,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "4266:21:47",
                        "memberName": "FEE_SCHEDULE_STANDARD",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 43368,
                        "src": "4253:34:47",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 40118,
                        "name": "LibMarket",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47096,
                        "src": "4166:9:47",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_LibMarket_$47096_$",
                          "typeString": "type(library LibMarket)"
                        }
                      },
                      "id": 40119,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4176:18:47",
                      "memberName": "_executeLimitOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47034,
                      "src": "4166:28:47",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$_t_uint256_$_t_bytes32_$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (bytes32,bytes32,uint256,bytes32,uint256,uint256) returns (uint256,uint256,uint256)"
                      }
                    },
                    "id": 40127,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4166:122:47",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256)"
                    }
                  },
                  "functionReturnParameters": 40109,
                  "id": 40128,
                  "nodeType": "Return",
                  "src": "4159:129:47"
                }
              ]
            },
            "baseFunctions": [
              41671
            ],
            "documentation": {
              "id": 40087,
              "nodeType": "StructuredDocumentation",
              "src": "2854:642:47",
              "text": " @notice Execute a limit offer.\n @param _sellToken Token to sell.\n @param _sellAmount Amount to sell.\n @param _buyToken Token to buy.\n @param _buyAmount Amount to buy.\n @return offerId_ returns >0 if a limit offer was created on the market because the offer couldn't be totally fulfilled immediately. In this case the return value is the created offer's id.\n @return buyTokenCommissionsPaid_ The amount of the buy token paid as commissions on this particular order.\n @return sellTokenCommissionsPaid_ The amount of the sell token paid as commissions on this particular order."
            },
            "functionSelector": "9df00480",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 40098,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "3681:3:47",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 40099,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "3685:3:47",
                    "memberName": "sig",
                    "nodeType": "MemberAccess",
                    "src": "3681:7:47",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  }
                ],
                "id": 40100,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 40097,
                  "name": "notLocked",
                  "nameLocations": [
                    "3671:9:47"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 38831,
                  "src": "3671:9:47"
                },
                "nodeType": "ModifierInvocation",
                "src": "3671:18:47"
              },
              {
                "id": 40102,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 40101,
                  "name": "nonReentrant",
                  "nameLocations": [
                    "3698:12:47"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 52983,
                  "src": "3698:12:47"
                },
                "nodeType": "ModifierInvocation",
                "src": "3698:12:47"
              }
            ],
            "name": "executeLimitOffer",
            "nameLocation": "3510:17:47",
            "parameters": {
              "id": 40096,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40089,
                  "mutability": "mutable",
                  "name": "_sellToken",
                  "nameLocation": "3545:10:47",
                  "nodeType": "VariableDeclaration",
                  "scope": 40130,
                  "src": "3537:18:47",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 40088,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3537:7:47",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40091,
                  "mutability": "mutable",
                  "name": "_sellAmount",
                  "nameLocation": "3573:11:47",
                  "nodeType": "VariableDeclaration",
                  "scope": 40130,
                  "src": "3565:19:47",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40090,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3565:7:47",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40093,
                  "mutability": "mutable",
                  "name": "_buyToken",
                  "nameLocation": "3602:9:47",
                  "nodeType": "VariableDeclaration",
                  "scope": 40130,
                  "src": "3594:17:47",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 40092,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3594:7:47",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40095,
                  "mutability": "mutable",
                  "name": "_buyAmount",
                  "nameLocation": "3629:10:47",
                  "nodeType": "VariableDeclaration",
                  "scope": 40130,
                  "src": "3621:18:47",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40094,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3621:7:47",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3527:118:47"
            },
            "returnParameters": {
              "id": 40109,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40104,
                  "mutability": "mutable",
                  "name": "offerId_",
                  "nameLocation": "3749:8:47",
                  "nodeType": "VariableDeclaration",
                  "scope": 40130,
                  "src": "3741:16:47",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40103,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3741:7:47",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40106,
                  "mutability": "mutable",
                  "name": "buyTokenCommissionsPaid_",
                  "nameLocation": "3779:24:47",
                  "nodeType": "VariableDeclaration",
                  "scope": 40130,
                  "src": "3771:32:47",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40105,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3771:7:47",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40108,
                  "mutability": "mutable",
                  "name": "sellTokenCommissionsPaid_",
                  "nameLocation": "3825:25:47",
                  "nodeType": "VariableDeclaration",
                  "scope": 40130,
                  "src": "3817:33:47",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40107,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3817:7:47",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3727:133:47"
            },
            "scope": 40218,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 40141,
            "nodeType": "FunctionDefinition",
            "src": "4385:109:47",
            "nodes": [],
            "body": {
              "id": 40140,
              "nodeType": "Block",
              "src": "4443:51:47",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 40136,
                        "name": "LibMarket",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47096,
                        "src": "4460:9:47",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_LibMarket_$47096_$",
                          "typeString": "type(library LibMarket)"
                        }
                      },
                      "id": 40137,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4470:15:47",
                      "memberName": "_getLastOfferId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47071,
                      "src": "4460:25:47",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 40138,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4460:27:47",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 40135,
                  "id": 40139,
                  "nodeType": "Return",
                  "src": "4453:34:47"
                }
              ]
            },
            "baseFunctions": [
              41693
            ],
            "documentation": {
              "id": 40131,
              "nodeType": "StructuredDocumentation",
              "src": "4301:79:47",
              "text": " @dev Get last created offer.\n @return offer id."
            },
            "functionSelector": "59e148fc",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getLastOfferId",
            "nameLocation": "4394:14:47",
            "parameters": {
              "id": 40132,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4408:2:47"
            },
            "returnParameters": {
              "id": 40135,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40134,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 40141,
                  "src": "4434:7:47",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40133,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4434:7:47",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4433:9:47"
            },
            "scope": 40218,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 40158,
            "nodeType": "FunctionDefinition",
            "src": "4759:167:47",
            "nodes": [],
            "body": {
              "id": 40157,
              "nodeType": "Block",
              "src": "4854:72:47",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 40153,
                        "name": "_sellToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40144,
                        "src": "4897:10:47",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 40154,
                        "name": "_buyToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40146,
                        "src": "4909:9:47",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 40151,
                        "name": "LibMarket",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47096,
                        "src": "4871:9:47",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_LibMarket_$47096_$",
                          "typeString": "type(library LibMarket)"
                        }
                      },
                      "id": 40152,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4881:15:47",
                      "memberName": "_getBestOfferId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45519,
                      "src": "4871:25:47",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_uint256_$",
                        "typeString": "function (bytes32,bytes32) view returns (uint256)"
                      }
                    },
                    "id": 40155,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4871:48:47",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 40150,
                  "id": 40156,
                  "nodeType": "Return",
                  "src": "4864:55:47"
                }
              ]
            },
            "baseFunctions": [
              41687
            ],
            "documentation": {
              "id": 40142,
              "nodeType": "StructuredDocumentation",
              "src": "4500:254:47",
              "text": " @notice Get current best offer for given token pair.\n @dev This means finding the highest sellToken-per-buyToken price, i.e. price = sellToken / buyToken\n @return offerId, or 0 if no current best is available."
            },
            "functionSelector": "4c8198dc",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBestOfferId",
            "nameLocation": "4768:14:47",
            "parameters": {
              "id": 40147,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40144,
                  "mutability": "mutable",
                  "name": "_sellToken",
                  "nameLocation": "4791:10:47",
                  "nodeType": "VariableDeclaration",
                  "scope": 40158,
                  "src": "4783:18:47",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 40143,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4783:7:47",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40146,
                  "mutability": "mutable",
                  "name": "_buyToken",
                  "nameLocation": "4811:9:47",
                  "nodeType": "VariableDeclaration",
                  "scope": 40158,
                  "src": "4803:17:47",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 40145,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4803:7:47",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4782:39:47"
            },
            "returnParameters": {
              "id": 40150,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40149,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 40158,
                  "src": "4845:7:47",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40148,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4845:7:47",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4844:9:47"
            },
            "scope": 40218,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 40173,
            "nodeType": "FunctionDefinition",
            "src": "5097:143:47",
            "nodes": [],
            "body": {
              "id": 40172,
              "nodeType": "Block",
              "src": "5187:53:47",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 40169,
                        "name": "_offerId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40161,
                        "src": "5224:8:47",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 40167,
                        "name": "LibMarket",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47096,
                        "src": "5204:9:47",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_LibMarket_$47096_$",
                          "typeString": "type(library LibMarket)"
                        }
                      },
                      "id": 40168,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5214:9:47",
                      "memberName": "_getOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47055,
                      "src": "5204:19:47",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_struct$_MarketInfo_$41197_memory_ptr_$",
                        "typeString": "function (uint256) view returns (struct MarketInfo memory)"
                      }
                    },
                    "id": 40170,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5204:29:47",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_MarketInfo_$41197_memory_ptr",
                      "typeString": "struct MarketInfo memory"
                    }
                  },
                  "functionReturnParameters": 40166,
                  "id": 40171,
                  "nodeType": "Return",
                  "src": "5197:36:47"
                }
              ]
            },
            "baseFunctions": [
              41702
            ],
            "documentation": {
              "id": 40159,
              "nodeType": "StructuredDocumentation",
              "src": "4932:160:47",
              "text": " @dev Get the details of the offer #`_offerId`\n @param _offerId ID of a particular offer\n @return _offerState details of the offer"
            },
            "functionSelector": "4579268a",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getOffer",
            "nameLocation": "5106:8:47",
            "parameters": {
              "id": 40162,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40161,
                  "mutability": "mutable",
                  "name": "_offerId",
                  "nameLocation": "5123:8:47",
                  "nodeType": "VariableDeclaration",
                  "scope": 40173,
                  "src": "5115:16:47",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40160,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5115:7:47",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5114:18:47"
            },
            "returnParameters": {
              "id": 40166,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40165,
                  "mutability": "mutable",
                  "name": "_offerState",
                  "nameLocation": "5174:11:47",
                  "nodeType": "VariableDeclaration",
                  "scope": 40173,
                  "src": "5156:29:47",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_MarketInfo_$41197_memory_ptr",
                    "typeString": "struct MarketInfo"
                  },
                  "typeName": {
                    "id": 40164,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 40163,
                      "name": "MarketInfo",
                      "nameLocations": [
                        "5156:10:47"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 41197,
                      "src": "5156:10:47"
                    },
                    "referencedDeclaration": 41197,
                    "src": "5156:10:47",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_MarketInfo_$41197_storage_ptr",
                      "typeString": "struct MarketInfo"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5155:31:47"
            },
            "scope": 40218,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 40187,
            "nodeType": "FunctionDefinition",
            "src": "5400:128:47",
            "nodes": [],
            "body": {
              "id": 40186,
              "nodeType": "Block",
              "src": "5470:58:47",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 40183,
                        "name": "_offerId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40176,
                        "src": "5512:8:47",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 40181,
                        "name": "LibMarket",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47096,
                        "src": "5487:9:47",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_LibMarket_$47096_$",
                          "typeString": "type(library LibMarket)"
                        }
                      },
                      "id": 40182,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5497:14:47",
                      "memberName": "_isActiveOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47095,
                      "src": "5487:24:47",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (uint256) view returns (bool)"
                      }
                    },
                    "id": 40184,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5487:34:47",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 40180,
                  "id": 40185,
                  "nodeType": "Return",
                  "src": "5480:41:47"
                }
              ]
            },
            "baseFunctions": [
              41710
            ],
            "documentation": {
              "id": 40174,
              "nodeType": "StructuredDocumentation",
              "src": "5246:149:47",
              "text": " @dev Check if the offer #`_offerId` is active or not.\n @param _offerId ID of a particular offer\n @return active or not"
            },
            "functionSelector": "8d81a1d3",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isActiveOffer",
            "nameLocation": "5409:13:47",
            "parameters": {
              "id": 40177,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40176,
                  "mutability": "mutable",
                  "name": "_offerId",
                  "nameLocation": "5431:8:47",
                  "nodeType": "VariableDeclaration",
                  "scope": 40187,
                  "src": "5423:16:47",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40175,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5423:7:47",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5422:18:47"
            },
            "returnParameters": {
              "id": 40180,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40179,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 40187,
                  "src": "5464:4:47",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 40178,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5464:4:47",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5463:6:47"
            },
            "scope": 40218,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 40204,
            "nodeType": "FunctionDefinition",
            "src": "5749:183:47",
            "nodes": [],
            "body": {
              "id": 40203,
              "nodeType": "Block",
              "src": "5858:74:47",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 40201,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 40196,
                      "name": "tc",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40194,
                      "src": "5868:2:47",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TradingCommissions_$41311_memory_ptr",
                        "typeString": "struct TradingCommissions memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 40199,
                          "name": "buyAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 40190,
                          "src": "5915:9:47",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 40197,
                          "name": "LibFeeRouter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45224,
                          "src": "5873:12:47",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_LibFeeRouter_$45224_$",
                            "typeString": "type(library LibFeeRouter)"
                          }
                        },
                        "id": 40198,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5886:28:47",
                        "memberName": "_calculateTradingCommissions",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 45139,
                        "src": "5873:41:47",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_struct$_TradingCommissions_$41311_memory_ptr_$",
                          "typeString": "function (uint256) view returns (struct TradingCommissions memory)"
                        }
                      },
                      "id": 40200,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5873:52:47",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TradingCommissions_$41311_memory_ptr",
                        "typeString": "struct TradingCommissions memory"
                      }
                    },
                    "src": "5868:57:47",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TradingCommissions_$41311_memory_ptr",
                      "typeString": "struct TradingCommissions memory"
                    }
                  },
                  "id": 40202,
                  "nodeType": "ExpressionStatement",
                  "src": "5868:57:47"
                }
              ]
            },
            "baseFunctions": [
              41719
            ],
            "documentation": {
              "id": 40188,
              "nodeType": "StructuredDocumentation",
              "src": "5534:210:47",
              "text": " @dev Calculate the trading commissions based on a buy amount.\n @param buyAmount The amount that the commissions payments are calculated from.\n @return tc TradingCommissions struct"
            },
            "functionSelector": "eb3f5926",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calculateTradingCommissions",
            "nameLocation": "5758:27:47",
            "parameters": {
              "id": 40191,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40190,
                  "mutability": "mutable",
                  "name": "buyAmount",
                  "nameLocation": "5794:9:47",
                  "nodeType": "VariableDeclaration",
                  "scope": 40204,
                  "src": "5786:17:47",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40189,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5786:7:47",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5785:19:47"
            },
            "returnParameters": {
              "id": 40195,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40194,
                  "mutability": "mutable",
                  "name": "tc",
                  "nameLocation": "5854:2:47",
                  "nodeType": "VariableDeclaration",
                  "scope": 40204,
                  "src": "5828:28:47",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_TradingCommissions_$41311_memory_ptr",
                    "typeString": "struct TradingCommissions"
                  },
                  "typeName": {
                    "id": 40193,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 40192,
                      "name": "TradingCommissions",
                      "nameLocations": [
                        "5828:18:47"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 41311,
                      "src": "5828:18:47"
                    },
                    "referencedDeclaration": 41311,
                    "src": "5828:18:47",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TradingCommissions_$41311_storage_ptr",
                      "typeString": "struct TradingCommissions"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5827:30:47"
            },
            "scope": 40218,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 40217,
            "nodeType": "FunctionDefinition",
            "src": "5938:178:47",
            "nodes": [],
            "body": {
              "id": 40216,
              "nodeType": "Block",
              "src": "6046:70:47",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 40214,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 40210,
                      "name": "bp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40208,
                      "src": "6056:2:47",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TradingCommissionsBasisPoints_$41322_memory_ptr",
                        "typeString": "struct TradingCommissionsBasisPoints memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 40211,
                          "name": "LibFeeRouter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45224,
                          "src": "6061:12:47",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_LibFeeRouter_$45224_$",
                            "typeString": "type(library LibFeeRouter)"
                          }
                        },
                        "id": 40212,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6074:33:47",
                        "memberName": "_getTradingCommissionsBasisPoints",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 45188,
                        "src": "6061:46:47",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_struct$_TradingCommissionsBasisPoints_$41322_memory_ptr_$",
                          "typeString": "function () view returns (struct TradingCommissionsBasisPoints memory)"
                        }
                      },
                      "id": 40213,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6061:48:47",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TradingCommissionsBasisPoints_$41322_memory_ptr",
                        "typeString": "struct TradingCommissionsBasisPoints memory"
                      }
                    },
                    "src": "6056:53:47",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TradingCommissionsBasisPoints_$41322_memory_ptr",
                      "typeString": "struct TradingCommissionsBasisPoints memory"
                    }
                  },
                  "id": 40215,
                  "nodeType": "ExpressionStatement",
                  "src": "6056:53:47"
                }
              ]
            },
            "baseFunctions": [
              41726
            ],
            "functionSelector": "ed7364ae",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTradingCommissionsBasisPoints",
            "nameLocation": "5947:32:47",
            "parameters": {
              "id": 40205,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5979:2:47"
            },
            "returnParameters": {
              "id": 40209,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40208,
                  "mutability": "mutable",
                  "name": "bp",
                  "nameLocation": "6042:2:47",
                  "nodeType": "VariableDeclaration",
                  "scope": 40217,
                  "src": "6005:39:47",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_TradingCommissionsBasisPoints_$41322_memory_ptr",
                    "typeString": "struct TradingCommissionsBasisPoints"
                  },
                  "typeName": {
                    "id": 40207,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 40206,
                      "name": "TradingCommissionsBasisPoints",
                      "nameLocations": [
                        "6005:29:47"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 41322,
                      "src": "6005:29:47"
                    },
                    "referencedDeclaration": 41322,
                    "src": "6005:29:47",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TradingCommissionsBasisPoints_$41322_storage_ptr",
                      "typeString": "struct TradingCommissionsBasisPoints"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6004:41:47"
            },
            "scope": 40218,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 40028,
              "name": "IMarketFacet",
              "nameLocations": [
                "875:12:47"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 41727,
              "src": "875:12:47"
            },
            "id": 40029,
            "nodeType": "InheritanceSpecifier",
            "src": "875:12:47"
          },
          {
            "baseName": {
              "id": 40030,
              "name": "Modifiers",
              "nameLocations": [
                "889:9:47"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 38973,
              "src": "889:9:47"
            },
            "id": 40031,
            "nodeType": "InheritanceSpecifier",
            "src": "889:9:47"
          },
          {
            "baseName": {
              "id": 40032,
              "name": "ReentrancyGuard",
              "nameLocations": [
                "900:15:47"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 52984,
              "src": "900:15:47"
            },
            "id": 40033,
            "nodeType": "InheritanceSpecifier",
            "src": "900:15:47"
          }
        ],
        "canonicalName": "MarketFacet",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 40027,
          "nodeType": "StructuredDocumentation",
          "src": "606:244:47",
          "text": " @title Matching Market (inspired by MakerOTC: https://github.com/nayms/maker-otc/blob/master/contracts/matching_market.sol)\n @notice Trade entity tokens\n @dev This should only be called through an entity, never directly by an EOA"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          40218,
          52984,
          38973,
          41727
        ],
        "name": "MarketFacet",
        "nameLocation": "860:11:47",
        "scope": 40219,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 47
}