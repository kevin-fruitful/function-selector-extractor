{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_contract",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_errorMessage",
          "type": "string"
        }
      ],
      "name": "enforceHasContractCode",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "excludedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifactSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedArtifactSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "targetedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "writeTokenBalance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405260008054600160ff19918216811790925560048054909116909117905534801561002d57600080fd5b5061257b8061003d6000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c806385226c811161007157806385226c8114610124578063916a17c614610139578063b5508aa914610141578063ba414fa614610149578063e20c9f7114610161578063fa7626d41461016957600080fd5b80631ed7831c146100b95780633e5e3c23146100d75780633f7286f4146100df57806349b53548146100e757806360f98dc7146100fc57806366d9a9a01461010f575b600080fd5b6100c1610176565b6040516100ce9190611e7c565b60405180910390f35b6100c16101d8565b6100c1610238565b6100fa6100f5366004611ee0565b610298565b005b6100fa61010a366004611f72565b6103d4565b610117610404565b6040516100ce9190612018565b61012c6104f3565b6040516100ce919061211b565b6101176105c3565b61012c6106a9565b610151610779565b60405190151581526020016100ce565b6100c16108a4565b6000546101519060ff1681565b6060600d8054806020026020016040519081016040528092919081815260200182805480156101ce57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116101b0575b5050505050905090565b6060600f8054806020026020016040519081016040528092919081815260200182805480156101ce576020028201919060005260206000209081546001600160a01b031681526001909101906020018083116101b0575050505050905090565b6060600e8054806020026020016040519081016040528092919081815260200182805480156101ce576020028201919060005260206000209081546001600160a01b031681526001909101906020018083116101b0575050505050905090565b60405163095ea7b360e01b81526001600160a01b0384811660048301526024820183905283919082169063095ea7b3906044016020604051808303816000875af11580156102ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061030e919061217d565b5061033f82610339876103336370a0823160e01b61032d60148a610904565b9061092e565b9061094b565b90610973565b6040516370a0823160e01b81526001600160a01b0386811660048301526103cd91908316906370a0823190602401602060405180830381865afa15801561038a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ae91906121a6565b8360405180606001604052806024815260200161250260249139610981565b5050505050565b813b81816103fe5760405162461bcd60e51b81526004016103f591906121bf565b60405180910390fd5b50505050565b60606012805480602002602001604051908101604052809291908181526020016000905b828210156104ea5760008481526020908190206040805180820182526002860290920180546001600160a01b031683526001810180548351818702810187019094528084529394919385830193928301828280156104d257602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b031916815260200190600401906020826003010492830192600103820291508084116104945790505b50505050508152505081526020019060010190610428565b50505050905090565b60606011805480602002602001604051908101604052809291908181526020016000905b828210156104ea578382906000526020600020018054610536906121d2565b80601f0160208091040260200160405190810160405280929190818152602001828054610562906121d2565b80156105af5780601f10610584576101008083540402835291602001916105af565b820191906000526020600020905b81548152906001019060200180831161059257829003601f168201915b505050505081526020019060010190610517565b60606013805480602002602001604051908101604052809291908181526020016000905b828210156104ea5760008481526020908190206040805180820182526002860290920180546001600160a01b0316835260018101805483518187028101870190945280845293949193858301939283018282801561069157602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b031916815260200190600401906020826003010492830192600103820291508084116106535790505b505050505081525050815260200190600101906105e7565b60606010805480602002602001604051908101604052809291908181526020016000905b828210156104ea5783829060005260206000200180546106ec906121d2565b80601f0160208091040260200160405190810160405280929190818152602001828054610718906121d2565b80156107655780601f1061073a57610100808354040283529160200191610765565b820191906000526020600020905b81548152906001019060200180831161074857829003601f168201915b5050505050815260200190600101906106cd565b60008054610100900460ff16156107995750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b1561089f5760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b82840152825180830384018152606083019093526000929091610827917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc49160800161220c565b60408051601f19818403018152908290526108419161223d565b6000604051808303816000865af19150503d806000811461087e576040519150601f19603f3d011682016040523d82523d6000602084013e610883565b606091505b509150508080602001905181019061089b919061217d565b9150505b919050565b6060600c8054806020026020016040519081016040528092919081815260200182805480156101ce576020028201919060005260206000209081546001600160a01b031681526001909101906020018083116101b0575050505050905090565b6005820180546001600160a01b0319166001600160a01b0383161790556000825b90505b92915050565b60038201805463ffffffff191660e083901c179055600082610925565b6002820180546001810182556000918252602082206001600160a01b03841691015582610925565b61097d82826109ce565b5050565b8183146109c9577f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf3583816040516109b79190612259565b60405180910390a16109c98383610d25565b505050565b600582015460038301546004840154600285018054604080516020808402820181019092528281526001600160a01b039096169560e09590951b9460009390929091830182828015610a3f57602002820191906000526020600020905b815481526020019060010190808311610a2b575b50505050509050600083610a5283610e4c565b604051602001610a6392919061220c565b60408051601f198184030181528282526001600160a01b038816600090815260018b0160209081528382206001600160e01b03198a168352815292812091945090929091610ab5918691889101612288565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff16610aed57610aeb87610ef3565b505b6001600160a01b0385166000908152602088815260408083206001600160e01b0319881684528252808320905190918391610b2c918791899101612288565b6040516020818303038152906040528051906020012081526020019081526020016000205460001b9050600080876001600160a01b031684604051610b71919061223d565b600060405180830381855afa9150503d8060008114610bac576040519150601f19603f3d011682016040523d82523d6000602084013e610bb1565b606091505b509150610bca905081610bc58860206122d8565b610efe565b604051630667f9d760e41b81526001600160a01b038a1660048201526024810185905290925060009150737109709ecfa91a80626ff3989d68f67f5b1dd12d9063667f9d7090604401602060405180830381865afa158015610c30573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c5491906121a6565b9050808214610c755760405162461bcd60e51b81526004016103f5906122ef565b6040516370ca10bb60e01b8152737109709ecfa91a80626ff3989d68f67f5b1dd12d906370ca10bb90610cb0908b9087908e9060040161238a565b600060405180830381600087803b158015610cca57600080fd5b505af1158015610cde573d6000803e3d6000fd5b50505060058b0180546001600160a01b03191690555060038a01805463ffffffff19169055610d1160028b016000611e42565b896004016000905550505050505050505050565b80821461097d577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051610d969060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a160408051818152600a81830152690808080808081319599d60b21b60608201526020810184905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a160408051818152600a81830152690808080808149a59da1d60b21b60608201526020810183905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a161097d610f7b565b6060600082516020610e5e91906122d8565b67ffffffffffffffff811115610e7657610e76611f2b565b6040519080825280601f01601f191660200182016040528015610ea0576020820181803683370190505b50905060005b8351811015610eec576000848281518110610ec357610ec36123ab565b602002602001015190508082602002602001840152508080610ee4906123c1565b915050610ea6565b5092915050565b600061092882611080565b60008060006020855111610f13578451610f16565b60205b905060005b81811015610f7157610f2e8160086122d8565b86610f3983886123da565b81518110610f4957610f496123ab565b01602001516001600160f81b031916901c929092179180610f69816123c1565b915050610f1b565b5090949350505050565b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b1561106f57604051600090737109709ecfa91a80626ff3989d68f67f5b1dd12d907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc490610ff09083906519985a5b195960d21b9060019060200161238a565b60408051601f198184030181529082905261100e929160200161220c565b60408051601f19818403018152908290526110289161223d565b6000604051808303816000865af19150503d8060008114611065576040519150601f19603f3d011682016040523d82523d6000602084013e61106a565b606091505b505050505b6000805461ff001916610100179055565b600581015460038201546004830154600284018054604080516020808402820181019092528281526000966001600160a01b03169560e01b9493879391929091908301828280156110f057602002820191906000526020600020905b8154815260200190600101908083116110dc575b5050506001600160a01b038716600090815260018a01602090815260408083206001600160e01b03198a168452825280832090519596509491935061113a92508591879101612288565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff16156111d6576001600160a01b0384166000908152602087815260408083206001600160e01b031987168452825280832090519092916111a6918591879101612288565b60405160208183030381529060405280519060200120815260200190815260200160002054945050505050919050565b6000836111e283611d2f565b6040516020016111f392919061220c565b604051602081830303815290604052905060008051602061252683398151915260001c6001600160a01b031663266cf1096040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561125057600080fd5b505af1158015611264573d6000803e3d6000fd5b50505050600080866001600160a01b031683604051611283919061223d565b600060405180830381855afa9150503d80600081146112be576040519150601f19603f3d011682016040523d82523d6000602084013e6112c3565b606091505b5091506112dc9050816112d78760206122d8565b611dcf565b6040516365bc948160e01b81526001600160a01b038916600482015290925060009150737109709ecfa91a80626ff3989d68f67f5b1dd12d906365bc9481906024016000604051808303816000875af115801561133d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611365919081019061246d565b509050805160010361162757600060008051602061252683398151915260001c6001600160a01b031663667f9d7089846000815181106113a7576113a76123ab565b60200260200101516040518363ffffffff1660e01b81526004016113e09291906001600160a01b03929092168252602082015260400190565b602060405180830381865afa1580156113fd573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061142191906121a6565b905080611488577f080fc4a96620c4462e705b23f346413fe3796bb63c6f8d8591baec0e231577a5888360008151811061145d5761145d6123ab565b602090810291909101810151604080516001600160a01b039094168452918301520160405180910390a15b8083146114a75760405162461bcd60e51b81526004016103f5906122ef565b7f9c9555b1e3102e3cf48f427d79cb678f5d9bd1ed0ad574389461e255f95170ed888887896040516020016114dd929190612288565b6040516020818303038152906040528051906020012085600081518110611506576115066123ab565b602002602001015160001c60405161152194939291906124d1565b60405180910390a18160008151811061153c5761153c6123ab565b6020908102919091018101516001600160a01b038a1660009081528c835260408082206001600160e01b03198c1683528452808220905192939092611585918a918c9101612288565b60408051601f1981840301815291815281516020928301208352828201939093529082016000908120939093556001600160a01b038b16835260018d810182528284206001600160e01b03198c168552825282842092519093916115ed918a918c9101612288565b60408051808303601f19018152918152815160209283012083529082019290925201600020805460ff191691151591909117905550611bba565b600181511115611b4a5760005b8151811015611b4457600060008051602061252683398151915260001c6001600160a01b031663667f9d708a858581518110611672576116726123ab565b60200260200101516040518363ffffffff1660e01b81526004016116ab9291906001600160a01b03929092168252602082015260400190565b602060405180830381865afa1580156116c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116ec91906121a6565b905080611752577f080fc4a96620c4462e705b23f346413fe3796bb63c6f8d8591baec0e231577a589848481518110611727576117276123ab565b602090810291909101810151604080516001600160a01b039094168452918301520160405180910390a15b60008051602061252683398151915260001c6001600160a01b03166370ca10bb8a858581518110611785576117856123ab565b602002602001015161133760f01b6040518463ffffffff1660e01b81526004016117b19392919061238a565b600060405180830381600087803b1580156117cb57600080fd5b505af11580156117df573d6000803e3d6000fd5b50505050600060608a6001600160a01b0316876040516117ff919061223d565b600060405180830381855afa9150503d806000811461183a576040519150601f19603f3d011682016040523d82523d6000602084013e61183f565b606091505b509092509050611854816112d78b60206122d8565b9550818015611867575061133760f01b86145b15611aa2577f9c9555b1e3102e3cf48f427d79cb678f5d9bd1ed0ad574389461e255f95170ed8b8b8a8c6040516020016118a2929190612288565b604051602081830303815290604052805190602001208888815181106118ca576118ca6123ab565b602002602001015160001c6040516118e594939291906124d1565b60405180910390a18484815181106118ff576118ff6123ab565b6020908102919091018101516001600160a01b038d1660009081528f835260408082206001600160e01b03198f1683528452808220905192939092611948918d918f9101612288565b6040516020818303038152906040528051906020012081526020019081526020016000208190555060018d60010160008d6001600160a01b03166001600160a01b0316815260200190815260200160002060008c6001600160e01b0319166001600160e01b031916815260200190815260200160002060008a8c6040516020016119d3929190612288565b60405160208183030381529060405280519060200120815260200190815260200160002060006101000a81548160ff02191690831515021790555060008051602061252683398151915260001c6001600160a01b03166370ca10bb8c878781518110611a4157611a416123ab565b6020026020010151866040518463ffffffff1660e01b8152600401611a689392919061238a565b600060405180830381600087803b158015611a8257600080fd5b505af1158015611a96573d6000803e3d6000fd5b50505050505050611b44565b60008051602061252683398151915260001c6001600160a01b03166370ca10bb8c878781518110611ad557611ad56123ab565b6020026020010151866040518463ffffffff1660e01b8152600401611afc9392919061238a565b600060405180830381600087803b158015611b1657600080fd5b505af1158015611b2a573d6000803e3d6000fd5b505050505050508080611b3c906123c1565b915050611634565b50611bba565b6040805162461bcd60e51b81526020600482015260248101919091527f73746453746f726167652066696e642853746453746f72616765293a204e6f2060448201527f73746f726167652075736520646574656374656420666f72207461726765742e60648201526084016103f5565b6001600160a01b038716600090815260018a01602090815260408083206001600160e01b03198a16845282528083209051909291611bfc9188918a9101612288565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff16611c895760405162461bcd60e51b815260206004820152602f60248201527f73746453746f726167652066696e642853746453746f72616765293a20536c6f60448201526e3a143994903737ba103337bab7321760891b60648201526084016103f5565b6005890180546001600160a01b031916905560038901805463ffffffff19169055611cb860028a016000611e42565b600060048a018190556001600160a01b038816815260208a815260408083206001600160e01b03198a16845282528083209051909291611cfc9188918a9101612288565b60405160208183030381529060405280519060200120815260200190815260200160002054975050505050505050919050565b6060600082516020611d4191906122d8565b67ffffffffffffffff811115611d5957611d59611f2b565b6040519080825280601f01601f191660200182016040528015611d83576020820181803683370190505b50905060005b8351811015610eec576000848281518110611da657611da66123ab565b602002602001015190508082602002602001840152508080611dc7906123c1565b915050611d89565b60008060006020855111611de4578451611de7565b60205b905060005b81811015610f7157611dff8160086122d8565b86611e0a83886123da565b81518110611e1a57611e1a6123ab565b01602001516001600160f81b031916901c929092179180611e3a816123c1565b915050611dec565b5080546000825590600052602060002090810190611e609190611e63565b50565b5b80821115611e785760008155600101611e64565b5090565b6020808252825182820181905260009190848201906040850190845b81811015611ebd5783516001600160a01b031683529284019291840191600101611e98565b50909695505050505050565b80356001600160a01b038116811461089f57600080fd5b60008060008060808587031215611ef657600080fd5b611eff85611ec9565b9350611f0d60208601611ec9565b9250611f1b60408601611ec9565b9396929550929360600135925050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715611f6a57611f6a611f2b565b604052919050565b60008060408385031215611f8557600080fd5b611f8e83611ec9565b915060208084013567ffffffffffffffff80821115611fac57600080fd5b818601915086601f830112611fc057600080fd5b813581811115611fd257611fd2611f2b565b611fe4601f8201601f19168501611f41565b91508082528784828501011115611ffa57600080fd5b80848401858401376000848284010152508093505050509250929050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b848110156120bc57898403603f19018652825180516001600160a01b03168552880151888501889052805188860181905290890190839060608701905b808310156120a75783516001600160e01b0319168252928b019260019290920191908b019061207d565b50978a01979550505091870191600101612040565b50919998505050505050505050565b60005b838110156120e65781810151838201526020016120ce565b50506000910152565b600081518084526121078160208601602086016120cb565b601f01601f19169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561217057603f1988860301845261215e8583516120ef565b94509285019290850190600101612142565b5092979650505050505050565b60006020828403121561218f57600080fd5b8151801515811461219f57600080fd5b9392505050565b6000602082840312156121b857600080fd5b5051919050565b60208152600061092560208301846120ef565b600181811c908216806121e657607f821691505b60208210810361220657634e487b7160e01b600052602260045260246000fd5b50919050565b6001600160e01b031983168152815160009061222f8160048501602087016120cb565b919091016004019392505050565b6000825161224f8184602087016120cb565b9190910192915050565b60408152600560408201526422b93937b960d91b606082015260806020820152600061092560808301846120ef565b825160009082906020808701845b838110156122b257815185529382019390820190600101612296565b5050948252509092019392505050565b634e487b7160e01b600052601160045260246000fd5b8082028115828204841417610928576109286122c2565b6020808252606f908201527f73746453746f726167652066696e642853746453746f72616765293a2050616360408201527f6b656420736c6f742e205468697320776f756c642063617573652064616e676560608201527f726f7573206f76657277726974696e6720616e642063757272656e746c79206960808201526e39b713ba1039bab83837b93a32b21760891b60a082015260c00190565b6001600160a01b039390931683526020830191909152604082015260600190565b634e487b7160e01b600052603260045260246000fd5b6000600182016123d3576123d36122c2565b5060010190565b80820180821115610928576109286122c2565b600082601f8301126123fe57600080fd5b8151602067ffffffffffffffff82111561241a5761241a611f2b565b8160051b612429828201611f41565b928352848101820192828101908785111561244357600080fd5b83870192505b8483101561246257825182529183019190830190612449565b979650505050505050565b6000806040838503121561248057600080fd5b825167ffffffffffffffff8082111561249857600080fd5b6124a4868387016123ed565b935060208501519150808211156124ba57600080fd5b506124c7858286016123ed565b9150509250929050565b6001600160a01b039490941684526001600160e01b0319929092166020840152604083015260608201526080019056fe62616c616e63652073686f756c6420494e43524541534520286166746572206d696e7429885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12da2646970667358221220dd662b7c8aac1be35e4e1be6505f5ddeb6498c9d1935f2611b0d32f0daeed25e64736f6c63430008110033",
    "sourceMap": "142:748:120:-:0;;;1572:26:0;;;1594:4;-1:-1:-1;;1572:26:0;;;;;;;;3288:44:4;;;;;;;;;;;142:748:120;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100b45760003560e01c806385226c811161007157806385226c8114610124578063916a17c614610139578063b5508aa914610141578063ba414fa614610149578063e20c9f7114610161578063fa7626d41461016957600080fd5b80631ed7831c146100b95780633e5e3c23146100d75780633f7286f4146100df57806349b53548146100e757806360f98dc7146100fc57806366d9a9a01461010f575b600080fd5b6100c1610176565b6040516100ce9190611e7c565b60405180910390f35b6100c16101d8565b6100c1610238565b6100fa6100f5366004611ee0565b610298565b005b6100fa61010a366004611f72565b6103d4565b610117610404565b6040516100ce9190612018565b61012c6104f3565b6040516100ce919061211b565b6101176105c3565b61012c6106a9565b610151610779565b60405190151581526020016100ce565b6100c16108a4565b6000546101519060ff1681565b6060600d8054806020026020016040519081016040528092919081815260200182805480156101ce57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116101b0575b5050505050905090565b6060600f8054806020026020016040519081016040528092919081815260200182805480156101ce576020028201919060005260206000209081546001600160a01b031681526001909101906020018083116101b0575050505050905090565b6060600e8054806020026020016040519081016040528092919081815260200182805480156101ce576020028201919060005260206000209081546001600160a01b031681526001909101906020018083116101b0575050505050905090565b60405163095ea7b360e01b81526001600160a01b0384811660048301526024820183905283919082169063095ea7b3906044016020604051808303816000875af11580156102ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061030e919061217d565b5061033f82610339876103336370a0823160e01b61032d60148a610904565b9061092e565b9061094b565b90610973565b6040516370a0823160e01b81526001600160a01b0386811660048301526103cd91908316906370a0823190602401602060405180830381865afa15801561038a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ae91906121a6565b8360405180606001604052806024815260200161250260249139610981565b5050505050565b813b81816103fe5760405162461bcd60e51b81526004016103f591906121bf565b60405180910390fd5b50505050565b60606012805480602002602001604051908101604052809291908181526020016000905b828210156104ea5760008481526020908190206040805180820182526002860290920180546001600160a01b031683526001810180548351818702810187019094528084529394919385830193928301828280156104d257602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b031916815260200190600401906020826003010492830192600103820291508084116104945790505b50505050508152505081526020019060010190610428565b50505050905090565b60606011805480602002602001604051908101604052809291908181526020016000905b828210156104ea578382906000526020600020018054610536906121d2565b80601f0160208091040260200160405190810160405280929190818152602001828054610562906121d2565b80156105af5780601f10610584576101008083540402835291602001916105af565b820191906000526020600020905b81548152906001019060200180831161059257829003601f168201915b505050505081526020019060010190610517565b60606013805480602002602001604051908101604052809291908181526020016000905b828210156104ea5760008481526020908190206040805180820182526002860290920180546001600160a01b0316835260018101805483518187028101870190945280845293949193858301939283018282801561069157602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b031916815260200190600401906020826003010492830192600103820291508084116106535790505b505050505081525050815260200190600101906105e7565b60606010805480602002602001604051908101604052809291908181526020016000905b828210156104ea5783829060005260206000200180546106ec906121d2565b80601f0160208091040260200160405190810160405280929190818152602001828054610718906121d2565b80156107655780601f1061073a57610100808354040283529160200191610765565b820191906000526020600020905b81548152906001019060200180831161074857829003601f168201915b5050505050815260200190600101906106cd565b60008054610100900460ff16156107995750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b1561089f5760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b82840152825180830384018152606083019093526000929091610827917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc49160800161220c565b60408051601f19818403018152908290526108419161223d565b6000604051808303816000865af19150503d806000811461087e576040519150601f19603f3d011682016040523d82523d6000602084013e610883565b606091505b509150508080602001905181019061089b919061217d565b9150505b919050565b6060600c8054806020026020016040519081016040528092919081815260200182805480156101ce576020028201919060005260206000209081546001600160a01b031681526001909101906020018083116101b0575050505050905090565b6005820180546001600160a01b0319166001600160a01b0383161790556000825b90505b92915050565b60038201805463ffffffff191660e083901c179055600082610925565b6002820180546001810182556000918252602082206001600160a01b03841691015582610925565b61097d82826109ce565b5050565b8183146109c9577f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf3583816040516109b79190612259565b60405180910390a16109c98383610d25565b505050565b600582015460038301546004840154600285018054604080516020808402820181019092528281526001600160a01b039096169560e09590951b9460009390929091830182828015610a3f57602002820191906000526020600020905b815481526020019060010190808311610a2b575b50505050509050600083610a5283610e4c565b604051602001610a6392919061220c565b60408051601f198184030181528282526001600160a01b038816600090815260018b0160209081528382206001600160e01b03198a168352815292812091945090929091610ab5918691889101612288565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff16610aed57610aeb87610ef3565b505b6001600160a01b0385166000908152602088815260408083206001600160e01b0319881684528252808320905190918391610b2c918791899101612288565b6040516020818303038152906040528051906020012081526020019081526020016000205460001b9050600080876001600160a01b031684604051610b71919061223d565b600060405180830381855afa9150503d8060008114610bac576040519150601f19603f3d011682016040523d82523d6000602084013e610bb1565b606091505b509150610bca905081610bc58860206122d8565b610efe565b604051630667f9d760e41b81526001600160a01b038a1660048201526024810185905290925060009150737109709ecfa91a80626ff3989d68f67f5b1dd12d9063667f9d7090604401602060405180830381865afa158015610c30573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c5491906121a6565b9050808214610c755760405162461bcd60e51b81526004016103f5906122ef565b6040516370ca10bb60e01b8152737109709ecfa91a80626ff3989d68f67f5b1dd12d906370ca10bb90610cb0908b9087908e9060040161238a565b600060405180830381600087803b158015610cca57600080fd5b505af1158015610cde573d6000803e3d6000fd5b50505060058b0180546001600160a01b03191690555060038a01805463ffffffff19169055610d1160028b016000611e42565b896004016000905550505050505050505050565b80821461097d577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051610d969060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a160408051818152600a81830152690808080808081319599d60b21b60608201526020810184905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a160408051818152600a81830152690808080808149a59da1d60b21b60608201526020810183905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a161097d610f7b565b6060600082516020610e5e91906122d8565b67ffffffffffffffff811115610e7657610e76611f2b565b6040519080825280601f01601f191660200182016040528015610ea0576020820181803683370190505b50905060005b8351811015610eec576000848281518110610ec357610ec36123ab565b602002602001015190508082602002602001840152508080610ee4906123c1565b915050610ea6565b5092915050565b600061092882611080565b60008060006020855111610f13578451610f16565b60205b905060005b81811015610f7157610f2e8160086122d8565b86610f3983886123da565b81518110610f4957610f496123ab565b01602001516001600160f81b031916901c929092179180610f69816123c1565b915050610f1b565b5090949350505050565b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b1561106f57604051600090737109709ecfa91a80626ff3989d68f67f5b1dd12d907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc490610ff09083906519985a5b195960d21b9060019060200161238a565b60408051601f198184030181529082905261100e929160200161220c565b60408051601f19818403018152908290526110289161223d565b6000604051808303816000865af19150503d8060008114611065576040519150601f19603f3d011682016040523d82523d6000602084013e61106a565b606091505b505050505b6000805461ff001916610100179055565b600581015460038201546004830154600284018054604080516020808402820181019092528281526000966001600160a01b03169560e01b9493879391929091908301828280156110f057602002820191906000526020600020905b8154815260200190600101908083116110dc575b5050506001600160a01b038716600090815260018a01602090815260408083206001600160e01b03198a168452825280832090519596509491935061113a92508591879101612288565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff16156111d6576001600160a01b0384166000908152602087815260408083206001600160e01b031987168452825280832090519092916111a6918591879101612288565b60405160208183030381529060405280519060200120815260200190815260200160002054945050505050919050565b6000836111e283611d2f565b6040516020016111f392919061220c565b604051602081830303815290604052905060008051602061252683398151915260001c6001600160a01b031663266cf1096040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561125057600080fd5b505af1158015611264573d6000803e3d6000fd5b50505050600080866001600160a01b031683604051611283919061223d565b600060405180830381855afa9150503d80600081146112be576040519150601f19603f3d011682016040523d82523d6000602084013e6112c3565b606091505b5091506112dc9050816112d78760206122d8565b611dcf565b6040516365bc948160e01b81526001600160a01b038916600482015290925060009150737109709ecfa91a80626ff3989d68f67f5b1dd12d906365bc9481906024016000604051808303816000875af115801561133d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611365919081019061246d565b509050805160010361162757600060008051602061252683398151915260001c6001600160a01b031663667f9d7089846000815181106113a7576113a76123ab565b60200260200101516040518363ffffffff1660e01b81526004016113e09291906001600160a01b03929092168252602082015260400190565b602060405180830381865afa1580156113fd573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061142191906121a6565b905080611488577f080fc4a96620c4462e705b23f346413fe3796bb63c6f8d8591baec0e231577a5888360008151811061145d5761145d6123ab565b602090810291909101810151604080516001600160a01b039094168452918301520160405180910390a15b8083146114a75760405162461bcd60e51b81526004016103f5906122ef565b7f9c9555b1e3102e3cf48f427d79cb678f5d9bd1ed0ad574389461e255f95170ed888887896040516020016114dd929190612288565b6040516020818303038152906040528051906020012085600081518110611506576115066123ab565b602002602001015160001c60405161152194939291906124d1565b60405180910390a18160008151811061153c5761153c6123ab565b6020908102919091018101516001600160a01b038a1660009081528c835260408082206001600160e01b03198c1683528452808220905192939092611585918a918c9101612288565b60408051601f1981840301815291815281516020928301208352828201939093529082016000908120939093556001600160a01b038b16835260018d810182528284206001600160e01b03198c168552825282842092519093916115ed918a918c9101612288565b60408051808303601f19018152918152815160209283012083529082019290925201600020805460ff191691151591909117905550611bba565b600181511115611b4a5760005b8151811015611b4457600060008051602061252683398151915260001c6001600160a01b031663667f9d708a858581518110611672576116726123ab565b60200260200101516040518363ffffffff1660e01b81526004016116ab9291906001600160a01b03929092168252602082015260400190565b602060405180830381865afa1580156116c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116ec91906121a6565b905080611752577f080fc4a96620c4462e705b23f346413fe3796bb63c6f8d8591baec0e231577a589848481518110611727576117276123ab565b602090810291909101810151604080516001600160a01b039094168452918301520160405180910390a15b60008051602061252683398151915260001c6001600160a01b03166370ca10bb8a858581518110611785576117856123ab565b602002602001015161133760f01b6040518463ffffffff1660e01b81526004016117b19392919061238a565b600060405180830381600087803b1580156117cb57600080fd5b505af11580156117df573d6000803e3d6000fd5b50505050600060608a6001600160a01b0316876040516117ff919061223d565b600060405180830381855afa9150503d806000811461183a576040519150601f19603f3d011682016040523d82523d6000602084013e61183f565b606091505b509092509050611854816112d78b60206122d8565b9550818015611867575061133760f01b86145b15611aa2577f9c9555b1e3102e3cf48f427d79cb678f5d9bd1ed0ad574389461e255f95170ed8b8b8a8c6040516020016118a2929190612288565b604051602081830303815290604052805190602001208888815181106118ca576118ca6123ab565b602002602001015160001c6040516118e594939291906124d1565b60405180910390a18484815181106118ff576118ff6123ab565b6020908102919091018101516001600160a01b038d1660009081528f835260408082206001600160e01b03198f1683528452808220905192939092611948918d918f9101612288565b6040516020818303038152906040528051906020012081526020019081526020016000208190555060018d60010160008d6001600160a01b03166001600160a01b0316815260200190815260200160002060008c6001600160e01b0319166001600160e01b031916815260200190815260200160002060008a8c6040516020016119d3929190612288565b60405160208183030381529060405280519060200120815260200190815260200160002060006101000a81548160ff02191690831515021790555060008051602061252683398151915260001c6001600160a01b03166370ca10bb8c878781518110611a4157611a416123ab565b6020026020010151866040518463ffffffff1660e01b8152600401611a689392919061238a565b600060405180830381600087803b158015611a8257600080fd5b505af1158015611a96573d6000803e3d6000fd5b50505050505050611b44565b60008051602061252683398151915260001c6001600160a01b03166370ca10bb8c878781518110611ad557611ad56123ab565b6020026020010151866040518463ffffffff1660e01b8152600401611afc9392919061238a565b600060405180830381600087803b158015611b1657600080fd5b505af1158015611b2a573d6000803e3d6000fd5b505050505050508080611b3c906123c1565b915050611634565b50611bba565b6040805162461bcd60e51b81526020600482015260248101919091527f73746453746f726167652066696e642853746453746f72616765293a204e6f2060448201527f73746f726167652075736520646574656374656420666f72207461726765742e60648201526084016103f5565b6001600160a01b038716600090815260018a01602090815260408083206001600160e01b03198a16845282528083209051909291611bfc9188918a9101612288565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff16611c895760405162461bcd60e51b815260206004820152602f60248201527f73746453746f726167652066696e642853746453746f72616765293a20536c6f60448201526e3a143994903737ba103337bab7321760891b60648201526084016103f5565b6005890180546001600160a01b031916905560038901805463ffffffff19169055611cb860028a016000611e42565b600060048a018190556001600160a01b038816815260208a815260408083206001600160e01b03198a16845282528083209051909291611cfc9188918a9101612288565b60405160208183030381529060405280519060200120815260200190815260200160002054975050505050505050919050565b6060600082516020611d4191906122d8565b67ffffffffffffffff811115611d5957611d59611f2b565b6040519080825280601f01601f191660200182016040528015611d83576020820181803683370190505b50905060005b8351811015610eec576000848281518110611da657611da66123ab565b602002602001015190508082602002602001840152508080611dc7906123c1565b915050611d89565b60008060006020855111611de4578451611de7565b60205b905060005b81811015610f7157611dff8160086122d8565b86611e0a83886123da565b81518110611e1a57611e1a6123ab565b01602001516001600160f81b031916901c929092179180611e3a816123c1565b915050611dec565b5080546000825590600052602060002090810190611e609190611e63565b50565b5b80821115611e785760008155600101611e64565b5090565b6020808252825182820181905260009190848201906040850190845b81811015611ebd5783516001600160a01b031683529284019291840191600101611e98565b50909695505050505050565b80356001600160a01b038116811461089f57600080fd5b60008060008060808587031215611ef657600080fd5b611eff85611ec9565b9350611f0d60208601611ec9565b9250611f1b60408601611ec9565b9396929550929360600135925050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715611f6a57611f6a611f2b565b604052919050565b60008060408385031215611f8557600080fd5b611f8e83611ec9565b915060208084013567ffffffffffffffff80821115611fac57600080fd5b818601915086601f830112611fc057600080fd5b813581811115611fd257611fd2611f2b565b611fe4601f8201601f19168501611f41565b91508082528784828501011115611ffa57600080fd5b80848401858401376000848284010152508093505050509250929050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b848110156120bc57898403603f19018652825180516001600160a01b03168552880151888501889052805188860181905290890190839060608701905b808310156120a75783516001600160e01b0319168252928b019260019290920191908b019061207d565b50978a01979550505091870191600101612040565b50919998505050505050505050565b60005b838110156120e65781810151838201526020016120ce565b50506000910152565b600081518084526121078160208601602086016120cb565b601f01601f19169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561217057603f1988860301845261215e8583516120ef565b94509285019290850190600101612142565b5092979650505050505050565b60006020828403121561218f57600080fd5b8151801515811461219f57600080fd5b9392505050565b6000602082840312156121b857600080fd5b5051919050565b60208152600061092560208301846120ef565b600181811c908216806121e657607f821691505b60208210810361220657634e487b7160e01b600052602260045260246000fd5b50919050565b6001600160e01b031983168152815160009061222f8160048501602087016120cb565b919091016004019392505050565b6000825161224f8184602087016120cb565b9190910192915050565b60408152600560408201526422b93937b960d91b606082015260806020820152600061092560808301846120ef565b825160009082906020808701845b838110156122b257815185529382019390820190600101612296565b5050948252509092019392505050565b634e487b7160e01b600052601160045260246000fd5b8082028115828204841417610928576109286122c2565b6020808252606f908201527f73746453746f726167652066696e642853746453746f72616765293a2050616360408201527f6b656420736c6f742e205468697320776f756c642063617573652064616e676560608201527f726f7573206f76657277726974696e6720616e642063757272656e746c79206960808201526e39b713ba1039bab83837b93a32b21760891b60a082015260c00190565b6001600160a01b039390931683526020830191909152604082015260600190565b634e487b7160e01b600052603260045260246000fd5b6000600182016123d3576123d36122c2565b5060010190565b80820180821115610928576109286122c2565b600082601f8301126123fe57600080fd5b8151602067ffffffffffffffff82111561241a5761241a611f2b565b8160051b612429828201611f41565b928352848101820192828101908785111561244357600080fd5b83870192505b8483101561246257825182529183019190830190612449565b979650505050505050565b6000806040838503121561248057600080fd5b825167ffffffffffffffff8082111561249857600080fd5b6124a4868387016123ed565b935060208501519150808211156124ba57600080fd5b506124c7858286016123ed565b9150509250929050565b6001600160a01b039490941684526001600160e01b0319929092166020840152604083015260608201526080019056fe62616c616e63652073686f756c6420494e43524541534520286166746572206d696e7429885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12da2646970667358221220dd662b7c8aac1be35e4e1be6505f5ddeb6498c9d1935f2611b0d32f0daeed25e64736f6c63430008110033",
    "sourceMap": "142:748:120:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2161:134:7;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2930:133;;;:::i;2631:141::-;;;:::i;215:408:120:-;;;;;;:::i;:::-;;:::i;:::-;;629:259;;;;;;:::i;:::-;;:::i;2447:178:7:-;;;:::i;:::-;;;;;;;:::i;2301:140::-;;;:::i;:::-;;;;;;;:::i;2778:146::-;;;:::i;1866:141::-;;;:::i;1819:584:0:-;;;:::i;:::-;;;5594:14:123;;5587:22;5569:41;;5557:2;5542:18;1819:584:0;5429:187:123;2013:142:7;;;:::i;1572:26:0:-;;;;;;;;;2161:134:7;2208:33;2272:16;2253:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2253:35:7;;;;;;;;;;;;;;;;;;;;;;;2161:134;:::o;2930:133::-;2976:33;3040:16;3021:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3021:35:7;;;;;;;;;;;;;;;;;;;;;;2930:133;:::o;2631:141::-;2679:35;2747:18;2726:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2726:39:7;;;;;;;;;;;;;;;;;;;;;;2631:141;:::o;215:408:120:-;390:34;;-1:-1:-1;;;390:34:120;;-1:-1:-1;;;;;5813:32:123;;;390:34:120;;;5795:51:123;5862:18;;;5855:34;;;374:5:120;;390:11;;;;;;5768:18:123;;390:34:120;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;435:95:120;523:6;435:73;505:2;435:60;-1:-1:-1;;;435:22:120;:8;451:5;435:15;:22::i;:::-;:26;;:60::i;:::-;:69;;:73::i;:::-;:87;;:95::i;:::-;550:17;;-1:-1:-1;;;550:17:120;;-1:-1:-1;;;;;6346:32:123;;;550:17:120;;;6328:51:123;541:75:120;;550:13;;;;;;6301:18:123;;550:17:120;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;569:6;541:75;;;;;;;;;;;;;;;;;:8;:75::i;:::-;344:279;215:408;;;;:::o;629:259::-;800:22;;867:13;849:16;841:40;;;;-1:-1:-1;;;841:40:120;;;;;;;;:::i;:::-;;;;;;;;;;721:167;629:259;;:::o;2447:178:7:-;2503:48;2592:26;2563:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2563:55:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2563:55:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2447:178;:::o;2301:140::-;2349:34;2416:18;2395:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2778:146;2826:40;2899:18;2878:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2878:39:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2878:39:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1866:141;1915:34;1982:18;1961:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1819:584:0;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:0;;;;;;;;1819:584::o;1869:528::-;1941:17;2997:42;2985:55;3066:16;1980:374;;2196:43;;;1671:64;2196:43;;;5795:51:123;;;-1:-1:-1;;;5862:18:123;;;5855:34;2196:43:0;;;;;;;;;5768:18:123;;;2196:43:0;;;-1:-1:-1;;1671:64:0;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;-1:-1:-1;;2086:175:0;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:0:o;2013:142:7:-;2062:35;2130:18;2109:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2109:39:7;;;;;;;;;;;;;;;;;;;;;;2013:142;:::o;7700:156:10:-;4573:12;;;:22;;-1:-1:-1;;;;;;4573:22:10;-1:-1:-1;;;;;4573:22:10;;;;;-1:-1:-1;4573:12:10;7813:36;7806:43;;7700:156;;;;;:::o;7862:143::-;4728:9;;;:16;;-1:-1:-1;;4728:16:10;;;;;;;;-1:-1:-1;4728:9:10;7968:30;4629:143;8167:152;5044:10;;;:47;;;;;;;8241:18;5044:47;;;;;;-1:-1:-1;;;;;5068:21:10;;5044:47;;;8302:4;8278:34;4940:179;8943:120;9023:33;9037:4;9051:3;9023:13;:33::i;:::-;8943:120;;:::o;5476:178:0:-;5557:1;5552;:6;5548:100;;5579:30;5605:3;5579:30;;;;;;:::i;:::-;;;;;;;;5623:14;5632:1;5635;5623:8;:14::i;:::-;5476:178;;;:::o;9297:1095:10:-;9391:12;;;;9427:9;;;;9468:11;;;;9512:10;;;9489:33;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9391:12:10;;;;9427:9;;;;;;9377:11;;9489:33;;9512:10;;9489:33;;9512:10;9489:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9533:17;9570:4;9576:12;9584:3;9576:7;:12::i;:::-;9553:36;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;9553:36:10;;;;;;;;;-1:-1:-1;;;;;9604:15:10;;;;;;:10;;;9553:36;9604:15;;;;;;-1:-1:-1;;;;;;9604:21:10;;;;;;;;;9553:36;;-1:-1:-1;9604:21:10;;:15;;9636:34;;9653:3;;9658:11;;9636:34;;:::i;:::-;;;;-1:-1:-1;;9636:34:10;;;;;;;;;9626:45;;9636:34;9626:45;;;;9604:68;;;;;;;;;;-1:-1:-1;9604:68:10;;;;9599:110;;9688:10;9693:4;9688;:10::i;:::-;;9599:110;-1:-1:-1;;;;;9741:15:10;;9718:12;9741:15;;;;;;;;;;;-1:-1:-1;;;;;;9741:21:10;;;;;;;;;9773:34;;9741:21;;9718:12;;9773:34;;9790:3;;9795:11;;9773:34;;:::i;:::-;;;;;;;;;;;;;9763:45;;;;;;9741:68;;;;;;;;;;;;9733:77;;9718:92;;9821:12;9860:17;9881:3;-1:-1:-1;;;;;9881:14:10;9896:4;9881:20;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9857:44:10;-1:-1:-1;9922:38:10;;-1:-1:-1;9857:44:10;9943:16;9948:11;9943:2;:16;:::i;:::-;9922:14;:38::i;:::-;9995:18;;-1:-1:-1;;;9995:18:10;;-1:-1:-1;;;;;5813:32:123;;9995:18:10;;;5795:51:123;5862:18;;;5855:34;;;9915:45:10;;-1:-1:-1;9980:12:10;;-1:-1:-1;9995:7:10;;;;5768:18:123;;9995::10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9980:33;;10036:4;10028;:12;10024:218;;10056:175;;-1:-1:-1;;;10056:175:10;;;;;;;:::i;:::-;10251:24;;-1:-1:-1;;;10251:24:10;;:8;;;;:24;;10260:3;;10265:4;;10271:3;;10251:24;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;10292:12:10;;;10285:19;;-1:-1:-1;;;;;;10285:19:10;;;-1:-1:-1;10321:9:10;;;10314:16;;-1:-1:-1;;10314:16:10;;;10340:17;-1:-1:-1;10347:10:10;;10292:12;10340:17;:::i;:::-;10374:4;:11;;10367:18;;;9367:1025;;;;;;;;9297:1095;;:::o;5209:262:0:-;5271:1;5266;:6;5262:203;;5293:41;;;;;10822:2:123;10804:21;;;10861:2;10841:18;;;10834:30;10900:34;10895:2;10880:18;;10873:62;-1:-1:-1;;;10966:2:123;10951:18;;10944:32;11008:3;10993:19;;10620:398;5293:41:0;;;;;;;;5353:31;;;11235:21:123;;;11292:2;11272:18;;;11265:30;-1:-1:-1;;;11326:2:123;11311:18;;11304:40;11411:4;11396:20;;11389:36;;;5353:31:0;;;;;;;11376:3:123;5353:31:0;;;5403;;;11648:21:123;;;11705:2;11685:18;;;11678:30;-1:-1:-1;;;11739:2:123;11724:18;;11717:40;11824:4;11809:20;;11802:36;;;5403:31:0;;;;;;;11789:3:123;5403:31:0;;;5448:6;:4;:6::i;11471:393:10:-;11530:12;11554:19;11586:1;:8;11597:2;11586:13;;;;:::i;:::-;11576:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;11576:24:10;;11554:46;;11615:9;11610:224;11634:1;:8;11630:1;:12;11610:224;;;11663:9;11675:1;11677;11675:4;;;;;;;;:::i;:::-;;;;;;;11663:16;;11808:1;11802;11798:2;11794:10;11790:2;11786:19;11778:6;11774:32;11767:43;11749:75;11644:3;;;;;:::i;:::-;;;;11610:224;;;-1:-1:-1;11851:6:10;11471:393;-1:-1:-1;;11471:393:10:o;7579:115::-;7636:7;7662:25;7682:4;7662:19;:25::i;11110:304::-;11188:7;11207:11;11229;11254:2;11243:1;:8;:13;:29;;11264:1;:8;11243:29;;;11259:2;11243:29;11229:43;;11287:9;11282:106;11306:3;11302:1;:7;11282:106;;;11371:5;:1;11375;11371:5;:::i;:::-;11345:1;11347:10;11356:1;11347:6;:10;:::i;:::-;11345:13;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;;11345:13:10;11337:40;;11330:47;;;;;11311:3;;;;:::i;:::-;;;;11282:106;;;-1:-1:-1;11404:3:10;;11110:304;-1:-1:-1;;;;11110:304:10:o;2409:432:0:-;2997:42;2985:55;3066:16;2452:359;;2652:67;;2489:11;;1671:64;;2586:43;;2652:67;;1671:64;;-1:-1:-1;;;2677:17:0;2712:4;;2652:67;;;:::i;:::-;;;;-1:-1:-1;;2652:67:0;;;;;;;;;;2541:196;;;2652:67;2541:196;;:::i;:::-;;;;-1:-1:-1;;2541:196:0;;;;;;;;;;2506:245;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2452:359:0;2820:7;:14;;-1:-1:-1;;2820:14:0;;;;;2409:432::o;1264:3197:10:-;1354:12;;;;1390:9;;;;1431:11;;;;1475:10;;;1452:33;;;;;;;;;;;;;;;;;;;1321:7;;-1:-1:-1;;;;;1354:12:10;;1390:9;;;1431:11;1321:7;;1452:33;;1475:10;;1452:33;;;1475:10;1452:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;1536:15:10;;;;;;:10;;;:15;;;;;;;;-1:-1:-1;;;;;;1536:21:10;;;;;;;;;1568:34;;1452:33;;-1:-1:-1;1536:21:10;:15;;-1:-1:-1;1568:34:10;;-1:-1:-1;1452:33:10;;1590:11;;1568:34;;:::i;:::-;;;;-1:-1:-1;;1568:34:10;;;;;;;;;1558:45;;1568:34;1558:45;;;;1536:68;;;;;;;;;;-1:-1:-1;1536:68:10;;;;1532:174;;;-1:-1:-1;;;;;1627:15:10;;:10;:15;;;;;;;;;;;-1:-1:-1;;;;;;1627:21:10;;;;;;;;;1659:34;;1627:21;;:10;1659:34;;1676:3;;1681:11;;1659:34;;:::i;:::-;;;;;;;;;;;;;1649:45;;;;;;1627:68;;;;;;;;;;;;1620:75;;;;;;1264:3197;;;:::o;1532:174::-;1715:17;1752:4;1758:12;1766:3;1758:7;:12::i;:::-;1735:36;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1715:56;;-1:-1:-1;;;;;;;;;;;580:37:10;;-1:-1:-1;;;;;1781:9:10;;:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1802:12;1841:17;1862:3;-1:-1:-1;;;;;1862:14:10;1877:4;1862:20;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1838:44:10;-1:-1:-1;1903:38:10;;-1:-1:-1;1838:44:10;1924:16;1929:11;1924:2;:16;:::i;:::-;1903:14;:38::i;:::-;1990:25;;-1:-1:-1;;;1990:25:10;;-1:-1:-1;;;;;6346:32:123;;1990:25:10;;;6328:51:123;1896:45:10;;-1:-1:-1;1963:22:10;;-1:-1:-1;1990:11:10;;;;6301:18:123;;1990:25:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1990:25:10;;;;;;;;;;;;:::i;:::-;1962:53;;;2029:5;:12;2045:1;2029:17;2025:2060;;2062:12;-1:-1:-1;;;;;;;;;;;580:37:10;;-1:-1:-1;;;;;2077:7:10;;2085:3;2090:5;2096:1;2090:8;;;;;;;;:::i;:::-;;;;;;;2077:22;;;;;;;;;;;;;;;-1:-1:-1;;;;;5813:32:123;;;;5795:51;;5877:2;5862:18;;5855:34;5783:2;5768:18;;5621:274;2077:22:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2062:37;-1:-1:-1;2062:37:10;2113:106;;2160:44;2181:3;2194:5;2200:1;2194:8;;;;;;;;:::i;:::-;;;;;;;;;;;;2160:44;;;-1:-1:-1;;;;;5813:32:123;;;5795:51;;5862:18;;;5855:34;5768:18;2160:44:10;;;;;;;2113:106;2244:4;2236;:12;2232:238;;2268:187;;-1:-1:-1;;;2268:187:10;;;;;;;:::i;:::-;2488:86;2498:3;2503:4;2536:3;2541:11;2519:34;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2509:45;;;;;;2564:5;2570:1;2564:8;;;;;;;;:::i;:::-;;;;;;;2556:17;;2488:86;;;;;;;;;:::i;:::-;;;;;;;;2667:5;2673:1;2667:8;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;2588:15:10;;2659:17;2588:15;;;;;;;;;;-1:-1:-1;;;;;;2588:21:10;;;;;;;;;2620:34;;2667:8;;2588:21;;2620:34;;2637:3;;2642:11;;2620:34;;:::i;:::-;;;;-1:-1:-1;;2620:34:10;;;;;;;;;2610:45;;2620:34;2610:45;;;;2588:68;;;;;;;;;;;;-1:-1:-1;2588:68:10;;;:88;;;;-1:-1:-1;;;;;2690:15:10;;;;2761:4;2690:10;;;:15;;;;;-1:-1:-1;;;;;;2690:21:10;;;;;;;;;2722:34;;2761:4;;-1:-1:-1;2722:34:10;;2739:3;;2744:11;;2722:34;;:::i;:::-;;;;;;;-1:-1:-1;;2722:34:10;;;;;;2712:45;;2722:34;2712:45;;;;2690:68;;;;;;;;;;-1:-1:-1;2690:68:10;:75;;-1:-1:-1;;2690:75:10;;;;;;;;;;-1:-1:-1;2025:2060:10;;;2801:1;2786:5;:12;:16;2782:1303;;;2823:9;2818:1152;2842:5;:12;2838:1;:16;2818:1152;;;2879:12;-1:-1:-1;;;;;;;;;;;580:37:10;;-1:-1:-1;;;;;2894:7:10;;2902:3;2907:5;2913:1;2907:8;;;;;;;;:::i;:::-;;;;;;;2894:22;;;;;;;;;;;;;;;-1:-1:-1;;;;;5813:32:123;;;;5795:51;;5877:2;5862:18;;5855:34;5783:2;5768:18;;5621:274;2894:22:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2879:37;-1:-1:-1;2879:37:10;2934:114;;2985:44;3006:3;3019:5;3025:1;3019:8;;;;;;;;:::i;:::-;;;;;;;;;;;;2985:44;;;-1:-1:-1;;;;;5813:32:123;;;5795:51;;5862:18;;;5855:34;5768:18;2985:44:10;;;;;;;2934:114;-1:-1:-1;;;;;;;;;;;580:37:10;;-1:-1:-1;;;;;3090:8:10;;3099:3;3104:5;3110:1;3104:8;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;3090:43:10;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3151:12;3181:17;3256:3;-1:-1:-1;;;;;3256:14:10;3271:4;3256:20;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3238:38:10;;-1:-1:-1;3238:38:10;-1:-1:-1;3305:38:10;3238;3326:16;3331:11;3326:2;:16;:::i;3305:38::-;3298:45;;3384:7;:37;;;;;-1:-1:-1;;;3395:4:10;:26;3384:37;3380:529;;;3519:86;3529:3;3534:4;3567:3;3572:11;3550:34;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3540:45;;;;;;3595:5;3601:1;3595:8;;;;;;;;:::i;:::-;;;;;;;3587:17;;3519:86;;;;;;;;;:::i;:::-;;;;;;;;3706:5;3712:1;3706:8;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;3627:15:10;;3698:17;3627:15;;;;;;;;;;-1:-1:-1;;;;;;3627:21:10;;;;;;;;;3659:34;;3706:8;;3627:21;;3659:34;;3676:3;;3681:11;;3659:34;;:::i;:::-;;;;;;;;;;;;;3649:45;;;;;;3627:68;;;;;;;;;;;:88;;;;3808:4;3737;:10;;:15;3748:3;-1:-1:-1;;;;;3737:15:10;-1:-1:-1;;;;;3737:15:10;;;;;;;;;;;;:21;3753:4;-1:-1:-1;;;;;3737:21:10;;-1:-1:-1;;;;;3737:21:10;;;;;;;;;;;;;:68;3786:3;3791:11;3769:34;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3759:45;;;;;;3737:68;;;;;;;;;;;;:75;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;580:37:10;;-1:-1:-1;;;;;3834:8:10;;3843:3;3848:5;3854:1;3848:8;;;;;;;;:::i;:::-;;;;;;;3858:4;3834:29;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3885:5;;;;;3380:529;-1:-1:-1;;;;;;;;;;;580:37:10;;-1:-1:-1;;;;;3926:8:10;;3935:3;3940:5;3946:1;3940:8;;;;;;;;:::i;:::-;;;;;;;3950:4;3926:29;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2861:1109;;;2856:3;;;;;:::i;:::-;;;;2818:1152;;;;2782:1303;;;4000:74;;;-1:-1:-1;;;4000:74:10;;14233:2:123;4000:74:10;;;14215:21:123;14252:18;;;14245:30;;;;14311:34;14291:18;;;14284:62;14382:34;14362:18;;;14355:62;14434:19;;4000:74:10;14031:428:123;2782:1303:10;-1:-1:-1;;;;;4116:15:10;;;;;;:10;;;:15;;;;;;;;-1:-1:-1;;;;;;4116:21:10;;;;;;;;;4148:34;;4116:21;;:15;4148:34;;4165:3;;4170:11;;4148:34;;:::i;:::-;;;;-1:-1:-1;;4148:34:10;;;;;;;;;4138:45;;4148:34;4138:45;;;;4116:68;;;;;;;;;;-1:-1:-1;4116:68:10;;;;4095:162;;;;-1:-1:-1;;;4095:162:10;;14666:2:123;4095:162:10;;;14648:21:123;14705:2;14685:18;;;14678:30;14744:34;14724:18;;;14717:62;-1:-1:-1;;;14795:18:123;;;14788:45;14850:19;;4095:162:10;14464:411:123;4095:162:10;4275:12;;;4268:19;;-1:-1:-1;;;;;;4268:19:10;;;4304:9;;;4297:16;;-1:-1:-1;;4297:16:10;;;4323:17;-1:-1:-1;4330:10:10;;4275:12;4323:17;:::i;:::-;4350:18;4357:11;;;4350:18;;;-1:-1:-1;;;;;4386:15:10;;;;;;;;;;;;-1:-1:-1;;;;;;4386:21:10;;;;;;;;;4418:34;;4386:21;;4350:18;4418:34;;4435:3;;4440:11;;4418:34;;:::i;:::-;;;;;;;;;;;;;4408:45;;;;;;4386:68;;;;;;;;;;;;4379:75;;;;;;;;;1264:3197;;;:::o;6942:393::-;7001:12;7025:19;7057:1;:8;7068:2;7057:13;;;;:::i;:::-;7047:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7047:24:10;;7025:46;;7086:9;7081:224;7105:1;:8;7101:1;:12;7081:224;;;7134:9;7146:1;7148;7146:4;;;;;;;;:::i;:::-;;;;;;;7134:16;;7279:1;7273;7269:2;7265:10;7261:2;7257:19;7249:6;7245:32;7238:43;7220:75;7115:3;;;;;:::i;:::-;;;;7081:224;;6632:304;6710:7;6729:11;6751;6776:2;6765:1;:8;:13;:29;;6786:1;:8;6765:29;;;6781:2;6765:29;6751:43;;6809:9;6804:106;6828:3;6824:1;:7;6804:106;;;6893:5;:1;6897;6893:5;:::i;:::-;6867:1;6869:10;6878:1;6869:6;:10;:::i;:::-;6867:13;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;;6867:13:10;6859:40;;6852:47;;;;;6833:3;;;;:::i;:::-;;;;6804:106;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;;;;:::o;14:658:123:-;185:2;237:21;;;307:13;;210:18;;;329:22;;;156:4;;185:2;408:15;;;;382:2;367:18;;;156:4;451:195;465:6;462:1;459:13;451:195;;;530:13;;-1:-1:-1;;;;;526:39:123;514:52;;621:15;;;;586:12;;;;562:1;480:9;451:195;;;-1:-1:-1;663:3:123;;14:658;-1:-1:-1;;;;;;14:658:123:o;677:173::-;745:20;;-1:-1:-1;;;;;794:31:123;;784:42;;774:70;;840:1;837;830:12;855:403;941:6;949;957;965;1018:3;1006:9;997:7;993:23;989:33;986:53;;;1035:1;1032;1025:12;986:53;1058:29;1077:9;1058:29;:::i;:::-;1048:39;;1106:38;1140:2;1129:9;1125:18;1106:38;:::i;:::-;1096:48;;1163:38;1197:2;1186:9;1182:18;1163:38;:::i;:::-;855:403;;;;-1:-1:-1;1153:48:123;;1248:2;1233:18;1220:32;;-1:-1:-1;;855:403:123:o;1263:127::-;1324:10;1319:3;1315:20;1312:1;1305:31;1355:4;1352:1;1345:15;1379:4;1376:1;1369:15;1395:275;1466:2;1460:9;1531:2;1512:13;;-1:-1:-1;;1508:27:123;1496:40;;1566:18;1551:34;;1587:22;;;1548:62;1545:88;;;1613:18;;:::i;:::-;1649:2;1642:22;1395:275;;-1:-1:-1;1395:275:123:o;1675:838::-;1753:6;1761;1814:2;1802:9;1793:7;1789:23;1785:32;1782:52;;;1830:1;1827;1820:12;1782:52;1853:29;1872:9;1853:29;:::i;:::-;1843:39;;1901:2;1954;1943:9;1939:18;1926:32;1977:18;2018:2;2010:6;2007:14;2004:34;;;2034:1;2031;2024:12;2004:34;2072:6;2061:9;2057:22;2047:32;;2117:7;2110:4;2106:2;2102:13;2098:27;2088:55;;2139:1;2136;2129:12;2088:55;2175:2;2162:16;2197:2;2193;2190:10;2187:36;;;2203:18;;:::i;:::-;2245:53;2288:2;2269:13;;-1:-1:-1;;2265:27:123;2261:36;;2245:53;:::i;:::-;2232:66;;2321:2;2314:5;2307:17;2361:7;2356:2;2351;2347;2343:11;2339:20;2336:33;2333:53;;;2382:1;2379;2372:12;2333:53;2437:2;2432;2428;2424:11;2419:2;2412:5;2408:14;2395:45;2481:1;2476:2;2471;2464:5;2460:14;2456:23;2449:34;;2502:5;2492:15;;;;;1675:838;;;;;:::o;2518:1567::-;2720:4;2749:2;2789;2778:9;2774:18;2819:2;2808:9;2801:21;2842:6;2877;2871:13;2908:6;2900;2893:22;2934:2;2924:12;;2967:2;2956:9;2952:18;2945:25;;3029:2;3019:6;3016:1;3012:14;3001:9;2997:30;2993:39;3067:2;3059:6;3055:15;3088:1;3109;3119:937;3135:6;3130:3;3127:15;3119:937;;;3204:22;;;-1:-1:-1;;3200:36:123;3188:49;;3260:13;;3347:9;;-1:-1:-1;;;;;3343:35:123;3328:51;;3418:11;;3412:18;3450:15;;;3443:27;;;3531:19;;3300:15;;;3563:24;;;3653:21;;;;3698:1;;3621:2;3609:15;;;3712:236;3728:8;3723:3;3720:17;3712:236;;;3809:15;;-1:-1:-1;;;;;;3805:42:123;3791:57;;3917:17;;;;3756:1;3747:11;;;;;3874:14;;;;3712:236;;;-1:-1:-1;4034:12:123;;;;3971:5;-1:-1:-1;;;3999:15:123;;;;3161:1;3152:11;3119:937;;;-1:-1:-1;4073:6:123;;2518:1567;-1:-1:-1;;;;;;;;;2518:1567:123:o;4090:250::-;4175:1;4185:113;4199:6;4196:1;4193:13;4185:113;;;4275:11;;;4269:18;4256:11;;;4249:39;4221:2;4214:10;4185:113;;;-1:-1:-1;;4332:1:123;4314:16;;4307:27;4090:250::o;4345:271::-;4387:3;4425:5;4419:12;4452:6;4447:3;4440:19;4468:76;4537:6;4530:4;4525:3;4521:14;4514:4;4507:5;4503:16;4468:76;:::i;:::-;4598:2;4577:15;-1:-1:-1;;4573:29:123;4564:39;;;;4605:4;4560:50;;4345:271;-1:-1:-1;;4345:271:123:o;4621:803::-;4783:4;4812:2;4852;4841:9;4837:18;4882:2;4871:9;4864:21;4905:6;4940;4934:13;4971:6;4963;4956:22;5009:2;4998:9;4994:18;4987:25;;5071:2;5061:6;5058:1;5054:14;5043:9;5039:30;5035:39;5021:53;;5109:2;5101:6;5097:15;5130:1;5140:255;5154:6;5151:1;5148:13;5140:255;;;5247:2;5243:7;5231:9;5223:6;5219:22;5215:36;5210:3;5203:49;5275:40;5308:6;5299;5293:13;5275:40;:::i;:::-;5265:50;-1:-1:-1;5373:12:123;;;;5338:15;;;;5176:1;5169:9;5140:255;;;-1:-1:-1;5412:6:123;;4621:803;-1:-1:-1;;;;;;;4621:803:123:o;5900:277::-;5967:6;6020:2;6008:9;5999:7;5995:23;5991:32;5988:52;;;6036:1;6033;6026:12;5988:52;6068:9;6062:16;6121:5;6114:13;6107:21;6100:5;6097:32;6087:60;;6143:1;6140;6133:12;6087:60;6166:5;5900:277;-1:-1:-1;;;5900:277:123:o;6390:184::-;6460:6;6513:2;6501:9;6492:7;6488:23;6484:32;6481:52;;;6529:1;6526;6519:12;6481:52;-1:-1:-1;6552:16:123;;6390:184;-1:-1:-1;6390:184:123:o;6579:220::-;6728:2;6717:9;6710:21;6691:4;6748:45;6789:2;6778:9;6774:18;6766:6;6748:45;:::i;6804:380::-;6883:1;6879:12;;;;6926;;;6947:61;;7001:4;6993:6;6989:17;6979:27;;6947:61;7054:2;7046:6;7043:14;7023:18;7020:38;7017:161;;7100:10;7095:3;7091:20;7088:1;7081:31;7135:4;7132:1;7125:15;7163:4;7160:1;7153:15;7017:161;;6804:380;;;:::o;7468:384::-;-1:-1:-1;;;;;;7653:33:123;;7641:46;;7710:13;;7623:3;;7732:74;7710:13;7795:1;7786:11;;7779:4;7767:17;;7732:74;:::i;:::-;7826:16;;;;7844:1;7822:24;;7468:384;-1:-1:-1;;;7468:384:123:o;7857:287::-;7986:3;8024:6;8018:13;8040:66;8099:6;8094:3;8087:4;8079:6;8075:17;8040:66;:::i;:::-;8122:16;;;;;7857:287;-1:-1:-1;;7857:287:123:o;8149:446::-;8399:2;8388:9;8381:21;8438:1;8433:2;8422:9;8418:18;8411:29;-1:-1:-1;;;8471:2:123;8460:9;8456:18;8449:35;8522:3;8515:4;8504:9;8500:20;8493:33;8362:4;8543:46;8584:3;8573:9;8569:19;8561:6;8543:46;:::i;8600:610::-;8846:13;;8789:3;;8820;;8899:4;8926:15;;;8789:3;8969:175;8983:6;8980:1;8977:13;8969:175;;;9046:13;;9032:28;;9082:14;;;;9119:15;;;;9005:1;8998:9;8969:175;;;-1:-1:-1;;9153:21:123;;;-1:-1:-1;9190:14:123;;;;;-1:-1:-1;;;8600:610:123:o;9215:127::-;9276:10;9271:3;9267:20;9264:1;9257:31;9307:4;9304:1;9297:15;9331:4;9328:1;9321:15;9347:168;9420:9;;;9451;;9468:15;;;9462:22;;9448:37;9438:71;;9489:18;;:::i;9709:556::-;9911:2;9893:21;;;9950:3;9930:18;;;9923:31;9990:34;9985:2;9970:18;;9963:62;10061:34;10056:2;10041:18;;10034:62;10133:34;10127:3;10112:19;;10105:63;-1:-1:-1;;;10199:3:123;10184:19;;10177:46;10255:3;10240:19;;9709:556::o;10270:345::-;-1:-1:-1;;;;;10490:32:123;;;;10472:51;;10554:2;10539:18;;10532:34;;;;10597:2;10582:18;;10575:34;10460:2;10445:18;;10270:345::o;11849:127::-;11910:10;11905:3;11901:20;11898:1;11891:31;11941:4;11938:1;11931:15;11965:4;11962:1;11955:15;11981:135;12020:3;12041:17;;;12038:43;;12061:18;;:::i;:::-;-1:-1:-1;12108:1:123;12097:13;;11981:135::o;12121:125::-;12186:9;;;12207:10;;;12204:36;;;12220:18;;:::i;12251:709::-;12316:5;12369:3;12362:4;12354:6;12350:17;12346:27;12336:55;;12387:1;12384;12377:12;12336:55;12416:6;12410:13;12442:4;12465:18;12461:2;12458:26;12455:52;;;12487:18;;:::i;:::-;12533:2;12530:1;12526:10;12556:28;12580:2;12576;12572:11;12556:28;:::i;:::-;12618:15;;;12688;;;12684:24;;;12649:12;;;;12720:15;;;12717:35;;;12748:1;12745;12738:12;12717:35;12784:2;12776:6;12772:15;12761:26;;12796:135;12812:6;12807:3;12804:15;12796:135;;;12878:10;;12866:23;;12829:12;;;;12909;;;;12796:135;;;12949:5;12251:709;-1:-1:-1;;;;;;;12251:709:123:o;12965:614::-;13094:6;13102;13155:2;13143:9;13134:7;13130:23;13126:32;13123:52;;;13171:1;13168;13161:12;13123:52;13204:9;13198:16;13233:18;13274:2;13266:6;13263:14;13260:34;;;13290:1;13287;13280:12;13260:34;13313:72;13377:7;13368:6;13357:9;13353:22;13313:72;:::i;:::-;13303:82;;13431:2;13420:9;13416:18;13410:25;13394:41;;13460:2;13450:8;13447:16;13444:36;;;13476:1;13473;13466:12;13444:36;;13499:74;13565:7;13554:8;13543:9;13539:24;13499:74;:::i;:::-;13489:84;;;12965:614;;;;;:::o;13584:442::-;-1:-1:-1;;;;;13831:32:123;;;;13813:51;;-1:-1:-1;;;;;;13900:33:123;;;;13895:2;13880:18;;13873:61;13965:2;13950:18;;13943:34;14008:2;13993:18;;13986:34;13800:3;13785:19;;13584:442::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_TEST()": "fa7626d4",
    "enforceHasContractCode(address,string)": "60f98dc7",
    "excludeArtifacts()": "b5508aa9",
    "excludeContracts()": "e20c9f71",
    "excludeSenders()": "1ed7831c",
    "failed()": "ba414fa6",
    "targetArtifactSelectors()": "66d9a9a0",
    "targetArtifacts()": "85226c81",
    "targetContracts()": "3f7286f4",
    "targetSelectors()": "916a17c6",
    "targetSenders()": "3e5e3c23",
    "writeTokenBalance(address,address,address,uint256)": "49b53548"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contract\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_errorMessage\",\"type\":\"string\"}],\"name\":\"enforceHasContractCode\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"excludedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifactSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedArtifactSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"targetedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"writeTokenBalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/utils/DSTestPlusF.sol\":\"DSTestPlusF\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/ozv4/\",\":@uniswap/lib/=lib/solidity-lib/\",\":@uniswap/v2-core/=lib/v2-core/\",\":@uniswap/v3-core/=lib/v3-core/\",\":@uniswap/v3-periphery/=lib/v3-periphery/\",\":base64-sol/=lib/base64/\",\":ds-test/=lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":ozv4/=lib/ozv4/\",\":script/=script/\",\":solidity-lib/=lib/solidity-lib/contracts/\",\":solidity-stringutils/=lib/solidity-stringutils/src/\",\":solmate/=lib/solmate/src/\",\":src/=src/\",\":test/=test/\"]},\"sources\":{\"lib/ds-test/src/test.sol\":{\"keccak256\":\"0x8758531bbac3972efcf1fa46383dbe1d276406fe527bc7abb2f236486278e83b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://1f64264d61506847acf8761e84aff690cebe830958eac00bac7924d8be569240\",\"dweb:/ipfs/QmSekDJvJ82MZAmr63n7YvfLzQ7gS4NLSHPmHL3GN3rw8k\"]},\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x609e3a00319169988cc8272e837f350a9ba77cf8f8f62e4897a8e4a8a5f0fb27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b24435e35ba5b080ebd6e8976c23fb735c7212d042be8462ffd2ea50c5250363\",\"dweb:/ipfs/QmPeVvN7FS4oMmCuYAeRdZihTfrG4tA7Vvunuvv59a6wre\"]},\"lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0xdb05fd11858f232b8b5c6c9175229bdd061c277c34f13b0bdc64d333bcbd2617\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08ae865564d9c1fa1012b61db77a2da2844ac1ae0a216b16c9fe9ab65ddf80af\",\"dweb:/ipfs/QmfFfmkjb2Qfc5dPJvwQgjTMbeQ12dTPFeAQ8Gb944U44g\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0x097b75f7171af89f433407e040d11b22fc26e2fe03793c2cfe18cad390d7af8b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://19d1dca7b398e517499ffa65ad44df69cdd016f37dc57e2d07d50279d3ddee17\",\"dweb:/ipfs/QmfMFR25367GB5PoBi1KZxWs1hZcJtC3eANiioG3dKj8ah\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0x0e6f32877ab26a83c9334eb5a000bf326bd2a0b04fea8647e045cea9c445f534\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8965978bfa66ddab8db95449a96ee47d44c62ebcb4271ab293e847f359a2ba7d\",\"dweb:/ipfs/QmazxpekoHnno4ySoNUct7NcKx6UJR7UvcMtJ9JYsBDEUh\"]},\"lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"lib/forge-std/src/StdInvariant.sol\":{\"keccak256\":\"0xd855e1fea6247f1bef118e2bee9f0039832988b7173fd17766bba4014ae26a3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c58c0f0b66852dfd3c76fb7958d8b023489d7a874c7cb1ad4f2021f9ec8ab477\",\"dweb:/ipfs/Qmd3MX9HAkNUhPddL29ekwhqgRnjAobZ35UzchaJZNACCN\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x9e2a7521190c462a0667706385f1c52a816220a9813ca8ac520fba7ba45d660b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d23017fe6570b28130a731b86179352b93a5fb5af32f11559837afc1186293c\",\"dweb:/ipfs/QmR3p6zG5Kmcr8gKocFCSopLHfXv1AziPJbH17nKyMxwxV\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0xd1517df281f973dba8b7ba52c02d3df552b60d91b8f47e4669049da648778673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52e43264f58a5dcfd985f3c99aa81064805aa8f1c2b4c6521fd63d45cdbba8d5\",\"dweb:/ipfs/QmUMTF6cRjt5tCQrrgQDXVRmHQLjevNsTvLFdaA1m9TBj9\"]},\"lib/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0x2882555b0f58e48144e46e9aa5118a506b31ad7485327d54e8f681e8b414c337\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2850bcb1322de9d9dd87ded42debbe0e8fc4048173788d4c00c98b50e5f76985\",\"dweb:/ipfs/QmUiPKnj7GZLLQbJGY7bVDu79Q9jGEYNjR5ZBgwFy8mH97\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x6584855fecbe5b6a9f8ebdb26b37c58532c5bc5cc6e1737dfa7c8a045087be55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40a35a4d292b4fed02e11d5f25fb474f10a7c4eb99f75b5383dc23fcb6e55d3c\",\"dweb:/ipfs/QmYZ2nz1EmNh4xLWf4YybZoa1Da1z3Wq3w4pneMhkouMi4\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0xddf16afce2bb7bbb69ed868d4c7ee8b4ea4ffbf8929427fe799682f107534945\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52f6ebde2a4cb9d08aea5fb3d62b2f15961bb9a29d6d9e30dd0859d0d631cabf\",\"dweb:/ipfs/QmeJ9Dp1GYUggzjGiwTZkxCfB15NfyfgcyrNZL5tyWZbVZ\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0x8a81219d889270a97a367f260f5352882d5ca84d065d1461ae0cbe4b1205f7f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0731ba2ebb83df97746878648e1f9630a67b944da857842fd276968b437bc77d\",\"dweb:/ipfs/QmaB7DvHSfFRUeGf9DTEduyG8qzPUgFkT8GAGf38Bh44Fy\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0xcd5706f5a7025825d9fd389c89b49bf571f9abaea8a062dc4048320b5b43bf46\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c066485a7d4bd18d44efb4c89274b0959e8066b9a480383a2ce07d7f31555f88\",\"dweb:/ipfs/QmckeYfA5FtAjcxaytq69Dpj6uY57tbQ61kNPPxXi9kgbW\"]},\"lib/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]},\"src/erc20/IERC20.sol\":{\"keccak256\":\"0xbf33f9f19e0114283a92f8e4634c293527f6d695f64cbbbf39a63e0a0fb8dbae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f85239a96f8597eedd3e22e37f5a2dd979b2fcd5cc8cae6a6d9f0210e220e09e\",\"dweb:/ipfs/QmUKN9ciqs19zMz3FPK3vBu4EaifWvciF5EsAzVDRsiNeb\"]},\"test/utils/DSTestPlusF.sol\":{\"keccak256\":\"0xea1305de4c802b36b73f04c4c3f98c0649a9c6bb698d3f800c2ae294f667ef65\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://c91902c34d510ffe0c4202c3918147857d30c0fab5659cd892073bed86c8f692\",\"dweb:/ipfs/QmTNg4q6BGLtRauXNxD57h1TmBZiBNhNns2yLKLh69Ut24\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_contract",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "_errorMessage",
              "type": "string"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "enforceHasContractCode"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "excludedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifactSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedArtifactSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "targetedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "writeTokenBalance"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=lib/ozv4/",
        ":@uniswap/lib/=lib/solidity-lib/",
        ":@uniswap/v2-core/=lib/v2-core/",
        ":@uniswap/v3-core/=lib/v3-core/",
        ":@uniswap/v3-periphery/=lib/v3-periphery/",
        ":base64-sol/=lib/base64/",
        ":ds-test/=lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":ozv4/=lib/ozv4/",
        ":script/=script/",
        ":solidity-lib/=lib/solidity-lib/contracts/",
        ":solidity-stringutils/=lib/solidity-stringutils/src/",
        ":solmate/=lib/solmate/src/",
        ":src/=src/",
        ":test/=test/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/utils/DSTestPlusF.sol": "DSTestPlusF"
      },
      "libraries": {}
    },
    "sources": {
      "lib/ds-test/src/test.sol": {
        "keccak256": "0x8758531bbac3972efcf1fa46383dbe1d276406fe527bc7abb2f236486278e83b",
        "urls": [
          "bzz-raw://1f64264d61506847acf8761e84aff690cebe830958eac00bac7924d8be569240",
          "dweb:/ipfs/QmSekDJvJ82MZAmr63n7YvfLzQ7gS4NLSHPmHL3GN3rw8k"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Base.sol": {
        "keccak256": "0x609e3a00319169988cc8272e837f350a9ba77cf8f8f62e4897a8e4a8a5f0fb27",
        "urls": [
          "bzz-raw://b24435e35ba5b080ebd6e8976c23fb735c7212d042be8462ffd2ea50c5250363",
          "dweb:/ipfs/QmPeVvN7FS4oMmCuYAeRdZihTfrG4tA7Vvunuvv59a6wre"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdAssertions.sol": {
        "keccak256": "0xdb05fd11858f232b8b5c6c9175229bdd061c277c34f13b0bdc64d333bcbd2617",
        "urls": [
          "bzz-raw://08ae865564d9c1fa1012b61db77a2da2844ac1ae0a216b16c9fe9ab65ddf80af",
          "dweb:/ipfs/QmfFfmkjb2Qfc5dPJvwQgjTMbeQ12dTPFeAQ8Gb944U44g"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdChains.sol": {
        "keccak256": "0x097b75f7171af89f433407e040d11b22fc26e2fe03793c2cfe18cad390d7af8b",
        "urls": [
          "bzz-raw://19d1dca7b398e517499ffa65ad44df69cdd016f37dc57e2d07d50279d3ddee17",
          "dweb:/ipfs/QmfMFR25367GB5PoBi1KZxWs1hZcJtC3eANiioG3dKj8ah"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdCheats.sol": {
        "keccak256": "0x0e6f32877ab26a83c9334eb5a000bf326bd2a0b04fea8647e045cea9c445f534",
        "urls": [
          "bzz-raw://8965978bfa66ddab8db95449a96ee47d44c62ebcb4271ab293e847f359a2ba7d",
          "dweb:/ipfs/QmazxpekoHnno4ySoNUct7NcKx6UJR7UvcMtJ9JYsBDEUh"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdError.sol": {
        "keccak256": "0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77",
        "urls": [
          "bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6",
          "dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdInvariant.sol": {
        "keccak256": "0xd855e1fea6247f1bef118e2bee9f0039832988b7173fd17766bba4014ae26a3c",
        "urls": [
          "bzz-raw://c58c0f0b66852dfd3c76fb7958d8b023489d7a874c7cb1ad4f2021f9ec8ab477",
          "dweb:/ipfs/Qmd3MX9HAkNUhPddL29ekwhqgRnjAobZ35UzchaJZNACCN"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x9e2a7521190c462a0667706385f1c52a816220a9813ca8ac520fba7ba45d660b",
        "urls": [
          "bzz-raw://7d23017fe6570b28130a731b86179352b93a5fb5af32f11559837afc1186293c",
          "dweb:/ipfs/QmR3p6zG5Kmcr8gKocFCSopLHfXv1AziPJbH17nKyMxwxV"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdMath.sol": {
        "keccak256": "0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2",
        "urls": [
          "bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92",
          "dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStorage.sol": {
        "keccak256": "0xd1517df281f973dba8b7ba52c02d3df552b60d91b8f47e4669049da648778673",
        "urls": [
          "bzz-raw://52e43264f58a5dcfd985f3c99aa81064805aa8f1c2b4c6521fd63d45cdbba8d5",
          "dweb:/ipfs/QmUMTF6cRjt5tCQrrgQDXVRmHQLjevNsTvLFdaA1m9TBj9"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStyle.sol": {
        "keccak256": "0x2882555b0f58e48144e46e9aa5118a506b31ad7485327d54e8f681e8b414c337",
        "urls": [
          "bzz-raw://2850bcb1322de9d9dd87ded42debbe0e8fc4048173788d4c00c98b50e5f76985",
          "dweb:/ipfs/QmUiPKnj7GZLLQbJGY7bVDu79Q9jGEYNjR5ZBgwFy8mH97"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdUtils.sol": {
        "keccak256": "0x6584855fecbe5b6a9f8ebdb26b37c58532c5bc5cc6e1737dfa7c8a045087be55",
        "urls": [
          "bzz-raw://40a35a4d292b4fed02e11d5f25fb474f10a7c4eb99f75b5383dc23fcb6e55d3c",
          "dweb:/ipfs/QmYZ2nz1EmNh4xLWf4YybZoa1Da1z3Wq3w4pneMhkouMi4"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0xddf16afce2bb7bbb69ed868d4c7ee8b4ea4ffbf8929427fe799682f107534945",
        "urls": [
          "bzz-raw://52f6ebde2a4cb9d08aea5fb3d62b2f15961bb9a29d6d9e30dd0859d0d631cabf",
          "dweb:/ipfs/QmeJ9Dp1GYUggzjGiwTZkxCfB15NfyfgcyrNZL5tyWZbVZ"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0x8a81219d889270a97a367f260f5352882d5ca84d065d1461ae0cbe4b1205f7f0",
        "urls": [
          "bzz-raw://0731ba2ebb83df97746878648e1f9630a67b944da857842fd276968b437bc77d",
          "dweb:/ipfs/QmaB7DvHSfFRUeGf9DTEduyG8qzPUgFkT8GAGf38Bh44Fy"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0xcd5706f5a7025825d9fd389c89b49bf571f9abaea8a062dc4048320b5b43bf46",
        "urls": [
          "bzz-raw://c066485a7d4bd18d44efb4c89274b0959e8066b9a480383a2ce07d7f31555f88",
          "dweb:/ipfs/QmckeYfA5FtAjcxaytq69Dpj6uY57tbQ61kNPPxXi9kgbW"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/interfaces/IMulticall3.sol": {
        "keccak256": "0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a",
        "urls": [
          "bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0",
          "dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2"
        ],
        "license": "MIT"
      },
      "src/erc20/IERC20.sol": {
        "keccak256": "0xbf33f9f19e0114283a92f8e4634c293527f6d695f64cbbbf39a63e0a0fb8dbae",
        "urls": [
          "bzz-raw://f85239a96f8597eedd3e22e37f5a2dd979b2fcd5cc8cae6a6d9f0210e220e09e",
          "dweb:/ipfs/QmUKN9ciqs19zMz3FPK3vBu4EaifWvciF5EsAzVDRsiNeb"
        ],
        "license": "MIT"
      },
      "test/utils/DSTestPlusF.sol": {
        "keccak256": "0xea1305de4c802b36b73f04c4c3f98c0649a9c6bb698d3f800c2ae294f667ef65",
        "urls": [
          "bzz-raw://c91902c34d510ffe0c4202c3918147857d30c0fab5659cd892073bed86c8f692",
          "dweb:/ipfs/QmTNg4q6BGLtRauXNxD57h1TmBZiBNhNns2yLKLh69Ut24"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/utils/DSTestPlusF.sol",
    "id": 75394,
    "exportedSymbols": {
      "DSTest": [
        2291
      ],
      "DSTestPlusF": [
        75393
      ],
      "IERC20": [
        52666
      ],
      "StdAssertions": [
        3802
      ],
      "StdChains": [
        4496
      ],
      "StdCheats": [
        6772
      ],
      "StdInvariant": [
        7062
      ],
      "StdStorage": [
        7812
      ],
      "StdStyle": [
        10456
      ],
      "StdUtils": [
        11263
      ],
      "Test": [
        11312
      ],
      "TestBase": [
        2351
      ],
      "Vm": [
        12646
      ],
      "console": [
        20710
      ],
      "console2": [
        28806
      ],
      "stdError": [
        6838
      ],
      "stdJson": [
        7638
      ],
      "stdMath": [
        7780
      ],
      "stdStorage": [
        9245
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:852:120",
    "nodes": [
      {
        "id": 75307,
        "nodeType": "PragmaDirective",
        "src": "39:23:120",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".17"
        ]
      },
      {
        "id": 75308,
        "nodeType": "ImportDirective",
        "src": "64:28:120",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 75394,
        "sourceUnit": 11313,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 75310,
        "nodeType": "ImportDirective",
        "src": "94:46:120",
        "nodes": [],
        "absolutePath": "src/erc20/IERC20.sol",
        "file": "src/erc20/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 75394,
        "sourceUnit": 52667,
        "symbolAliases": [
          {
            "foreign": {
              "id": 75309,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 52666,
              "src": "103:6:120",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 75393,
        "nodeType": "ContractDefinition",
        "src": "142:748:120",
        "nodes": [
          {
            "id": 75316,
            "nodeType": "UsingForDirective",
            "src": "177:32:120",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 75313,
              "name": "stdStorage",
              "nameLocations": [
                "183:10:120"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 9245,
              "src": "183:10:120"
            },
            "typeName": {
              "id": 75315,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 75314,
                "name": "StdStorage",
                "nameLocations": [
                  "198:10:120"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 7812,
                "src": "198:10:120"
              },
              "referencedDeclaration": 7812,
              "src": "198:10:120",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_StdStorage_$7812_storage_ptr",
                "typeString": "struct StdStorage"
              }
            }
          },
          {
            "id": 75373,
            "nodeType": "FunctionDefinition",
            "src": "215:408:120",
            "nodes": [],
            "body": {
              "id": 75372,
              "nodeType": "Block",
              "src": "344:279:120",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    75329
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 75329,
                      "mutability": "mutable",
                      "name": "tkn",
                      "nameLocation": "361:3:120",
                      "nodeType": "VariableDeclaration",
                      "scope": 75372,
                      "src": "354:10:120",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$52666",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 75328,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 75327,
                          "name": "IERC20",
                          "nameLocations": [
                            "354:6:120"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 52666,
                          "src": "354:6:120"
                        },
                        "referencedDeclaration": 52666,
                        "src": "354:6:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$52666",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 75333,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 75331,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75322,
                        "src": "374:5:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 75330,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 52666,
                      "src": "367:6:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$52666_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 75332,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "367:13:120",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$52666",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "354:26:120"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 75339,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 75320,
                            "src": "410:4:120",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 75338,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "402:7:120",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 75337,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "402:7:120",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 75340,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "402:13:120",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 75341,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75324,
                        "src": "417:6:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 75334,
                        "name": "tkn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75329,
                        "src": "390:3:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$52666",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 75336,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "394:7:120",
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 52621,
                      "src": "390:11:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 75342,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "390:34:120",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 75343,
                  "nodeType": "ExpressionStatement",
                  "src": "390:34:120"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 75360,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75324,
                        "src": "523:6:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 75357,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 75318,
                            "src": "505:2:120",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "expression": {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 75351,
                                        "name": "token",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 75322,
                                        "src": "469:5:120",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 75350,
                                      "name": "IERC20",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 52666,
                                      "src": "462:6:120",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IERC20_$52666_$",
                                        "typeString": "type(contract IERC20)"
                                      }
                                    },
                                    "id": 75352,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "462:13:120",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$52666",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 75353,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "476:9:120",
                                  "memberName": "balanceOf",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 52594,
                                  "src": "462:23:120",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function (address) view external returns (uint256)"
                                  }
                                },
                                "id": 75354,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "486:8:120",
                                "memberName": "selector",
                                "nodeType": "MemberAccess",
                                "src": "462:32:120",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 75347,
                                    "name": "token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 75322,
                                    "src": "451:5:120",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "id": 75344,
                                    "name": "stdstore",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2347,
                                    "src": "435:8:120",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_StdStorage_$7812_storage",
                                      "typeString": "struct StdStorage storage ref"
                                    }
                                  },
                                  "id": 75346,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "444:6:120",
                                  "memberName": "target",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 8766,
                                  "src": "435:15:120",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_StdStorage_$7812_storage_ptr_$_t_address_$returns$_t_struct$_StdStorage_$7812_storage_ptr_$bound_to$_t_struct$_StdStorage_$7812_storage_ptr_$",
                                    "typeString": "function (struct StdStorage storage pointer,address) returns (struct StdStorage storage pointer)"
                                  }
                                },
                                "id": 75348,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "435:22:120",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_StdStorage_$7812_storage_ptr",
                                  "typeString": "struct StdStorage storage pointer"
                                }
                              },
                              "id": 75349,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "458:3:120",
                              "memberName": "sig",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 8784,
                              "src": "435:26:120",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_StdStorage_$7812_storage_ptr_$_t_bytes4_$returns$_t_struct$_StdStorage_$7812_storage_ptr_$bound_to$_t_struct$_StdStorage_$7812_storage_ptr_$",
                                "typeString": "function (struct StdStorage storage pointer,bytes4) returns (struct StdStorage storage pointer)"
                              }
                            },
                            "id": 75355,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "435:60:120",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_StdStorage_$7812_storage_ptr",
                              "typeString": "struct StdStorage storage pointer"
                            }
                          },
                          "id": 75356,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "496:8:120",
                          "memberName": "with_key",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 8820,
                          "src": "435:69:120",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_StdStorage_$7812_storage_ptr_$_t_address_$returns$_t_struct$_StdStorage_$7812_storage_ptr_$bound_to$_t_struct$_StdStorage_$7812_storage_ptr_$",
                            "typeString": "function (struct StdStorage storage pointer,address) returns (struct StdStorage storage pointer)"
                          }
                        },
                        "id": 75358,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "435:73:120",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StdStorage_$7812_storage_ptr",
                          "typeString": "struct StdStorage storage pointer"
                        }
                      },
                      "id": 75359,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "509:13:120",
                      "memberName": "checked_write",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8914,
                      "src": "435:87:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_StdStorage_$7812_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_struct$_StdStorage_$7812_storage_ptr_$",
                        "typeString": "function (struct StdStorage storage pointer,uint256)"
                      }
                    },
                    "id": 75361,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "435:95:120",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 75362,
                  "nodeType": "ExpressionStatement",
                  "src": "435:95:120"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 75366,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 75318,
                            "src": "564:2:120",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 75364,
                            "name": "tkn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 75329,
                            "src": "550:3:120",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$52666",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 75365,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "554:9:120",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 52594,
                          "src": "550:13:120",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 75367,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "550:17:120",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 75368,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75324,
                        "src": "569:6:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "62616c616e63652073686f756c6420494e43524541534520286166746572206d696e7429",
                        "id": 75369,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "577:38:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7fcd0c7ea1c1bfbdc76f9feaa1a0e47f617901cc0b7c894ec63845c29a43f520",
                          "typeString": "literal_string \"balance should INCREASE (after mint)\""
                        },
                        "value": "balance should INCREASE (after mint)"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7fcd0c7ea1c1bfbdc76f9feaa1a0e47f617901cc0b7c894ec63845c29a43f520",
                          "typeString": "literal_string \"balance should INCREASE (after mint)\""
                        }
                      ],
                      "id": 75363,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2519,
                        2544,
                        2557,
                        2573,
                        2615,
                        2657,
                        2699,
                        2736,
                        2773,
                        2810,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 539,
                      "src": "541:8:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 75370,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "541:75:120",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 75371,
                  "nodeType": "ExpressionStatement",
                  "src": "541:75:120"
                }
              ]
            },
            "functionSelector": "49b53548",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "writeTokenBalance",
            "nameLocation": "224:17:120",
            "parameters": {
              "id": 75325,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 75318,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "259:2:120",
                  "nodeType": "VariableDeclaration",
                  "scope": 75373,
                  "src": "251:10:120",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 75317,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "251:7:120",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 75320,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "279:4:120",
                  "nodeType": "VariableDeclaration",
                  "scope": 75373,
                  "src": "271:12:120",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 75319,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "271:7:120",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 75322,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "301:5:120",
                  "nodeType": "VariableDeclaration",
                  "scope": 75373,
                  "src": "293:13:120",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 75321,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "293:7:120",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 75324,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "324:6:120",
                  "nodeType": "VariableDeclaration",
                  "scope": 75373,
                  "src": "316:14:120",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 75323,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "316:7:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "241:95:120"
            },
            "returnParameters": {
              "id": 75326,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "344:0:120"
            },
            "scope": 75393,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 75392,
            "nodeType": "FunctionDefinition",
            "src": "629:259:120",
            "nodes": [],
            "body": {
              "id": 75391,
              "nodeType": "Block",
              "src": "721:167:120",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    75381
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 75381,
                      "mutability": "mutable",
                      "name": "contractSize",
                      "nameLocation": "739:12:120",
                      "nodeType": "VariableDeclaration",
                      "scope": 75391,
                      "src": "731:20:120",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 75380,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "731:7:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 75382,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "731:20:120"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "770:62:120",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "784:38:120",
                        "value": {
                          "arguments": [
                            {
                              "name": "_contract",
                              "nodeType": "YulIdentifier",
                              "src": "812:9:120"
                            }
                          ],
                          "functionName": {
                            "name": "extcodesize",
                            "nodeType": "YulIdentifier",
                            "src": "800:11:120"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "800:22:120"
                        },
                        "variableNames": [
                          {
                            "name": "contractSize",
                            "nodeType": "YulIdentifier",
                            "src": "784:12:120"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "london",
                  "externalReferences": [
                    {
                      "declaration": 75375,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "812:9:120",
                      "valueSize": 1
                    },
                    {
                      "declaration": 75381,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "784:12:120",
                      "valueSize": 1
                    }
                  ],
                  "id": 75383,
                  "nodeType": "InlineAssembly",
                  "src": "761:71:120"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 75387,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 75385,
                          "name": "contractSize",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 75381,
                          "src": "849:12:120",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 75386,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "864:1:120",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "849:16:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "id": 75388,
                        "name": "_errorMessage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75377,
                        "src": "867:13:120",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 75384,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "841:7:120",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 75389,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "841:40:120",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 75390,
                  "nodeType": "ExpressionStatement",
                  "src": "841:40:120"
                }
              ]
            },
            "functionSelector": "60f98dc7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "enforceHasContractCode",
            "nameLocation": "638:22:120",
            "parameters": {
              "id": 75378,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 75375,
                  "mutability": "mutable",
                  "name": "_contract",
                  "nameLocation": "669:9:120",
                  "nodeType": "VariableDeclaration",
                  "scope": 75392,
                  "src": "661:17:120",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 75374,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "661:7:120",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 75377,
                  "mutability": "mutable",
                  "name": "_errorMessage",
                  "nameLocation": "694:13:120",
                  "nodeType": "VariableDeclaration",
                  "scope": 75392,
                  "src": "680:27:120",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 75376,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "680:6:120",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "660:48:120"
            },
            "returnParameters": {
              "id": 75379,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "721:0:120"
            },
            "scope": 75393,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 75311,
              "name": "Test",
              "nameLocations": [
                "166:4:120"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 11312,
              "src": "166:4:120"
            },
            "id": 75312,
            "nodeType": "InheritanceSpecifier",
            "src": "166:4:120"
          }
        ],
        "canonicalName": "DSTestPlusF",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          75393,
          11312,
          2351,
          2348,
          11263,
          7062,
          6772,
          6093,
          4496,
          3802,
          2291
        ],
        "name": "DSTestPlusF",
        "nameLocation": "151:11:120",
        "scope": 75394,
        "usedErrors": []
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 120
}